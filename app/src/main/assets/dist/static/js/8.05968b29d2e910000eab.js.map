{"version":3,"sources":["webpack:///static/js/8.05968b29d2e910000eab.js","webpack:///./src/components/People/people.vue?0cee","webpack:///./src/components/People/people.vue","webpack:///./src/components/People/people.vue?d459","webpack:///./src/components/People/svg.content.js","webpack:///./src/components/People/people.vue?c65e","webpack:///./src/views/drugsAndElse/symptoms.vue?ff8e","webpack:///./node_modules/vivus/dist/vivus.js","webpack:///./src/components/People/sex.js","webpack:///./src/components/People/people.vue?1198","webpack:///./src/views/drugsAndElse/symptoms.vue?a4d8","webpack:///./src/components/People/svg.panzoom.js","webpack:///./src/views/drugsAndElse/symptoms.vue?d99a","webpack:///./src/views/drugsAndElse/symptoms.vue","webpack:///./src/views/drugsAndElse/symptoms.vue?8856","webpack:///./node_modules/svg.js/dist/svg.js","webpack:///./node_modules/hammerjs/hammer.js"],"names":["webpackJsonp","0Ykn","module","__webpack_exports__","__webpack_require__","injectStyle","ssrContext","helpers_extends","extends_default","n","keys","keys_default","svg","svg_default","sex","sex_default","hammer","hammer_default","vivus","vivus_default","People_people","Boolean","Array","String","Number","Function","props","type","default","face","lineColor","duration","pathTimingFunction","animTimingFunction","ease","delay","delayOpacity","clickOpacity","bodyPosition","isAnimation","initFill","animateEnd","data","isAnimate","sexData","a","svgFace","this","svgSex","clickBuf","isLabelClick","mounted","svgRender","methods","decodeType","timingProps","start","LINEAR","svgAgainInit","self","draw","animate","opacity","afterAll","remove","decode","$refs","svginit","clear","style","createGroup","midden","svgSwitchVivus","svgSwitchNo","prams","id","gLabel","faceRect","children","map","label","rect","dataAttr","fill","attr","stroke","clientRect","getBoundingClientRect","width","height","str","fronts","group","val","wholeBody","faceClient","node","preserveAspectRatio","viewBox","obj","wood","tapEnd","createPath","addEventListener","hammerGroup","on","arr","path","d","newData","watch","newVal","oldVal","render","_vm","_h","$createElement","_self","_c","ref","staticClass","staticRenderFns","esExports","components_People_people","normalizeComponent","__vue_styles__","Component","0sgZ","exports","SVG","extend","G","gPosition","company","x","y","rboxObj","rbox","drawRboxObj","doc","px","x2","pxX","pxY","y2","gResize","console","log","zoom","createLinearGradient","aColor","bColor","linear","gradient","stop","at","x1","y1","FJbZ","content","i","locals","G8X/","Jn6l","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Pathformer","element","Error","constructor","document","getElementById","window","SVGElement","SVGGElement","test","nodeName","el","scan","Vivus","options","callback","setupEnv","isReady","setElement","setOptions","setCallback","init","prototype","TYPES","ATTR_WATCH","fn","pathData","pathDom","elements","querySelectorAll","join","length","tagName","toLowerCase","parseAttr","attributes","pathMaker","parentNode","replaceChild","lineToPath","newElement","rectToPath","parseFloat","rx","ry","parseInt","Math","min","max","polylineToPath","points","trim","split","indexOf","formattedPoints","push","polygonToPath","ellipseToPath","cx","cy","startX","startY","endX","endY","circleToPath","r","pathTag","createElementNS","name","setAttribute","value","output","requestAnimFrame","cancelAnimFrame","parsePositiveInt","EASE","cos","PI","EASE_OUT","pow","EASE_IN","EASE_OUT_BOUNCE","base","rate","rateR","abs","onLoad","parentEl","file","e","domSandbox","createElement","innerHTML","responseText","svgTag","querySelector","appendChild","oReq","XMLHttpRequest","open","send","SVGSVGElement","HTMLObjectElement","contentDocument","getAttribute","insertBefore","removeChild","allowedTypes","allowedStarts","undefined","Object","isIE","navigator","userAgent","dashGap","forceRender","hasOwnProperty","reverseStack","selfDestroy","onReady","frameLength","currentFrame","delayUnit","speed","handle","ignoreInvisible","mapping","paths","pAttrs","pathObj","totalLength","lengthMeter","timePoint","isInvisible","ceil","getTotalLength","isNaN","warn","strokeDasharray","strokeDashoffset","renderPath","reverse","startAt","drawer","reset","trace","destroy","instanceCallback","progress","floor","index","newPath","cloneNode","starter","play","listener","isInViewport","removeEventListener","getStatus","setFrameProgress","finish","round","ignoreAttr","h","scrolled","scrollY","viewed","getViewportH","elBCR","elHeight","elTop","top","elBottom","client","docElem","clientHeight","inner","innerHeight","pageYOffset","scrollTop","documentElement","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","defaultValue","apply","SN53","woman","front","head","neck","transform","abdomen","upperLimb","waist","genitals","theLegs","back","man","SzyH","version","sources","names","mappings","sourcesContent","sourceRoot","Ti6e","escape","cTPc","normalizeEvent","ev","touches","clientX","clientY","Doc","Nested","panZoom","off","lastP","lastTouches","zoomFactor","zoomMin","MIN_VALUE","zoomMax","MAX_VALUE","zoomInProgress","wheelZoom","preventDefault","deltaY","lvl","p","point","pinchZoomStart","fire","event","defaultPrevented","pinchZoom","passive","pinchZoomStop","currentTouches","lastDelta","sqrt","currentDelta","zoomAmount","currentFocus","lastFocus","focusP","box","Box","viewbox","Matrix","translate","scale","focus","panStart","panning","panStop","currentP","p1","p2","deltaP","level","getComputedStyle","getPropertyValue","v","zoomX","zoomY","Infinity","Point","FX","add","concat","h2kR","defineProperty","x_header","tab","tab_item","inline_loading","slide","tabs","people","drugsAndElse_symptoms","components","XHeader","Tab","TabItem","InlineLoading","SvgProple","Tabs","beforeRouteLeave","to","from","next","localStorage","setItem","$route","params","code","lastcodeduge_Y","removeItem","tabIndex","defalutText","locationName","pageIndex","pageSize","dataobj","list","initdata","_this","$ajax","post","$root","host","MSH.1","MSH.2","cbm","token","loginInfo","then","initdrugdata","_this2","scroll","finishPullUp","finishPullDown","rows","judge","$vux","toast","text","pullingDown","pullingUp","todrugDetail","$router","goToPage","attrs","left-options","backText","preventGoBack","on-click-back","$event","goBack","_v","_s","active-colo","default-color","custom-bar-width","line-width","bar-active-color","model","$$v","expression","staticStyle","currentPageIndex","update:currentPageIndex","padTop","domProps","CJBGS","CZZMS","CBY","CBFZ","CZDYJB","CZL","CYFBJ","pullDownRefresh","isloading","$store","state","CONTROL_LOADDING","_l","key","click","CBM","src","CYPXT","alt","onerror","defaultImg","CYPMC","CYPJJ","CZDCKJG","_e","views_drugsAndElse_symptoms","or9x","root","factory","call","pathRegReplace","b","c","replace","regex","dots","array_clone","clone","slice","isArray","is","matches","selector","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","camelCase","s","m","g","toUpperCase","capitalize","charAt","fullHex","hex","substring","compToHex","comp","toString","proportionalSize","bbox","deltaTransformPoint","matrix","arrayToMatrix","f","parseMatrix","ensureCentre","o","target","arrayToString","il","assignNewId","childNodes","adopt","eid","fullBox","w","idFromReference","url","match","reference","float32String","globalRef","supported","parser","prepare","ns","xmlns","xlink","svgjs","createSVGRect","did","create","modules","arguments","pop","Set","inherit","invent","config","initializer","construct","parent","Container","instance","Gradient","Element","namespace","defs","setData","JSON","parse","body","getElementsByTagName","nested","size","poly","polyline","native","numberAndUnit","rgb","transforms","whitespace","isHex","isRgb","isCss","isBlank","isNumber","isPercent","isImage","delimiter","hyphen","pathLetters","isPathLetter","numbersWithDots","utils","array","block","result","filter","radians","degrees","filterSVGElements","nodes","defaults","fill-opacity","stroke-opacity","stroke-width","stroke-linejoin","stroke-linecap","offset","stop-opacity","stop-color","font-size","font-family","text-anchor","Color","color","exec","toHex","toRgb","brightness","morph","destination","pos","isColor","fallback","valueOf","lastValue","lastDestination","settle","seen","string","PointArray","toLine","len","move","getBBox","pathHandlers","M","p0","L","H","V","C","S","Q","T","Z","A","mlhvqtcsa","j","jl","PathArray","l","equalCommands","pathArray","sourceArray","destinationArray","paramCnt","reduce","prev","curr","unit","isFinite","toJSON","plus","number","minus","times","divide","relative","_stroke","_event","dom","center","writeDataToDom","after","removeElement","addTo","put","putIn","inside","show","hide","visible","classes","hasClass","addClass","removeClass","toggleClass","get","parents","well","Parent","firstChild","each","lines","removeAttribute","stringify","easing","-","<>",">","sin","<","MorphObj","Situation","reversed","reversing","Date","loop","loops","animations","styles","once","_target","situations","active","situation","paused","lastPos","absPos","_speed","queue","timeToAbsPos","timestamp","absPosToTime","startAnimFrame","stopAnimFrame","animationFrame","step","bind","startCurrent","initAnimations","shift","dequeue","source","initialTransformation","matrixify","clearQueue","clearCurrent","jumpToEnd","atEnd","temp","atStart","isAbsPos","durDivSpd","pause","last","easeIt","wrapper","detail","_callStart","during","eased","duringAll","method","args","ignoreTime","absPosInt","lastLoop","fx","eachAt","multiply","undo","extract","isEased","real","num","Text","plot","leading","ViewBox","update","Stop","left","merge","xMin","xMax","yMin","yMax","forEach","BBox","contains","Exception","topParent","Shape","clientLeft","clientTop","clientWidth","tbox","RBox","addOffset","pageXOffset","screenCTM","inverse","abcdef","py","skewX","atan2","transformedX","transformedY","skewY","scaleX","scaleY","rotation","around","rotate","flip","skew","tan","createSVGMatrix","ctm","getCTM","getScreenCTM","createSVGPoint","matrixTransform","nodeValue","image","Image","pattern","setAttributeNS","rebuild","Rotate","Scale","Skew","Translate","untransform","kv","toParent","pCtm","toDoc","Transformation","inversed","_undo","cssText","has","first","deep","hasChildNodes","lastChild","_defs","ungroup","depth","Defs","flatten","view","we","he","wm","hm","reg","offsetWidth","offsetHeight","listeners","handlerMap","listenerId","binding","_svgjsListenerId","Event","dispatchEvent","CustomEvent","cancelable","gbox","trans","spof","nextSibling","siblings","position","previous","forward","backward","before","Mask","targets","unmask","mask","maskWith","masker","ClipPath","unclip","clip","clipWith","clipper","fy","Pattern","patternUnits","Bare","words","createTextNode","Symbol","symbol","Use","use","Rect","Circle","circle","Ellipse","ellipse","Line","line","Polyline","Polygon","polygon","_array","morphArray","Path","load","img","_loaded","ratio","_error","loaded","error","_rebuild","_build","oy","nodeType","newLined","textContent","build","tspan","newLine","textPath","blankLineOffset","dy","plain","Tspan","dx","t","getComputedTextLength","TextPath","track","link","linkTo","Marker","marker","sugar","prefix","extension","dmove","radius","pointAt","getPointAtLength","font","members","splice","set","remember","k","memory","forget","_memory","select","query","CustomEventPoly","bubbles","createEvent","initCustomEvent","lastTime","vendors","currTime","getTime","timeToCall","rxKx","exportName","setTimeoutContext","timeout","context","bindFn","invokeArrayArg","arg","iterator","deprecate","message","deprecationMessage","stack","child","properties","childP","baseP","_super","assign","boolOrFn","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","removeEventListeners","hasParent","inStr","find","inArray","findByKey","toArray","uniqueArray","sort","results","values","prefixed","property","prop","camelProp","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","ownerDocument","defaultView","parentWindow","Input","manager","inputTarget","domHandler","enable","createInputInstance","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","getCenter","timeStamp","now","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","getScale","getRotation","maxPointers","computeIntervalInputData","srcEvent","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","lastInterval","COMPUTE_INTERVAL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","PROPS_XY","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","changed","changedTouches","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","touch","mouse","primaryTouch","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","DEDUP_TIMEOUT","isSyntheticEvent","DEDUP_DISTANCE","TouchAction","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","Recognizer","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","recognizers","preset","Manager","handlers","oldCssProps","touchAction","toggleCssProps","item","recognizeWith","requireFailure","cssProps","triggerDomEvent","gestureEvent","initEvent","gesture","TEST_ELEMENT","TypeError","nextKey","dest","MOBILE_REGEX","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","compute","getTouchAction","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","force","stopped","curRecognizer","existing","events","STATE_FAILED","Tap","Pan","Swipe","Pinch","Press"],"mappings":"AAAAA,cAAc,IAERC,OACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCLA,SAAAC,GAAAC,GACAF,EAAA,QDOA,GAAIG,GAAkBH,EAAoB,QACtCI,EAA+BJ,EAAoBK,EAAEF,GAGrDG,EAAON,EAAoB,QAC3BO,EAA4BP,EAAoBK,EAAEC,GAGlDE,EAAMR,EAAoB,QAC1BS,EAA2BT,EAAoBK,EAAEG,GAGjDE,EAAMV,EAAoB,QAC1BW,EAA2BX,EAAoBK,EAAEK,GAWjDE,GARcZ,EAAoB,QAIpBA,EAAoB,QAIzBA,EAAoB,SAC7Ba,EAA8Bb,EAAoBK,EAAEO,GAGpDE,EAAQd,EAAoB,QAC5Be,EAA6Bf,EAAoBK,EAAES,GE1BvDE,GAOYC,QAQAA,QAQAC,MAYAC,OAOAC,OAQAD,OAQAA,OAYAA,OAOAA,OAOAA,OAKAC,OAkBAC,SAMAJ,QAIDE,OAQAE,UA5HTC,OACEZ,KAKEa,KAAMN,QACNO,SAAS,GAEXC,MAKEF,KAAMN,QACNO,SAAS,GAEXE,WAKEH,KAAML,MACNM,QAAS,WACP,OAAQ,UAAW,aAGvBV,OAOES,KAAMJ,OACNK,QAAS,WAEXG,UAIEJ,KAAMH,OACNI,QAAS,KAEXI,oBAKEL,KAAMJ,OACNK,QAAS,UAEXK,oBAKEN,KAAMJ,OACNK,QAAS,UAEXM,MASEP,KAAMJ,OACNK,QAAS,KAEXO,OAIER,KAAMJ,OACNK,QAAS,OAEXQ,cAIET,KAAMJ,OACNK,QAAS,OAEXS,cAEEV,KAAMH,OACNI,QAAQ,IAEVU,cAeEX,KAAMF,UAERc,aAIEZ,KAAMN,QACNO,SAAS,GAEXY,UACEb,KAAKJ,OACLK,QAAQ,QAEVa,YAKEd,KAAKF,SACLG,QAAQ,eAGZc,KAjIa,WAkIX,OACEC,WAAW,EACXC,QAAS7B,EAAA8B,EACTC,QAASC,KAAKlB,KACdmB,OAAQD,KAAKjC,IACbmC,SAAU,KACVC,cAAc,IAGlBC,QA3Ia,WA4IXJ,KAAKK,aAEPC,SACEC,WADO,WAKL,OAHaP,KAAKC,OAAS,MAAQ,QACrBD,KAAKD,QAAU,QAAU,SAKzCS,YARO,WASL,GAAIA,IACF5B,KAAMoB,KAAK7B,MACXa,SAAUgB,KAAKhB,SACfyB,MAAO,YACPxB,mBAAoBb,EAAA0B,EAAMY,OAC1BxB,mBAAoBd,EAAA0B,EAAMY,OAQ5B,OALAF,GAAYvB,mBACVb,EAAA0B,EAAME,KAAKf,qBAAuBuB,EAAYvB,mBAChDuB,EAAYtB,mBACVd,EAAA0B,EAAME,KAAKd,qBAAuBsB,EAAYtB,mBAEzCsB,GAETG,aAxBO,WAyBL,GAAIC,GAAOZ,IACXA,MAAKJ,WAAY,EACjBI,KAAKa,KACFC,SAAS1B,MAAMwB,EAAKvB,eACpB0B,QAAQ,GACRC,SAAS,WACRJ,EAAKC,KAAKE,QAAQ,GAClBH,EAAKC,KAAKI,SACVL,EAAKP,eAGXA,UApCO,WAqCL,GAAIa,GAASlB,KAAKO,YAClBP,MAAKa,KAAO/C,IAAIkC,KAAKmB,MAAMC,SAC3BpB,KAAKa,KAAKQ,QACVrB,KAAKa,KAAKS,MACR,QACAtB,KAAKC,OAASD,KAAKjB,UAAU,GAAKiB,KAAKjB,UAAU,IAInDiB,KAAKuB,YAAYL,EAAO,GAAIA,EAAO,IAEnClB,KAAKwB,SAELxB,KAAKG,cAAe,EAEhBH,KAAKR,YACPQ,KAAKyB,iBAELzB,KAAK0B,eAGTD,eA1DO,WA2DL,GAAIE,GAAQ3B,KAAKQ,cACbI,EAAOZ,IACX,IAAI5B,GAAA0B,EAAME,KAAKa,KAAKe,KAAMD,EAAO,WAC/Bf,EAAKhB,WAAY,EACjBgB,EAAKT,cAAe,CAEpB,IAAI0B,GAASjB,EAAKkB,SAASC,UAE3BnB,GAAKlB,aAELmC,EAAOG,IAAI,SAASC,GACFA,EAAMF,WAEZC,IAAI,SAASE,GACrB,GAAIC,GAAWD,EAAKvC,KAAK,QACrBwC,GAASC,OACXF,EAAKG,MACHC,OAAQ1B,EAAKX,OAASW,EAAK7B,UAAU,GAAK6B,EAAK7B,UAAU,KAG3DmD,EAAKpB,SAAU3B,KAAMyB,EAAKzB,KAAMC,MAAOwB,EAAKxB,QACvCiD,MAAOD,KAAMD,EAASC,KAAME,OAAQH,EAASC,eAM5DV,YAtFO,WAuFL1B,KAAKJ,WAAY,EACNI,KACO8B,SAASC,WAEpBC,IAAI,SAASC,GACFA,EAAMF,WACZC,IAAI,SAASE,GACrB,GAAIC,GAAWD,EAAKvC,KAAK,QACrBwC,GAASC,MACXF,EAAKG,MAAOD,KAAMD,EAASC,KAAME,OAAQH,EAASC,WAKxDpC,KAAKG,cAAe,GAGtBqB,OAxGO,WAyGL,GAAIe,GAAavC,KAAKmB,MAAMC,QAAQoB,uBACpCxC,MAAKa,KAAK4B,MAAMF,EAAWE,OAC3BzC,KAAKa,KAAK6B,OAAOH,EAAWG,SAE9BnB,YA7GO,SA6GK3C,EAAM+D,GAChB,GAAIhD,GAAOK,KAAKH,QAAQjB,EAExB,IAAKe,EAAL,CAIA,GAAIiD,GAASjD,EAAKgD,GACd/B,EAAOZ,KAEP8B,EAAYlB,EAAKkB,SAAWlB,EAAKC,KAAKgC,OAE1BjF,KAAYgF,GAClBZ,IAAI,SAASc,GACrBlC,EAAKmC,UAAUH,EAAQE,EAAKhB,IAG9B,IAAIkB,GAAalB,EAASmB,KAAKT,uBAE/BxC,MAAKa,KAAKwB,MACRa,oBAAsB,gBACtBC,QAAA,OAAiBH,EAAWP,MAA5B,IAAqCO,EAAWN,WAMpDK,UAxIO,SAwIGK,EAAKN,EAAKO,GA2BlB,QAASC,KACH1C,EAAKT,cAILS,EAAKrB,cACPqB,EAAKrB,aAAauD,EAAIlC,EAAKV,UAhC/B,GAAIU,GAAOZ,KAEP6C,EAAQQ,EAAKR,OACjBjC,GAAK2C,WAAWV,EAAOO,EAAIN,IAE3BD,EAAMI,KAAKO,iBAAiB,aAAa,WACnC5C,EAAKT,cAINS,EAAKtB,eACNuD,EAAM9B,QAAQH,EAAKtB,cAEnBsB,EAAKV,SAAW2C,IAKpB,IAAIY,GAAc,GAAIvF,GAAA4B,EAAO+C,EAAMI,KACnCQ,GAAYC,GAAG,UAAUJ,GACzBG,EAAYC,GAAG,MAAMJ,GAErBT,EAAMI,KAAKO,iBAAiB,YAAY,WACtC5C,EAAKV,SAASa,QAAQ,MAgB1BwC,WAhLO,SAgLIV,EAAOc,GAChB,GAAM/C,GAAOZ,MACR2D,GAAQd,IAIbc,EAAI3B,IAAI,SAASoB,GACf,GAAIQ,GAAOf,EAAMe,KAAKR,EAAIS,EAC1B,IAAIT,EAAIf,KAAM,CACZuB,EAAKjE,KAAK,QAASyD,EAAIf,KAEvB,IAAIyB,GAAArG,OAAe2F,EAAIf,KACvByB,GAAQ1B,KAAOxB,EAAKnB,SACpBqE,EAAQxB,OAAS,eACjBsB,EAAKvB,KAAKyB,QAKlBC,OACEjF,KADK,SACAkF,EAAQC,GACPjE,KAAKJ,WAAaoE,GAAUhE,KAAKD,UACnCC,KAAKW,eACLX,KAAKD,QAAUiE,IAGnBjG,IAPK,SAODiG,EAAQC,GACNjE,KAAKJ,WAAaoE,GAAUhE,KAAKC,SACnCD,KAAKW,eACLX,KAAKC,OAAS+D,OCtWtBE,EAAA,WAA0B,GAAAC,GAAAnE,KAAaoE,EAAAD,EAAAE,cAAkD,QAAxBF,EAAAG,MAAAC,IAAAH,GAAwB,OAAiBI,IAAA,UAAAC,YAAA,SAC1GC,KACAC,GAAiBT,SAAAQ,mBACjBE,EAAA,EFAAC,EAAAxH,EAAA,QASAyH,EAAAxH,EAKAyH,EAAAF,EACAxG,EACAuG,GATA,EAWAE,EAPA,kBAEA,KAUA1H,GAAA,EAAA2H,EAAA,SDswBMC,OACA,SAAU7H,EAAQ8H,IIhyBvB,WAEGC,IAAIC,OAAOD,IAAIE,GAOXC,UAAW,SAAU1C,EAAK2C,GACtBA,EAAUA,GAAW,EACrB3C,EAAMA,GAAO,SAID,SAARA,GAA0B,UAARA,GAClB3C,KAAKuF,EAAE,GAGC,QAAR5C,GAAyB,WAARA,GACjB3C,KAAKwF,EAAE,GAGC,WAAR7C,IACA3C,KAAKuF,EAAE,GACPvF,KAAKwF,EAAE,GAGX,IAAIC,GAAUzF,KAAK0F,OACfC,EAAc3F,KAAK4F,MAAMF,MAE7B,IAAY,SAAR/C,EAAgB,CAChB,GAAIkD,IAAMJ,EAAQF,EAAID,CACtBtF,MAAKuF,EAAEM,GAGX,GAAY,UAARlD,EAAiB,CACjB,GAAIkD,GAAKF,EAAYlD,MAAQgD,EAAQK,GAAKR,CAC1CtF,MAAKuF,EAAEM,GAGX,GAAY,WAARlD,EAAkB,CAClB,GAAIoD,IAAQJ,EAAYlD,MAAQgD,EAAQhD,OAAS,EAAKgD,EAAQF,EAC1DS,GAAQL,EAAYjD,OAAS+C,EAAQ/C,QAAU,EAAK+C,EAAQD,CAEhExF,MAAKuF,EAAEQ,GACP/F,KAAKwF,EAAEQ,GAGX,GAAY,QAARrD,EAAe,CACf,GAAIkD,IAAMJ,EAAQD,EAAIF,CACtBtF,MAAKwF,EAAEK,GAGX,GAAY,WAARlD,EAAkB,CAClB,GAAIkD,GAAKF,EAAYjD,OAAS+C,EAAQQ,GAAKX,CAC3CtF,MAAKwF,EAAEK,GAGX,MAAO7F,OAEXkG,QAAS,WACL,GAAIT,GAAUzF,KAAK0F,OACfC,EAAc3F,KAAK4F,MAAMF,MAE7B,IADAS,QAAQC,IAAIX,EAAQ/C,OAAOiD,EAAYjD,QACnC+C,EAAQhD,OAASkD,EAAYlD,MAAO,CACpC,GAAI4D,GAAOV,EAAYlD,MAAQgD,EAAQhD,KACvCzC,MAAK4F,MAAMS,KAAKA,GAGpB,GAAIZ,EAAQ/C,QAAUiD,EAAYjD,OAC9B,GAAI2D,GAAOV,EAAYjD,OAAS+C,EAAQ/C,QAOhD4D,qBAAsB,SAAUC,EAAQC,GACpCD,EAASA,GAAU,UACnBC,EAASA,GAAU,SAEnB,IAAIC,GAASzG,KAAK0G,SAAS,SAAU,SAAUC,GAC3CA,EAAKC,GAAG,EAAGL,GACXI,EAAKC,GAAG,EAAGJ,IAYf,OATAC,GAAOpE,MACHwE,GAAM,KACNf,GAAM,KACNgB,GAAM,KACNb,GAAM,SAGVjG,KAAKkC,KAAK,GAAI,KAAKE,KAAKqE,GAEjBzG,YJ0yBb+G,KACA,SAAU5J,EAAQ8H,EAAS5H,GKz4BjC,GAAA2J,GAAA3J,EAAA,OACA,iBAAA2J,SAAA7J,EAAA8J,EAAAD,EAAA,MACAA,EAAAE,SAAA/J,EAAA8H,QAAA+B,EAAAE,OAEA7J,GAAA,mBAAA2J,GAAA,OLk5BMG,OACA,SAAUhK,EAAQ8H,EAAS5H,GMv5BjC,GAAA2J,GAAA3J,EAAA,OACA,iBAAA2J,SAAA7J,EAAA8J,EAAAD,EAAA,MACAA,EAAAE,SAAA/J,EAAA8H,QAAA+B,EAAAE,OAEA7J,GAAA,mBAAA2J,GAAA,ONg6BMI,KACA,SAAUjK,EAAQ8H,EAAS5H,GAEjC,YO16BA,IAAAgK,GAAAC;;;;;;CASA,WAoBA,QAAAC,GAAAC,GAEA,YAAAA,EACA,SAAAC,OAAA,4DAIA,IAAAD,EAAAE,cAAAlJ,UACAgJ,EAAAG,SAAAC,eAAAJ,IAEA,SAAAC,OAAA,iFAGA,MAAAD,YAAAK,QAAAC,YACAN,YAAAK,QAAAE,aACA,SAAAC,KAAAR,EAAAS,WAGA,SAAAR,OAAA,iFAFAzH,MAAAkI,GAAAV,EAMAxH,KAAAmI,KAAAX,GAiSA,QAAAY,GAAAZ,EAAAa,EAAAC,GAEAC,IAGAvI,KAAAwI,SAAA,EACAxI,KAAAyI,WAAAjB,EAAAa,GACArI,KAAA0I,WAAAL,GACArI,KAAA2I,YAAAL,GAEAtI,KAAAwI,SACAxI,KAAA4I,OAnSArB,EAAAsB,UAAAC,OAAA,uDASAvB,EAAAsB,UAAAE,YAAA,8DAQAxB,EAAAsB,UAAAV,KAAA,SAAAtK,GAIA,OAHAmL,GAAAxB,EAAAyB,EAAAC,EACAC,EAAAtL,EAAAuL,iBAAApJ,KAAA8I,MAAAO,KAAA,MAEApC,EAAA,EAAiBA,EAAAkC,EAAAG,OAAqBrC,IACtCO,EAAA2B,EAAAlC,GACA+B,EAAAhJ,KAAAwH,EAAA+B,QAAAC,cAAA,UACAP,EAAAD,EAAAhJ,KAAAyJ,UAAAjC,EAAAkC,aACAR,EAAAlJ,KAAA2J,UAAAnC,EAAAyB,GACAzB,EAAAoC,WAAAC,aAAAX,EAAA1B,IAYAD,EAAAsB,UAAAiB,WAAA,SAAAtC,GACA,GAAAuC,MACAlD,EAAAW,EAAAX,IAAA,EACAC,EAAAU,EAAAV,IAAA,EACAhB,EAAA0B,EAAA1B,IAAA,EACAG,EAAAuB,EAAAvB,IAAA,CAGA,OADA8D,GAAAlG,EAAA,IAAAgD,EAAA,IAAAC,EAAA,IAAAhB,EAAA,IAAAG,EACA8D,GAYAxC,EAAAsB,UAAAmB,WAAA,SAAAxC,GACA,GAAAuC,MACAxE,EAAA0E,WAAAzC,EAAAjC,IAAA,EACAC,EAAAyE,WAAAzC,EAAAhC,IAAA,EACA/C,EAAAwH,WAAAzC,EAAA/E,QAAA,EACAC,EAAAuH,WAAAzC,EAAA9E,SAAA,CAEA,IAAA8E,EAAA0C,IAAA1C,EAAA2C,GAAA,CACA,GAAAD,GAAAE,SAAA5C,EAAA0C,GAAA,QACAC,EAAAC,SAAA5C,EAAA2C,GAAA,OACAD,GAAAG,KAAAC,IAAAD,KAAAE,IAAAL,EAAA,EAAAC,EAAAD,EAAA,GAAAzH,EAAA,GACA0H,EAAAE,KAAAC,IAAAD,KAAAE,IAAAJ,EAAA,EAAAD,EAAAC,EAAA,GAAAzH,EAAA,GAEAqH,EAAAlG,EAAA,MAAA0B,EAAA2E,GAAA,IAAA1E,EAAA,OACAD,EAAA9C,EAAAyH,GAAA,IAAA1E,EAAA,MACA0E,EAAA,IAAAC,EAAA,WAAA5E,EAAA9C,GAAA,KAAA+C,EAAA2E,GAAA,OACA5E,EAAA9C,GAAA,KAAA+C,EAAA9C,EAAAyH,GAAA,MACAD,EAAA,IAAAC,EAAA,WAAA5E,EAAA9C,EAAAyH,GAAA,KAAA1E,EAAA9C,GAAA,OACA6C,EAAA2E,GAAA,KAAA1E,EAAA9C,GAAA,MACAwH,EAAA,IAAAC,EAAA,UAAA5E,EAAA,KAAAC,EAAA9C,EAAAyH,GAAA,MACA5E,EAAA,KAAAC,EAAA2E,GAAA,MACAD,EAAA,IAAAC,EAAA,WAAA5E,EAAA2E,GAAA,IAAA1E,MAGAuE,GAAAlG,EAAA,IAAA0B,EAAA,IAAAC,EAAA,MACAD,EAAA9C,GAAA,IAAA+C,EAAA,MACAD,EAAA9C,GAAA,KAAA+C,EAAA9C,GAAA,KACA6C,EAAA,KAAAC,EAAA9C,GAAA,IAEA,OAAAqH,IAUAxC,EAAAsB,UAAA2B,eAAA,SAAAhD,GACA,GAEAP,GAAArD,EAFAmG,KACAU,EAAAjD,EAAAiD,OAAAC,OAAAC,MAAA,IAIA,SAAAnD,EAAAiD,OAAAG,QAAA,MACA,GAAAC,KACA,KAAA5D,EAAA,EAAeA,EAAAwD,EAAAnB,OAAmBrC,GAAA,EAClC4D,EAAAC,KAAAL,EAAAxD,GAAA,IAAAwD,EAAAxD,EAAA,GAEAwD,GAAAI,EAKA,IADAjH,EAAA,IAAA6G,EAAA,GACAxD,EAAA,EAAYA,EAAAwD,EAAAnB,OAAmBrC,KAC/B,IAAAwD,EAAAxD,GAAA2D,QAAA,OACAhH,GAAA,IAAA6G,EAAAxD,GAIA,OADA8C,GAAAlG,EAAAD,EACAmG,GAaAxC,EAAAsB,UAAAkC,cAAA,SAAAvD,GACA,GAAAuC,GAAAxC,EAAAsB,UAAA2B,eAAAhD,EAGA,OADAuC,GAAAlG,GAAA,IACAkG,GAUAxC,EAAAsB,UAAAmC,cAAA,SAAAxD,GACA,GAAAuC,MACAG,EAAAD,WAAAzC,EAAA0C,KAAA,EACAC,EAAAF,WAAAzC,EAAA2C,KAAA,EACAc,EAAAhB,WAAAzC,EAAAyD,KAAA,EACAC,EAAAjB,WAAAzC,EAAA0D,KAAA,EACAC,EAAAF,EAAAf,EACAkB,EAAAF,EACAG,EAAApB,WAAAgB,GAAAhB,WAAAC,GACAoB,EAAAJ,CAKA,OAHAnB,GAAAlG,EAAA,IAAAsH,EAAA,IAAAC,EACA,IAAAlB,EAAA,IAAAC,EAAA,UAAAkB,EAAA,IAAAC,EACA,IAAApB,EAAA,IAAAC,EAAA,UAAAgB,EAAA,IAAAG,EACAvB,GAUAxC,EAAAsB,UAAA0C,aAAA,SAAA/D,GACA,GAAAuC,MACAyB,EAAAvB,WAAAzC,EAAAgE,IAAA,EACAP,EAAAhB,WAAAzC,EAAAyD,KAAA,EACAC,EAAAjB,WAAAzC,EAAA0D,KAAA,EACAC,EAAAF,EAAAO,EACAJ,EAAAF,EACAG,EAAApB,WAAAgB,GAAAhB,WAAAuB,GACAF,EAAAJ,CAKA,OAHAnB,GAAAlG,EAAA,IAAAsH,EAAA,IAAAC,EACA,IAAAI,EAAA,IAAAA,EAAA,UAAAH,EAAA,IAAAC,EACA,IAAAE,EAAA,IAAAA,EAAA,UAAAL,EAAA,IAAAG,EACAvB,GAWAxC,EAAAsB,UAAAc,UAAA,SAAAnC,EAAAyB,GACA,GAAAhC,GAAA5E,EAAAoJ,EAAA9D,SAAA+D,gBAAA,oCACA,KAAAzE,EAAA,EAAYA,EAAAO,EAAAkC,WAAAJ,OAA+BrC,IAC3C5E,EAAAmF,EAAAkC,WAAAzC,IACA,IAAAjH,KAAA+I,WAAA6B,QAAAvI,EAAAsJ,OACAF,EAAAG,aAAAvJ,EAAAsJ,KAAAtJ,EAAAwJ,MAGA,KAAA5E,IAAAgC,GACAwC,EAAAG,aAAA3E,EAAAgC,EAAAhC,GAEA,OAAAwE,IAUAlE,EAAAsB,UAAAY,UAAA,SAAAjC,GAEA,OADAnF,GAAAyJ,KACA7E,EAAA,EAAiBA,EAAAO,EAAA8B,OAAoBrC,IAAA,CAGrC,GAFA5E,EAAAmF,EAAAP,IAEA,IAAAjH,KAAA+I,WAAA6B,QAAAvI,EAAAsJ,QAAA,IAAAtJ,EAAAwJ,MAAAjB,QAAA,KACA,SAAAnD,OAAA,mIAEAqE,GAAAzJ,EAAAsJ,MAAAtJ,EAAAwJ,MAEA,MAAAC,GAKA,IAAAvD,GAAAwD,EAAAC,EAAAC,CAyEA7D,GAAA1H,OAAA,SAAA6E,GAAsC,MAAAA,IACtC6C,EAAA8D,KAAA,SAAA3G,GAAsC,OAAA8E,KAAA8B,IAAA5G,EAAA8E,KAAA+B,IAAA,MACtChE,EAAAiE,SAAA,SAAA9G,GAAsC,SAAA8E,KAAAiC,IAAA,EAAA/G,EAAA,IACtC6C,EAAAmE,QAAA,SAAAhH,GAAsC,MAAA8E,MAAAiC,IAAA/G,EAAA,IACtC6C,EAAAoE,gBAAA,SAAAjH,GACA,GAAAkH,GAAA,EAAApC,KAAA8B,IAAA5G,GAAA,GAAA8E,KAAA+B,KACAM,EAAArC,KAAAiC,IAAAG,EAAA,KACAE,EAAAtC,KAAAiC,IAAA,EAAA/G,EAAA,EAEA,UAAAoH,GADA,EAAAtC,KAAAuC,IAAAvC,KAAA8B,IAAAO,GAAA,IAAArC,KAAA+B,OACAO,GAgBAvE,EAAAS,UAAAJ,WAAA,SAAAjB,EAAAa,GACA,GAAAwE,GAAAjM,CAGA,aAAA4G,EACA,SAAAC,OAAA,uDAIA,IAAAD,EAAAE,cAAAlJ,UACAgJ,EAAAG,SAAAC,eAAAJ,IAEA,SAAAC,OAAA,4EAMA,IAHAzH,KAAA8M,SAAAtF,EAGAa,KAAA0E,KAAA,CACA,GAAAnM,GAAAZ,IACA6M,GAAA,SAAAG,GACA,GAAAC,GAAAtF,SAAAuF,cAAA,MACAD,GAAAE,UAAAnN,KAAAoN,YAEA,IAAAC,GAAAJ,EAAAK,cAAA,MACA,KAAAD,EACA,SAAA5F,OAAA,0DAAAY,EAAA0E,KAGAnM,GAAAsH,GAAAmF,EACAzM,EAAAsH,GAAA0D,aAAA,gBACAhL,EAAAsH,GAAA0D,aAAA,iBACAhL,EAAAkM,SAAAS,YAAA3M,EAAAsH,IACAtH,EAAA4H,SAAA,EACA5H,EAAAgI,OACAhI,EAAA,KAGA,IAAA4M,GAAA,GAAA3F,QAAA4F,cAIA,OAHAD,GAAAhK,iBAAA,OAAAqJ,GACAW,EAAAE,KAAA,MAAArF,EAAA0E,UACAS,GAAAG,OAIA,OAAAnG,EAAAE,aACA,IAAAG,QAAA+F,cACA,IAAA/F,QAAAC,WACA,IAAAD,QAAAE,YACA/H,KAAAkI,GAAAV,EACAxH,KAAAwI,SAAA,CACA,MAEA,KAAAX,QAAAgG,kBACAjN,EAAAZ,KACA6M,EAAA,SAAAG,GACA,IAAApM,EAAA4H,QAAA,CAIA,GADA5H,EAAAsH,GAAAV,EAAAsG,iBAAAtG,EAAAsG,gBAAAR,cAAA,QACA1M,EAAAsH,IAAA8E,EACA,SAAAvF,OAAA,8DAEA7G,GAAAsH,KACAV,EAAAuG,aAAA,oBACAnN,EAAAkM,SAAAkB,aAAApN,EAAAsH,GAAAV,GACA5G,EAAAkM,SAAAmB,YAAAzG,GACA5G,EAAAsH,GAAA0D,aAAA,gBACAhL,EAAAsH,GAAA0D,aAAA,kBAEAhL,EAAA4H,SAAA,EACA5H,EAAAgI,OACAhI,EAAA,QAIAiM,KACArF,EAAAhE,iBAAA,OAAAqJ,EAEA,MAEA,SACA,SAAApF,OAAA,0FAWAW,EAAAS,UAAAH,WAAA,SAAAL,GACA,GAAA6F,IAAA,wEACAC,GAAA,kCAGA,QAAAC,KAAA/F,KAAAX,cAAA2G,OACA,SAAA5G,OAAA,6DAOA,IAJAY,QAIAA,EAAAzJ,OAAA,IAAAsP,EAAAtD,QAAAvC,EAAAzJ,MACA,SAAA6I,OAAA,wBAAAY,EAAAzJ,KAAA,uCAOA,IAJAoB,KAAApB,KAAAyJ,EAAAzJ,MAAAsP,EAAA,GAIA7F,EAAA5H,QAAA,IAAA0N,EAAAvD,QAAAvC,EAAA5H,OACA,SAAAgH,OAAA,wBAAAY,EAAA5H,MAAA,qCAsBA,IAnBAT,KAAAS,MAAA4H,EAAA5H,OAAA0N,EAAA,GAGAnO,KAAAsO,MAAA,IAAAzG,OAAA0G,UAAAC,UAAA5D,QAAA,cAAA/C,OAAA0G,UAAAC,UAAA5D,QAAA,kBAAA/C,OAAA0G,UAAAC,UAAA5D,QAAA,SACA5K,KAAAhB,SAAAiN,EAAA5D,EAAArJ,SAAA,KACAgB,KAAAZ,MAAA6M,EAAA5D,EAAAjJ,MAAA,MACAY,KAAAyO,QAAAxC,EAAA5D,EAAAoG,QAAA,GACAzO,KAAA0O,YAAArG,EAAAsG,eAAA,iBAAAtG,EAAAqG,YAAA1O,KAAAsO,KACAtO,KAAA4O,eAAAvG,EAAAuG,aACA5O,KAAA6O,cAAAxG,EAAAwG,YACA7O,KAAA8O,QAAAzG,EAAAyG,QACA9O,KAAAgC,OACAhC,KAAA+O,YAAA/O,KAAAgP,aAAAhP,KAAAiP,UAAAjP,KAAAkP,MAAAlP,KAAAmP,OAAA,KAEAnP,KAAAoP,kBAAA/G,EAAAsG,eAAA,sBAAAtG,EAAA+G,gBAEApP,KAAAd,mBAAAmJ,EAAAnJ,oBAAAkJ,EAAA1H,OACAV,KAAAf,mBAAAoJ,EAAApJ,oBAAAmJ,EAAA1H,OAEAV,KAAAZ,OAAAY,KAAAhB,SACA,SAAAyI,OAAA,6DAWAW,EAAAS,UAAAF,YAAA,SAAAL,GAEA,GAAAA,KAAAZ,cAAAhJ,SACA,SAAA+I,OAAA,+DAEAzH,MAAAsI,YAAA,cA6BAF,EAAAS,UAAAwG,QAAA,WACA,GAAApI,GAAAqI,EAAA1L,EAAA2L,EAAAC,EAAAC,EAAAC,EAAAC,CAIA,KAHAA,EAAAF,EAAAC,EAAA,EACAJ,EAAAtP,KAAAkI,GAAAkB,iBAAA,QAEAnC,EAAA,EAAaA,EAAAqI,EAAAhG,OAAkBrC,IAC/BrD,EAAA0L,EAAArI,GACAjH,KAAA4P,YAAAhM,KAGA4L,GACAtH,GAAAtE,EACA0F,OAAAe,KAAAwF,KAAAjM,EAAAkM,mBAGAC,MAAAP,EAAAlG,QACAzB,OAAA1B,iBAAA6J,MACA7J,QAAA6J,KAAA,yDAAApM,IAIA5D,KAAAgC,IAAA8I,KAAA0E,GACA5L,EAAAtC,MAAA2O,gBAAAT,EAAAlG,OAAA,KAAAkG,EAAAlG,OAAA,EAAAtJ,KAAAyO,SACA7K,EAAAtC,MAAA4O,iBAAAV,EAAAlG,OAAAtJ,KAAAyO,QACAe,EAAAlG,QAAAtJ,KAAAyO,QACAgB,GAAAD,EAAAlG,OAEAtJ,KAAAmQ,WAAAlJ,IAYA,KATAwI,EAAA,IAAAA,EAAA,EAAAA,EACAzP,KAAAZ,MAAA,OAAAY,KAAAZ,MAAAY,KAAAhB,SAAA,EAAAgB,KAAAZ,MACAY,KAAAiP,UAAAjP,KAAAZ,OAAAkQ,EAAAhG,OAAA,EAAAgG,EAAAhG,OAAA,KAGAtJ,KAAA4O,cACA5O,KAAAgC,IAAAoO,UAGAnJ,EAAA,EAAaA,EAAAjH,KAAAgC,IAAAsH,OAAqBrC,IAAA,CAGlC,OAFAuI,EAAAxP,KAAAgC,IAAAiF,GAEAjH,KAAApB,MACA,cACA4Q,EAAAa,QAAArQ,KAAAiP,UAAAhI,EACAuI,EAAAxQ,SAAAgB,KAAAhB,SAAAgB,KAAAZ,KACA,MAEA,gBACAoQ,EAAAa,QAAAX,EAAAD,EAAAzP,KAAAhB,SACAwQ,EAAAxQ,SAAAwQ,EAAAlG,OAAAmG,EAAAzP,KAAAhB,QACA,MAEA,YACA,YACA,YACAwQ,EAAAa,QAAA,EACAb,EAAAxQ,SAAAgB,KAAAhB,QACA,MAEA,qBACA4E,EAAA4L,EAAAtH,GACAqH,EAAAvP,KAAAyJ,UAAA7F,GACA4L,EAAAa,QAAAV,GAAA1D,EAAAsD,EAAA,cAAAvP,KAAAiP,YAAA,GACAO,EAAAxQ,SAAAiN,EAAAsD,EAAA,iBAAAvP,KAAAhB,UACA2Q,MAAAvB,KAAAmB,EAAA,cAAAC,EAAAa,QAAAb,EAAAa,QAAAb,EAAAxQ,SACAgB,KAAA+O,YAAA1E,KAAAE,IAAAvK,KAAA+O,YAAAS,EAAAa,QAAAb,EAAAxQ,SACA,MAEA,gBACA4E,EAAA4L,EAAAtH,GACAqH,EAAAvP,KAAAyJ,UAAA7F,GACA4L,EAAAa,QAAApE,EAAAsD,EAAA,cAAAvP,KAAAiP,YAAA,EACAO,EAAAxQ,SAAAiN,EAAAsD,EAAA,iBAAAvP,KAAAhB,UACAgB,KAAA+O,YAAA1E,KAAAE,IAAAvK,KAAA+O,YAAAS,EAAAa,QAAAb,EAAAxQ,UAGA0Q,GAAAF,EAAAlG,OACAtJ,KAAA+O,YAAA/O,KAAA+O,aAAA/O,KAAAhB,WAkBAoJ,EAAAS,UAAAyH,OAAA,WACA,GAAA1P,GAAAZ,IAGA,IAFAA,KAAAgP,cAAAhP,KAAAkP,MAEAlP,KAAAgP,cAAA,EACAhP,KAAA2G,OACA3G,KAAAuQ,YACG,MAAAvQ,KAAAgP,cAAAhP,KAAA+O,aAYH,MAJA/O,MAAAwQ,aACAxQ,KAAAmP,OAAApD,EAAA,WACAnL,EAAA0P,WATAtQ,MAAA2G,OACA3G,KAAAgP,aAAAhP,KAAA+O,YACA/O,KAAAwQ,QACAxQ,KAAA6O,aACA7O,KAAAyQ,UAUAzQ,KAAAsI,SAAAtI,MACAA,KAAA0Q,mBACA1Q,KAAA0Q,iBAAA1Q,MACAA,KAAA0Q,iBAAA,OAiBAtI,EAAAS,UAAA2H,MAAA,WACA,GAAAvJ,GAAA0J,EAAA/M,EAAAoL,CAEA,KADAA,EAAAhP,KAAAd,mBAAAc,KAAAgP,aAAAhP,KAAA+O,aAAA/O,KAAA+O,YACA9H,EAAA,EAAaA,EAAAjH,KAAAgC,IAAAsH,OAAqBrC,IAClCrD,EAAA5D,KAAAgC,IAAAiF,GACA0J,GAAA3B,EAAApL,EAAAyM,SAAAzM,EAAA5E,SACA2R,EAAA3Q,KAAAf,mBAAAoL,KAAAE,IAAA,EAAAF,KAAAC,IAAA,EAAAqG,KACA/M,EAAA+M,eACA/M,EAAA+M,WACA/M,EAAAsE,GAAA5G,MAAA4O,iBAAA7F,KAAAuG,MAAAhN,EAAA0F,QAAA,EAAAqH,IACA3Q,KAAAmQ,WAAAlJ,KAiBAmB,EAAAS,UAAAsH,WAAA,SAAAU,GACA,GAAA7Q,KAAA0O,aAAA1O,KAAAgC,KAAAhC,KAAAgC,IAAA6O,GAAA,CACA,GAAArB,GAAAxP,KAAAgC,IAAA6O,GACAC,EAAAtB,EAAAtH,GAAA6I,WAAA,EACAvB,GAAAtH,GAAA0B,WAAAC,aAAAiH,EAAAtB,EAAAtH,IACAsH,EAAAtH,GAAA4I,IAaA1I,EAAAS,UAAAD,KAAA,WAEA5I,KAAA+O,YAAA,EACA/O,KAAAgP,aAAA,EACAhP,KAAAgC,OAGA,GAAAuF,GAAAvH,KAAAkI,IACAlI,KAAAqP,UACArP,KAAAgR,UAEAhR,KAAA8O,SACA9O,KAAA8O,QAAA9O,OAaAoI,EAAAS,UAAAmI,QAAA,WACA,OAAAhR,KAAAS,OACA,aACA,MAEA,iBACAT,KAAAiR,MACA,MAEA,kBACA,GAAArQ,GAAAZ,KACAkR,EAAA,WACAtQ,EAAAuQ,aAAAvQ,EAAAkM,SAAA,KACAlM,EAAAqQ,OACApJ,OAAAuJ,oBAAA,SAAAF,IAGArJ,QAAArE,iBAAA,SAAA0N,GACAA,MAgBA9I,EAAAS,UAAAwI,UAAA,WACA,WAAArR,KAAAgP,aAAA,QAAAhP,KAAAgP,eAAAhP,KAAA+O,YAAA,kBAUA3G,EAAAS,UAAA0H,MAAA,WACA,MAAAvQ,MAAAsR,iBAAA,IAUAlJ,EAAAS,UAAA0I,OAAA,WACA,MAAAvR,MAAAsR,iBAAA,IAQAlJ,EAAAS,UAAAyI,iBAAA,SAAAX,GAIA,MAHAA,GAAAtG,KAAAC,IAAA,EAAAD,KAAAE,IAAA,EAAAoG,IACA3Q,KAAAgP,aAAA3E,KAAAmH,MAAAxR,KAAA+O,YAAA4B,GACA3Q,KAAAwQ,QACAxQ,MAeAoI,EAAAS,UAAAoI,KAAA,SAAA/B,EAAA5G,GAGA,GAFAtI,KAAA0Q,iBAAA,KAEAxB,GAAA,kBAAAA,GACAlP,KAAA0Q,iBAAAxB,EACAA,EAAA,SAEA,IAAAA,GAAA,gBAAAA,GACA,SAAAzH,OAAA,8BAYA,OATAa,IAAA,uBAAAtI,KAAA0Q,mBACA1Q,KAAA0Q,iBAAApI,GAIAtI,KAAAkP,SAAA,EACAlP,KAAAmP,QACAnP,KAAAsQ,SAEAtQ,MAQAoI,EAAAS,UAAAlC,KAAA,WAKA,MAJA3G,MAAAmP,SACAnD,EAAAhM,KAAAmP,QACAnP,KAAAmP,OAAA,MAEAnP,MASAoI,EAAAS,UAAA4H,QAAA,WACAzQ,KAAA2G,MACA,IAAAM,GAAArD,CACA,KAAAqD,EAAA,EAAaA,EAAAjH,KAAAgC,IAAAsH,OAAqBrC,IAClCrD,EAAA5D,KAAAgC,IAAAiF,GACArD,EAAAsE,GAAA5G,MAAA4O,iBAAA,KACAtM,EAAAsE,GAAA5G,MAAA2O,gBAAA,KACAjQ,KAAAmQ,WAAAlJ,IAyBAmB,EAAAS,UAAA+G,YAAA,SAAA1H,GACA,GAAAhG,GACAuP,EAAAvJ,EAAA6F,aAAA,cAEA,eAAA0D,EACA,UAAAA,IAGAzR,KAAAoP,kBACAlN,EAAAgG,EAAA1F,yBACAN,EAAAO,QAAAP,EAAAQ,SAcA0F,EAAAS,UAAAY,UAAA,SAAAjC,GACA,GAAAnF,GAAAyJ,IACA,IAAAtE,KAAAkC,WACA,OAAAzC,GAAA,EAAmBA,EAAAO,EAAAkC,WAAAJ,OAA+BrC,IAClD5E,EAAAmF,EAAAkC,WAAAzC,GACA6E,EAAAzJ,EAAAsJ,MAAAtJ,EAAAwJ,KAGA,OAAAC,IAUA1D,EAAAS,UAAAsI,aAAA,SAAAjJ,EAAAwJ,GACA,GAAAC,GAAA3R,KAAA4R,UACAC,EAAAF,EAAA3R,KAAA8R,eACAC,EAAA7J,EAAA1F,wBACAwP,EAAAD,EAAArP,OACAuP,EAAAN,EAAAI,EAAAG,IACAC,EAAAF,EAAAD,CAOA,OAFAN,MAAA,EAEAO,EAAAD,EAAAN,GAAAG,GAAA,GAAAF,GASAvJ,EAAAS,UAAAiJ,aAAA,WACA,GAAAM,GAAApS,KAAAqS,QAAAC,aACAC,EAAA1K,OAAA2K,WAEA,OAAAJ,GAAAG,EACAA,EAGAH,GASAhK,EAAAS,UAAA+I,QAAA,WACA,MAAA/J,QAAA4K,aAAAzS,KAAAqS,QAAAK,WAGAnK,EAAA,WAEAH,EAAAS,UAAAwJ,UASAjK,EAAAS,UAAAwJ,QAAAxK,OAAAF,SAAAgL,gBAOA5G,EAAA,WACA,MACAlE,QAAA+K,uBACA/K,OAAAgL,6BACAhL,OAAAiL,0BACAjL,OAAAkL,wBACAlL,OAAAmL,yBACA,SAAA1K,GACA,MAAAT,QAAAoL,WAAA3K,EAAA,YAUA0D,EAAA,WACA,MACAnE,QAAAqL,sBACArL,OAAAsL,4BACAtL,OAAAuL,yBACAvL,OAAAwL,uBACAxL,OAAAyL,wBACA,SAAA1R,GACA,MAAAiG,QAAA0L,aAAA3R,SAiBAqK,EAAA,SAAAJ,EAAA2H,GACA,GAAA1H,GAAA1B,SAAAyB,EAAA,GACA,OAAAC,IAAA,EAAAA,EAAA0H,GAMAnM,SAEK+G,MAFL9G,EAAA,WACA,MAAAc,IACKqL,MAAAxO,EAAAoC,MAAAlK,EAAA8H,QAAAqC,OP47BCoM,KACA,SAAUvW,EAAQ8H,GQlgExB9H,EAAO8H,SAEH0O,OAEIC,OACIC,OAEQhQ,EAAG,2yEACHxB,MACID,KAAM,aAIVyB,EAAG,s0BACHxB,MACID,KAAM,aAIVyB,EAAG,0kGACHxB,MACID,KAAM,aAIVyB,EAAG,otEACHxB,MACID,KAAM,aAIVyB,EAAG,0JACHxB,MACID,KAAM,aAIVyB,EAAG,sKACHxB,MACID,KAAM,aAIlB0R,OAEQjQ,EAAG,iwCACHxB,MACID,KAAM,UACN2R,UAAU,oCAIdlQ,EAAG,uRACHxB,MACID,KAAM,UACN2R,UAAU,oCAItBC,UAEQnQ,EAAE,8aACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,slBACFxB,MACID,KAAK,aAIjB6R,YAEQpQ,EAAE,mNACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,gsBACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,sNACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,+pBACFxB,MACID,KAAK,UACL2R,UAAU,oCAItBG,QAEQrQ,EAAE,8fACFxB,MACID,KAAK,aAITyB,EAAE,uLACFxB,MACID,KAAK,aAIjB+R,WAEQtQ,EAAE,wlBACFxB,MACID,KAAK,aAIjBgS,UAEQvQ,EAAE,ixBACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,osBACFxB,MACID,KAAK,UACL2R,UAAU,oCAGdlQ,EAAE,8eACFxB,MACID,KAAK,aAITyB,EAAE,kdACFxB,MACID,KAAK,aAITyB,EAAE,wQACFxB,MACID,KAAK,aAITyB,EAAE,wQACFxB,MACID,KAAK,aAITyB,EAAE,wQACFxB,MACID,KAAK,aAITyB,EAAE,yPACFxB,MACID,KAAK,aAITyB,EAAE,wQACFxB,MACID,KAAK,aAITyB,EAAE,wQACFxB,MACID,KAAK,aAITyB,EAAE,wQACFxB,MACID,KAAK,aAITyB,EAAE,wQACFxB,MACID,KAAK,aAITyB,EAAE,wQACFxB,MACID,KAAK,aAITyB,EAAE,yOACFxB,MACID,KAAK,cAMrBiS,MACItR,YAGQc,EAAE,moFACFxB,MACID,KAAK,aAITyB,EAAE,6iBACFxB,MACID,KAAK,aAITyB,EAAE,kcACFxB,MACID,KAAK,aAITyB,EAAE,u3BACFxB,MACID,KAAK,aAMTyB,EAAE,u2GACFxB,MACID,KAAK,aAITyB,EAAE,klDACFxB,MACID,KAAK,aAITyB,EAAE,4pBACFxB,MACID,KAAK,aAITyB,EAAE,6RACFxB,MACID,KAAK,aAITyB,EAAE,mSACFxB,MACID,KAAK,aAITyB,EAAE,8JACFxB,MACID,KAAK,aAITyB,EAAE,+JACFxB,MACID,KAAK,aAITyB,EAAE,oSACFxB,MACID,KAAK,aAITyB,EAAE,4MACFxB,MACID,KAAK,aAITyB,EAAE,8MACFxB,MACID,KAAK,aAITyB,EAAE,oLACFxB,MACID,KAAK,aAITyB,EAAE,6MACFxB,MACID,KAAK,aAMTyB,EAAE,+/BACFxB,MACID,KAAK,aAITyB,EAAE,khCACFxB,MACID,KAAK,eAOzBkS,KACIV,OACIC,OAEQhQ,EAAE,wsDACFxB,MACID,KAAK,UACL2R,UAAU,oCAKdlQ,EAAE,kgBACFxB,MACID,KAAK,UACL2R,UAAU,oCAKtBD,OAEQjQ,EAAE,mfACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,uYACFxB,MACID,KAAK,UACL2R,UAAU,oCAItBC,UAEQnQ,EAAE,+UACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,ggBACFxB,MACID,KAAK,UACL2R,UAAU,oCAItBE,YAEQpQ,EAAE,sjCACFxB,MACID,KAAK,UACL2R,UAAU,uCAIdlQ,EAAE,g4BACFxB,MACID,KAAK,UACL2R,UAAU,oCAItBG,QAEQrQ,EAAE,olBACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,oOACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,oOACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,oOACFxB,MACID,KAAK,UACL2R,UAAU,oCAItBI,WAEQtQ,EAAE,wrBACFxB,MACID,KAAK,UACL2R,UAAU,oCAItBK,UAEQvQ,EAAE,4oCACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,0QACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,oOACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,4oCACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,oOACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,0QACFxB,MACID,KAAK,UACL2R,UAAU,qCAK1BM,MACItR,YAGQc,EAAE,wtDACFxB,MACID,KAAK,aAITyB,EAAE,ocACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,ocACFxB,MACID,KAAK,UACL2R,UAAU,oCAOdlQ,EAAE,qnFACFxB,MACID,KAAK,UACL2R,UAAU,oCAIdlQ,EAAE,oOACFxB,MACID,KAAK,aAQTyB,EAAE,wgBACFxB,MACID,KAAK,aAITyB,EAAE,oOACFxB,MACID,KAAK,aAITyB,EAAE,oOACFxB,MACID,KAAK,aAITyB,EAAE,oNACFxB,MACID,KAAK,aAOTyB,EAAE,qiBACFxB,MACID,KAAK,aAOTyB,EAAE,oiCACFxB,MACID,KAAK,aAITyB,EAAE,knCACFxB,MACID,KAAK,aAITyB,EAAE,0QACFxB,MACID,KAAK,aAITyB,EAAE,qNACFxB,MACID,KAAK,aAITyB,EAAE,oOACFxB,MACID,KAAK,aAITyB,EAAE,4HACFxB,MACID,KAAK,aAITyB,EAAE,oOACFxB,MACID,KAAK,aAITyB,EAAE,iRACFxB,MACID,KAAK,aAITyB,EAAE,oOACFxB,MACID,KAAK,aAITyB,EAAE,4HACFxB,MACID,KAAK,iBRk6DvBmS,KACA,SAAUpX,EAAQ8H,EAAS5H,GSjhFjC4H,EAAA9H,EAAA8H,QAAA5H,EAAA,YAKA4H,EAAA6F,MAAA3N,EAAA8J,EAAA,oGAAuH,IAAYuN,QAAA,EAAAC,SAAA,8DAAAC,SAAAC,SAAA,8CAAkJ5H,KAAA,aAAA6H,gBAAA,qGAA2IC,WAAA,OT0hF1ZC,KACA,SAAU3X,EAAQ8H,EAAS5H,GUhiFjC,GAAA0X,GAAA1X,EAAA,OACA4H,GAAA9H,EAAA8H,QAAA5H,EAAA,YAKA4H,EAAA6F,MAAA3N,EAAA8J,EAAA,onEAAmnE8N,EAAA1X,EAAA,mBAA6F,IAAUmX,QAAA,EAAAC,SAAA,iEAAAC,SAAAC,SAAA,66BAAohC5H,KAAA,eAAA6H,gBAAA,oqEAA8sEC,WAAA,OVyiFt7KG,KACA,SAAU7X,EAAQ8H,IWxiFtB,WACE,YAEA,IAAIgQ,GAAiB,SAASC,GAK5B,MAJIA,GAAGC,UACLD,EAAGC,UAAYC,QAASF,EAAGE,QAASC,QAASH,EAAGG,WAG3CH,EAAGC,QAGZjQ,KAAIC,OAAOD,IAAIoQ,IAAKpQ,IAAIqQ,QAEtBC,QAAS,SAASnN,GAIhB,GAHArI,KAAKyV,IAAI,aAGM,IAAZpN,EAAmB,MAAOrI,KAE7BqI,GAAUA,KACV,IAIIqN,GAAOC,EAJPC,EAAavN,EAAQuN,YAAc,IACnCC,EAAUxN,EAAQwN,SAAWpX,OAAOqX,UACpCC,EAAU1N,EAAQ0N,SAAWtX,OAAOuX,UAEhBC,GAAiB,EAErCC,EAAY,SAAShB,GAIvB,GAHAA,EAAGiB,iBAGa,GAAbjB,EAAGkB,OAAN,CAEA,GAAIC,GAAMrW,KAAKqG,OAASuP,EAAaV,EAAGkB,OAAO/L,KAAKuC,IAAIsI,EAAGkB,QACvDE,EAAItW,KAAKuW,MAAMrB,EAAGE,QAASF,EAAGG,QAE/BgB,GAAMN,IACPM,EAAMN,GAELM,EAAMR,IACPQ,EAAMR,GAER7V,KAAKqG,KAAKgQ,EAAKC,KAGbE,EAAiB,QAAjBA,GAA0BtB,GAC5BS,EAAcV,EAAeC,GAE1BS,EAAYrM,OAAS,IACxB4L,EAAGiB,iBAEAnW,KAAKyW,KAAK,kBAAmBC,MAAOxB,IAAKwB,QAAQC,mBAGpD3W,KAAKyV,IAAI,qBAAsBe,GAE/BP,GAAiB,EACjB/Q,IAAIxB,GAAGiE,SAAU,oBAAqBiP,EAAW5W,MAAO6W,SAAQ,IAChE3R,IAAIxB,GAAGiE,SAAU,mBAAoBmP,EAAe9W,MAAO6W,SAAQ,OAGjEC,EAAgB,QAAhBA,GAAyB5B,GAC3BA,EAAGiB,iBACHF,GAAiB,EAEjBjW,KAAKyW,KAAK,gBAAiBC,MAAOxB,IAElChQ,IAAIuQ,IAAI9N,SAAS,oBAAqBiP,GACtC1R,IAAIuQ,IAAI9N,SAAS,mBAAoBmP,GACrC9W,KAAK0D,GAAG,qBAAsB8S,IAG5BI,EAAY,SAAS1B,GACvBA,EAAGiB,gBAEH,IAAIY,GAAiB9B,EAAeC,GAChC7O,EAAOrG,KAAKqG,OAGZ2Q,EAAY3M,KAAK4M,KACnB5M,KAAKiC,IAAIqJ,EAAY,GAAGP,QAAUO,EAAY,GAAGP,QAAS,GAC1D/K,KAAKiC,IAAIqJ,EAAY,GAAGN,QAAUM,EAAY,GAAGN,QAAS,IAGxD6B,EAAe7M,KAAK4M,KACtB5M,KAAKiC,IAAIyK,EAAe,GAAG3B,QAAU2B,EAAe,GAAG3B,QAAS,GAChE/K,KAAKiC,IAAIyK,EAAe,GAAG1B,QAAU0B,EAAe,GAAG1B,QAAS,IAG9D8B,EAAaH,EAAUE,GAEvB7Q,EAAOwP,GAAWsB,EAAa,GAAO9Q,EAAO0P,GAAWoB,EAAa,KACvEA,EAAa,EAEf,IAAIC,IACF7R,EAAGwR,EAAe,GAAG3B,QAAU,IAAO2B,EAAe,GAAG3B,QAAU2B,EAAe,GAAG3B,SACpF5P,EAAGuR,EAAe,GAAG1B,QAAU,IAAO0B,EAAe,GAAG1B,QAAU0B,EAAe,GAAG1B,UAGlFgC,GACF9R,EAAGoQ,EAAY,GAAGP,QAAU,IAAOO,EAAY,GAAGP,QAAUO,EAAY,GAAGP,SAC3E5P,EAAGmQ,EAAY,GAAGN,QAAU,IAAOM,EAAY,GAAGN,QAAUM,EAAY,GAAGN,UAGzEiB,EAAItW,KAAKuW,MAAMa,EAAa7R,EAAG6R,EAAa5R,GAC5C8R,EAAStX,KAAKuW,MAAM,EAAEa,EAAa7R,EAAE8R,EAAU9R,EAAG,EAAE6R,EAAa5R,EAAE6R,EAAU7R,GAC7E+R,EAAM,GAAIrS,KAAIsS,IAAIxX,KAAKyX,WAAW1D,WACpC,GAAI7O,KAAIwS,QACLC,UAAUrB,EAAE/Q,EAAG+Q,EAAE9Q,GACjBoS,MAAMT,EAAY,EAAG,GACrBQ,WAAWL,EAAO/R,GAAI+R,EAAO9R,GAGlCxF,MAAKyX,QAAQF,GAEb5B,EAAcoB,EAEd/W,KAAKyW,KAAK,QAASc,IAAKA,EAAKM,MAAOP,KAGlCQ,EAAW,QAAXA,GAAoB5C,GACtBA,EAAGiB,iBAEHnW,KAAKyV,IAAI,oBAAqBqC,GAE9BnC,EAAcV,EAAeC,GAE1Be,IAEHjW,KAAKyW,KAAK,YAAaC,MAAOxB,IAE9BQ,GAASnQ,EAAGoQ,EAAY,GAAGP,QAAS5P,EAAGmQ,EAAY,GAAGN,SAEtDnQ,IAAIxB,GAAGiE,SAAU,oBAAqBoQ,EAAS/X,MAC/CkF,IAAIxB,GAAGiE,SAAU,kBAAmBqQ,EAAShY,QAG3CgY,EAAU,QAAVA,GAAmB9C,GACrBA,EAAGiB,iBAEHnW,KAAKyW,KAAK,UAAWC,MAAOxB,IAE5BhQ,IAAIuQ,IAAI9N,SAAS,oBAAqBoQ,GACtC7S,IAAIuQ,IAAI9N,SAAS,kBAAmBqQ,GACpChY,KAAK0D,GAAG,oBAAqBoU,IAG3BC,EAAU,SAAS7C,GACrBA,EAAGiB,gBAEH,IAAIY,GAAiB9B,EAAeC,GAEhC+C,GAAY1S,EAAGwR,EAAe,GAAG3B,QAAS5P,EAAGuR,EAAe,GAAG1B,SAC/D6C,EAAKlY,KAAKuW,MAAM0B,EAAS1S,EAAG0S,EAASzS,GACrC2S,EAAKnY,KAAKuW,MAAMb,EAAMnQ,EAAGmQ,EAAMlQ,GAC/B4S,GAAUD,EAAG5S,EAAI2S,EAAG3S,EAAG4S,EAAG3S,EAAI0S,EAAG1S,GACjC+R,EAAM,GAAIrS,KAAIsS,IAAIxX,KAAKyX,WAAW1D,WAAU,GAAI7O,KAAIwS,QAASC,UAAUS,EAAO,GAAIA,EAAO,IAE7FpY,MAAKyX,QAAQF,GACb7B,EAAQuC,EAOV,OAJAjY,MAAK0D,GAAG,gBAAiBwS,GACzBlW,KAAK0D,GAAG,qBAAsB8S,EAAgBxW,MAAO6W,SAAQ,IAC7D7W,KAAK0D,GAAG,oBAAqBoU,EAAU9X,MAEhCA,MAITqG,KAAM,SAASgS,EAAO9B,GACpB,GAAIjV,GAAQuG,OAAOyQ,iBAAiBtY,KAAKiD,MACrCR,EAAQwH,WAAW3I,EAAMiX,iBAAiB,UAC1C7V,EAASuH,WAAW3I,EAAMiX,iBAAiB,WAC3CC,EAAIxY,KAAKyX,UACTgB,EAAQhW,EAAQ+V,EAAE/V,MAClBiW,EAAQhW,EAAS8V,EAAE9V,OACnB2D,EAAOgE,KAAKC,IAAImO,EAAOC,EAE3B,IAAY,MAATL,EACD,MAAOhS,EAGT,IAAI8Q,GAAa9Q,EAAOgS,CACrBlB,KAAewB,MAAUxB,EAAa1Y,OAAOqX,WAEhDS,EAAQA,GAAS,GAAIrR,KAAI0T,MAAMnW,EAAM,EAAIgW,EAAQD,EAAEjT,EAAG7C,EAAO,EAAIgW,EAAQF,EAAEhT,EAE3E,IAAI+R,GAAM,GAAIrS,KAAIsS,IAAIgB,GACnBzE,WAAU,GAAI7O,KAAIwS,QAChBE,MAAMT,EAAYZ,EAAMhR,EAAGgR,EAAM/Q,GAGtC,OAAGxF,MAAKyW,KAAK,QAASc,IAAKA,EAAKM,MAAOtB,IAAQG,QAAQC,iBAC9C3W,KAEFA,KAAKyX,QAAQF,MAIxBrS,IAAIC,OAAOD,IAAI2T,IACbxS,KAAM,SAASgS,EAAO9B,GACpB,MAAOvW,MAAK8Y,IAAI,QAAS,GAAI5T,KAAIzG,OAAO4Z,IAAQU,OAAOxC,eXuiFzDyC,KACA,SAAU7b,EAAQC,EAAqBC,GAE7C,YY3vFA,SAAAC,GAAAC,GACAF,EAAA,QZ2vFAgR,OAAO4K,eAAe7b,EAAqB,cAAgByO,OAAO,GAGlE,IAAIlO,GAAON,EAAoB,QAC3BO,EAA4BP,EAAoBK,EAAEC,GAGlDub,EAAW7b,EAAoB,QAG/B8b,EAAM9b,EAAoB,QAG1B+b,EAAW/b,EAAoB,QAG/Bgc,EAAiBhc,EAAoB,QAGrCic,EAAQjc,EAAoB,QAG5Bkc,EAAOlc,EAAoB,QAG3Bmc,EAASnc,EAAoB,QAkJAoc,Ga55FjCP,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAE,EAAA,EACAD,EAAA,GAPAG,YACAC,QAAAT,EAAA,EACAU,IAAAT,EAAA,EACAU,QAAAT,EAAA,EACAU,cAAAT,EAAA,EACAC,QAAA,EACAS,UAAAP,EAAA,EACAQ,KAAAT,EAAA,GAEAU,iBAVe,SAUEC,EAAIC,EAAMC,GAEZ,gBAAXF,EAAGvO,KAEP0O,aAAaC,QAAQ,iBAAkBta,KAAKua,OAAOC,OAAOC,MAAQ5S,OAAOwS,aAAaK,gBAEtFL,aAAaM,WAAW,kBAExBP,KAEAza,KApBe,WAqBf,OACAib,SAAU,EACVC,YAAa,KACbC,aAAc,GACdC,UAAW,EACXC,SAAU,GACVC,WACAC,UAkBA9a,QA9Ce,WA+CfJ,KAAK8a,aAAe9a,KAAKua,OAAOC,OAAO7O,KACvC3L,KAAKmb,YAEL7a,SAEA6a,SAFS,WAEE,GAAAC,GAAApb,IACXA,MAAKqb,MAAMC,KAAKtb,KAAKub,MAAMC,MAC3BC,QAAS,cACTC,QAAS,aACTC,IAAO3b,KAAKua,OAAOC,OAAOC,MAAQ5S,OAAOwS,aAAaK,eACtDkB,MAAS5b,KAAKub,MAAMM,UAAUD,QAC3BE,KAAK,SAAAnc,GACRwG,QAAQC,IAAIzG,OACO,KAARA,GAAuB/B,IAAY+B,GAAM2J,OAAS,EAE7D8R,EAAKH,QAAUtb,EAEfyb,EAAKH,cAKLc,aAnBS,WAmBM,GAAAC,GAAAhc,IACfA,MAAKqb,MAAMC,KAAKtb,KAAKub,MAAMC,MAC3BC,QAAS,cACTC,QAAS,WACTX,UAAa/a,KAAK+a,UAClBC,SAAYhb,KAAKgb,SACjBW,IAAO3b,KAAKua,OAAOC,OAAOC,MAAQ5S,OAAOwS,aAAaK,eACtDkB,MAAS5b,KAAKub,MAAMM,UAAUD,QAC3BE,KAAK,SAAAnc,GACRwG,QAAQC,IAAIzG,GACZqc,EAAK7a,MAAM8a,OAAOC,eAClBF,EAAK7a,MAAM8a,OAAOE,qBACC,KAARxc,OACa,KAAbA,EAAKyc,MAAuBzc,EAAKyc,KAAK9S,OAAS,EAEpC,GAAlB0S,EAAKjB,UACTiB,EAAKd,KAAOvb,EAAKyc,KAEjBJ,EAAKd,KAAOc,EAAKd,KAAKnC,OAAOpZ,EAAKyc,MAMlCJ,EAAKK,WAILA,MA/CS,WAgDLrc,KAAK+a,UAAY,EACrB/a,KAAKsc,KAAKC,MAAMC,KAAK,QAAS,UAE9Bxc,KAAKkb,SAGLuB,YAtDS,WAuDTzc,KAAK+a,UAAY,EACjB/a,KAAK+b,gBAELW,UA1DS,WA2DT1c,KAAK+a,YACL/a,KAAK+b,gBAELY,aA9DS,SA8DIlC,GACbza,KAAK4c,QAAQ9R,MACba,KAAM,eACN6O,QACAC,KAAMA,OAKN1W,OACA6W,SADO,SACE/J,GACT7Q,KAAKmB,MAAMmY,MAAMuD,SAAShM,GACF,GAApB7Q,KAAKkb,KAAK5R,QAAwB,GAATuH,GAC7B7Q,KAAK+b,mBCtIL7X,EAAA,WAA0B,GAAAC,GAAAnE,KAAaoE,EAAAD,EAAAE,eAA0BE,EAAAJ,EAAAG,MAAAC,IAAAH,CAAwB,OAAAG,GAAA,OAAiBE,YAAA,mBAA6BF,EAAA,OAAYE,YAAA,0BAAoCF,EAAA,WAAgBuY,OAAOC,gBAAgBC,SAAA,GAAAC,eAAA,IAAkCvZ,IAAKwZ,gBAAA,SAAAC,GAAiChZ,EAAAyY,QAAAQ,aAAuBjZ,EAAAkZ,GAAAlZ,EAAAmZ,GAAAnZ,EAAA2W,kBAAA,GAAA3W,EAAAkZ,GAAA,KAAA9Y,EAAA,OAA+DuY,OAAOS,cAAA,UAAAC,gBAAA,OAAAC,mBAAA,OAAAC,aAAA,EAAAC,mBAAA,WAAqHC,OAAQ/R,MAAA1H,EAAA,SAAAmE,SAAA,SAAAuV,GAA8C1Z,EAAAyW,SAAAiD,GAAiBC,WAAA,cAAwBvZ,EAAA,YAAAJ,EAAAkZ,GAAA,QAAAlZ,EAAAkZ,GAAA,KAAA9Y,EAAA,YAAAJ,EAAAkZ,GAAA,YAAAlZ,EAAAkZ,GAAA,KAAA9Y,EAAA,SAAsGC,IAAA,QAAAuZ,aAAyBtb,MAAA,OAAAC,OAAA,qBAA4Coa,OAAQkB,iBAAA7Z,EAAAyW,UAAgClX,IAAKua,0BAAA,SAAAd,GAA2ChZ,EAAAyW,SAAAuC,MAAsB5Y,EAAA,UAAeE,YAAA,cAAAqY,OAAiCoB,QAAA,KAAgB3Z,EAAA,OAAYE,YAAA,kBAA4BF,EAAA,OAAYE,YAAA,YAAA0Z,UAAkChR,UAAAhJ,EAAAmZ,GAAAnZ,EAAA8W,QAAAmD,UAAuCja,EAAAkZ,GAAA,KAAA9Y,EAAA,OAAwBE,YAAA,aAAuBF,EAAA,MAAAJ,EAAAkZ,GAAA,YAAAlZ,EAAAkZ,GAAA,KAAA9Y,EAAA,KAAkD4Z,UAAUhR,UAAAhJ,EAAAmZ,GAAAnZ,EAAA8W,QAAAoD,YAAuCla,EAAAkZ,GAAA,KAAA9Y,EAAA,OAA0BE,YAAA,aAAuBF,EAAA,MAAAJ,EAAAkZ,GAAA,UAAAlZ,EAAAkZ,GAAA,KAAA9Y,EAAA,KAAgD4Z,UAAUhR,UAAAhJ,EAAAmZ,GAAAnZ,EAAA8W,QAAAqD,UAAqCna,EAAAkZ,GAAA,KAAA9Y,EAAA,OAA0BE,YAAA,aAAuBF,EAAA,MAAAJ,EAAAkZ,GAAA,WAAAlZ,EAAAkZ,GAAA,KAAA9Y,EAAA,KAAiD4Z,UAAUhR,UAAAhJ,EAAAmZ,GAAAnZ,EAAA8W,QAAAsD,WAAsCpa,EAAAkZ,GAAA,KAAA9Y,EAAA,OAA0BE,YAAA,aAAuBF,EAAA,MAAAJ,EAAAkZ,GAAA,eAAAlZ,EAAAkZ,GAAA,KAAA9Y,EAAA,KAAqD4Z,UAAUhR,UAAAhJ,EAAAmZ,GAAAnZ,EAAA8W,QAAAuD,aAAwCra,EAAAkZ,GAAA,KAAA9Y,EAAA,OAA0BE,YAAA,aAAuBF,EAAA,MAAAJ,EAAAkZ,GAAA,UAAAlZ,EAAAkZ,GAAA,KAAA9Y,EAAA,KAAgD4Z,UAAUhR,UAAAhJ,EAAAmZ,GAAAnZ,EAAA8W,QAAAwD,UAAqCta,EAAAkZ,GAAA,KAAA9Y,EAAA,OAA0BE,YAAA,aAAuBF,EAAA,MAAAJ,EAAAkZ,GAAA,YAAAlZ,EAAAkZ,GAAA,KAAA9Y,EAAA,KAAkD4Z,UAAUhR,UAAAhJ,EAAAmZ,GAAAnZ,EAAA8W,QAAAyD,gBAAuCva,EAAAkZ,GAAA,KAAA9Y,EAAA,UAAiCC,IAAA,SAAAC,YAAA,cAAAqY,OAA8CoB,QAAA,EAAAve,KAAAwE,EAAA+W,KAAAyD,iBAAA,EAAAC,UAAAza,EAAA0a,OAAAC,MAAAC,kBAAoGrb,IAAK+Y,YAAAtY,EAAAsY,YAAAC,UAAAvY,EAAAuY,aAAyDnY,EAAA,OAAYE,YAAA,SAAoBN,EAAA6a,GAAA7a,EAAA,cAAAf,EAAAyN,GAAuC,MAAAtM,GAAA,OAAiB0a,IAAApO,EAAApM,YAAA,YAAAf,IAAsCwb,MAAA,SAAA/B,GAAyBhZ,EAAAwY,aAAAvZ,EAAA+b,SAA4B5a,EAAA,OAAYE,YAAA,QAAkBF,EAAA,OAAYuY,OAAOsC,IAAAhc,EAAAic,MAAAjc,EAAAic,MAAA,QAAAC,IAAA,GAAAC,QAAApb,EAAAoX,MAAAiE,gBAA2Erb,EAAAkZ,GAAA,KAAA9Y,EAAA,OAA0BE,YAAA,UAAoBF,EAAA,QAAaE,YAAA,QAAA0Z,UAA8BhR,UAAAhJ,EAAAmZ,GAAAla,EAAAqc,UAA+Btb,EAAAkZ,GAAA,KAAA9Y,EAAA,KAAsBE,YAAA,OAAA0Z,UAA6BhR,UAAAhJ,EAAAmZ,GAAAla,EAAAsc,UAA+Bvb,EAAAkZ,GAAA,KAAA9Y,EAAA,OAAwBE,YAAA,WAAqBN,EAAAkZ,GAAA,OAAA9Y,EAAA,QAAAJ,EAAAkZ,GAAA,OAAA9Y,EAAA,QAAoD4Z,UAAUhR,UAAAhJ,EAAAmZ,GAAAla,EAAAuc,qBAAyCxb,EAAAkZ,GAAA,QAAAlZ,EAAA+W,KAAA5R,OAAA/E,EAAA,OAA8CE,YAAA,UAAoBN,EAAAkZ,GAAA,UAAAlZ,EAAAyb,QAAA,QAC71Flb,KACAC,GAAiBT,SAAAQ,mBACjBmb,EAAA,EFAAhb,EAAAxH,EAAA,QASAyH,EAAAxH,EAKAyH,EAAAF,EACA4U,EACAoG,GATA,EAWA/a,EAPA,kBAEA,KAUA1H,GAAA,QAAA2H,EAAA,SZ4iGM+a,KACA,SAAU3iB,EAAQ8H,EAAS5H,GevkGjC,GAAAiK,IAUA,SAAAyY,EAAAC,OAKK5R,MAFL9G,EAAA,WACA,MAAA0Y,GAAAD,IAAApY,WACKsY,KAAAhb,EAAA5H,EAAA4H,EAAA9H,QAAA8H,QAAAqC,IAMJ,mBAAAO,eAAA7H,KAAA,SAAA6H,EAAAF,GA0uKD,QAAAuY,GAAApgB,EAAAqgB,EAAAC,EAAAvc,GACA,MAAAuc,GAAAvc,EAAAwc,QAAAnb,EAAAob,MAAAC,KAAA,MAIA,QAAAC,GAAA7c,GAEA,OADA8c,GAAA9c,EAAA+c,MAAA,GACAzZ,EAAAwZ,EAAAnX,OAA2BrC,KAC3B1I,MAAAoiB,QAAAF,EAAAxZ,MACAwZ,EAAAxZ,GAAAuZ,EAAAC,EAAAxZ,IAGA,OAAAwZ,GAIA,QAAAG,GAAA1Y,EAAA9E,GACA,MAAA8E,aAAA9E,GAIA,QAAAyd,GAAA3Y,EAAA4Y,GACA,OAAA5Y,EAAA2Y,SAAA3Y,EAAA6Y,iBAAA7Y,EAAA8Y,mBAAA9Y,EAAA+Y,oBAAA/Y,EAAAgZ,uBAAAhZ,EAAAiZ,kBAAAlB,KAAA/X,EAAA4Y,GAIA,QAAAM,GAAAC,GACA,MAAAA,GAAA7X,cAAA6W,QAAA,iBAAAiB,EAAAC,GACA,MAAAA,GAAAC,gBAKA,QAAAC,GAAAJ,GACA,MAAAA,GAAAK,OAAA,GAAAF,cAAAH,EAAAX,MAAA,GAIA,QAAAiB,GAAAC,GACA,UAAAA,EAAAtY,QACA,IACAsY,EAAAC,UAAA,KAAAD,EAAAC,UAAA,KACAD,EAAAC,UAAA,KAAAD,EAAAC,UAAA,KACAD,EAAAC,UAAA,KAAAD,EAAAC,UAAA,MACAxY,KAAA,IAAAuY,EAIA,QAAAE,GAAAC,GACA,GAAAH,GAAAG,EAAAC,SAAA,GACA,WAAAJ,EAAAtY,OAAA,IAAAsY,IAIA,QAAAK,GAAAza,EAAA/E,EAAAC,GACA,SAAAD,GAAA,MAAAC,EAAA,CACA,GAAA6U,GAAA/P,EAAA0a,MAEA,OAAAzf,EACAA,EAAA8U,EAAA9U,MAAA8U,EAAA7U,SACA,MAAAA,IACAA,EAAA6U,EAAA7U,OAAA6U,EAAA9U,SAGA,OACAA,QACAC,UAKA,QAAAyf,GAAAC,EAAA7c,EAAAC,GACA,OACAD,IAAA6c,EAAAtiB,EAAA0F,EAAA4c,EAAAhC,EAAA,EACA5a,EAAAD,EAAA6c,EAAAjC,EAAA3a,EAAA4c,EAAAve,EAAA,GAKA,QAAAwe,GAAAviB,GACA,OAAUA,IAAA,GAAAqgB,EAAArgB,EAAA,GAAAsgB,EAAAtgB,EAAA,GAAA+D,EAAA/D,EAAA,GAAAkN,EAAAlN,EAAA,GAAAwiB,EAAAxiB,EAAA,IAIV,QAAAyiB,GAAAH,GAIA,MAHAA,aAAAld,GAAAwS,SACA0K,EAAA,GAAAld,GAAAwS,OAAA0K,IAEAA,EAIA,QAAAI,GAAAC,EAAAC,GACAD,EAAAxX,GAAA,MAAAwX,EAAAxX,GAAAyX,EAAAR,OAAAjX,GAAAwX,EAAAxX,GACAwX,EAAAvX,GAAA,MAAAuX,EAAAvX,GAAAwX,EAAAR,OAAAhX,GAAAuX,EAAAvX,GAIA,QAAAyX,GAAA7iB,GACA,OAAAmH,GAAA,EAAA2b,EAAA9iB,EAAAwJ,OAAA+X,EAAA,GAAwCpa,EAAA2b,EAAQ3b,IAChDoa,GAAAvhB,EAAAmH,GAAA,GAEA,MAAAnH,EAAAmH,GAAA,KACAoa,GAAAvhB,EAAAmH,GAAA,GAEA,MAAAnH,EAAAmH,GAAA,KACAoa,GAAA,IACAA,GAAAvhB,EAAAmH,GAAA,GAEA,MAAAnH,EAAAmH,GAAA,KACAoa,GAAA,IACAA,GAAAvhB,EAAAmH,GAAA,GACAoa,GAAA,IACAA,GAAAvhB,EAAAmH,GAAA,GAEA,MAAAnH,EAAAmH,GAAA,KACAoa,GAAA,IACAA,GAAAvhB,EAAAmH,GAAA,GACAoa,GAAA,IACAA,GAAAvhB,EAAAmH,GAAA,GAEA,MAAAnH,EAAAmH,GAAA,KACAoa,GAAA,IACAA,GAAAvhB,EAAAmH,GAAA,OAQA,OAAAoa,GAAA,IAIA,QAAAwB,GAAA5f,GAEA,OAAAgE,GAAAhE,EAAA6f,WAAAxZ,OAAA,EAA0CrC,GAAA,EAAQA,IAClDhE,EAAA6f,WAAA7b,YAAAY,GAAAC,YACA+a,EAAA5f,EAAA6f,WAAA7b,GAEA,OAAA/B,GAAA6d,MAAA9f,GAAArB,GAAAsD,EAAA8d,IAAA/f,EAAAgF,WAIA,QAAAgb,GAAA9C,GAeA,MAdA,OAAAA,EAAA5a,IACA4a,EAAA5a,EAAA,EACA4a,EAAA3a,EAAA,EACA2a,EAAA1d,MAAA,EACA0d,EAAAzd,OAAA,GAGAyd,EAAA+C,EAAA/C,EAAA1d,MACA0d,EAAAzO,EAAAyO,EAAAzd,OACAyd,EAAAra,GAAAqa,EAAA5a,EAAA4a,EAAA1d,MACA0d,EAAAla,GAAAka,EAAA3a,EAAA2a,EAAAzd,OACAyd,EAAAlV,GAAAkV,EAAA5a,EAAA4a,EAAA1d,MAAA,EACA0d,EAAAjV,GAAAiV,EAAA3a,EAAA2a,EAAAzd,OAAA,EAEAyd,EAIA,QAAAgD,GAAAC,GACA,GAAA9B,IAAA8B,GAAA,IAAApB,WAAAqB,MAAAne,EAAAob,MAAAgD,UAEA,IAAAhC,EAAA,MAAAA,GAAA,GAKA,QAAAiC,GAAA/K,GACA,MAAAnO,MAAAuC,IAAA4L,GAAA,MAAAA,EAAA,EAn5KA,GAAAgL,OAAA,KAAAxjB,UAAA6H,EAGA3C,EAAAse,EAAAte,IAAA,SAAAsC,GACA,GAAAtC,EAAAue,UAMA,MALAjc,GAAA,GAAAtC,GAAAoQ,IAAA9N,GAEAtC,EAAAwe,OAAA7iB,MACAqE,EAAAye,UAEAnc,EAiBA,IAZAtC,EAAA0e,GAAA,6BACA1e,EAAA2e,MAAA,gCACA3e,EAAA4e,MAAA,+BACA5e,EAAA6e,MAAA,yBAGA7e,EAAAue,UAAA,WACA,QAAA9b,EAAA+D,mBACA/D,EAAA+D,gBAAAxG,EAAA0e,GAAA,OAAAI,kBAIA9e,EAAAue,UAAA,QAGAve,GAAA+e,IAAA,IAGA/e,EAAA8d,IAAA,SAAArX,GACA,cAAA8V,EAAA9V,GAAAzG,EAAA+e,OAIA/e,EAAAgf,OAAA,SAAAvY,GAEA,GAAAnE,GAAAG,EAAA+D,gBAAA1L,KAAA4jB,GAAAjY,EAKA,OAFAnE,GAAAoE,aAAA,KAAA5L,KAAAgjB,IAAArX,IAEAnE,GAIAtC,EAAAC,OAAA,WACA,GAAAgf,GAAA7jB,EAAA2e,EAAAhY,CAQA,KALAkd,KAAAzD,MAAAT,KAAAmE,WAGA9jB,EAAA6jB,EAAAE,MAEApd,EAAAkd,EAAA7a,OAAA,EAA8BrC,GAAA,EAAQA,IACtC,GAAAkd,EAAAld,GACA,IAAAgY,IAAA3e,GACA6jB,EAAAld,GAAA4B,UAAAoW,GAAA3e,EAAA2e,EAGA/Z,GAAAof,KAAApf,EAAAof,IAAAC,SACArf,EAAAof,IAAAC,WAIArf,EAAAsf,OAAA,SAAAC,GAEA,GAAAC,GAAA,kBAAAD,GAAAP,OACAO,EAAAP,OACA,WACAlkB,KAAA0H,YAAAuY,KAAAjgB,KAAAkF,EAAAgf,OAAAO,EAAAP,SAeA,OAXAO,GAAAF,UACAG,EAAA7b,UAAA,GAAA4b,GAAAF,SAGAE,EAAAtf,QACAD,EAAAC,OAAAuf,EAAAD,EAAAtf,QAGAsf,EAAAE,WACAzf,EAAAC,OAAAsf,EAAAG,QAAA1f,EAAA2f,UAAAJ,EAAAE,WAEAD,GAIAxf,EAAA6d,MAAA,SAAA9f,GAEA,IAAAA,EAAA,WAGA,IAAAA,EAAA6hB,SAAA,MAAA7hB,GAAA6hB,QAGA,IAAAtd,EA0BA,OAtBAA,GADA,OAAAvE,EAAAgF,SACAhF,EAAA2G,qBAAA/B,GAAAC,WAAA,GAAA5C,GAAAqQ,OAAA,GAAArQ,GAAAoQ,IACA,kBAAArS,EAAAgF,SACA,GAAA/C,GAAA6f,SAAA,UACA,kBAAA9hB,EAAAgF,SACA,GAAA/C,GAAA6f,SAAA,UACA7f,EAAAuc,EAAAxe,EAAAgF,WACA,IAAA/C,EAAAuc,EAAAxe,EAAAgF,YAEA,GAAA/C,GAAA8f,QAAA/hB,GAGAuE,EAAA5I,KAAAqE,EAAAgF,SACAT,EAAAvE,OACAA,EAAA6hB,SAAAtd,EAGAA,YAAAtC,GAAAoQ,KACA9N,EAAAyd,YAAAC,OAGA1d,EAAA2d,QAAAC,KAAAC,MAAApiB,EAAA8K,aAAA,oBAEAvG,GAIAtC,EAAAye,QAAA,WAEA,GAAA2B,GAAA3d,EAAA4d,qBAAA,WACA1kB,GAAAykB,EAAA,GAAApgB,GAAAoQ,IAAAgQ,GAAApgB,EAAA6d,MAAApb,EAAAgL,iBAAA6S,UAAAC,KAAA,IAGAvgB,GAAAwe,QACA4B,QAAA3d,EAAAgL,gBACA9R,OAAAS,MAAA,oEAAuE2B,KACvEyiB,KAAA7kB,EAAA8kB,WAAA1iB,KACAW,KAAA/C,EAAA+C,OAAAX,KACA2iB,OAAA1gB,EAAAgf,OAAA,SAIAhf,EAAAwe,QACAkC,OAAA1gB,EAAAgf,OAAA,QAGAvc,EAAAnE,iBAAA,8BACA0B,EAAAwe,OAAA7iB,MACAqE,EAAAye,YACC,GAGDze,EAAAob,OAEAuF,cAAA,qDAGAjE,IAAA,4CAGAkE,IAAA,2BAGAxC,UAAA,mBAGAyC,WAAA,aAGAC,WAAA,MAGAC,MAAA,oBAGAC,MAAA,SAGAC,MAAA,gBAGAC,QAAA,WAGAC,SAAA,0CAGAC,UAAA,eAGAC,QAAA,wCAGAC,UAAA,SAKAC,OAAA,aAGAC,YAAA,iBAGAC,aAAA,gBAGAC,gBAAA,0DAGArG,KAAA,OAGArb,EAAA2hB,OAEA7kB,IAAA,SAAA8kB,EAAAC,GACA,GAAA9f,GACA2b,EAAAkE,EAAAxd,OACA0d,IAEA,KAAA/f,EAAA,EAAeA,EAAA2b,EAAQ3b,IACvB+f,EAAAlc,KAAAic,EAAAD,EAAA7f,IAEA,OAAA+f,IAIAC,OAAA,SAAAH,EAAAC,GACA,GAAA9f,GACA2b,EAAAkE,EAAAxd,OACA0d,IAEA,KAAA/f,EAAA,EAAeA,EAAA2b,EAAQ3b,IACvB8f,EAAAD,EAAA7f,KACA+f,EAAAlc,KAAAgc,EAAA7f,GAEA,OAAA+f,IAIAE,QAAA,SAAArjB,GACA,MAAAA,GAAA,IAAAwG,KAAA+B,GAAA,KAIA+a,QAAA,SAAA3b,GACA,WAAAA,EAAAnB,KAAA+B,GAAA,KAGAgb,kBAAA,SAAAC,GACA,MAAArnB,MAAAinB,OAAAI,EAAA,SAAAnf,GAA6C,MAAAA,aAAAL,GAAAC,eAK7C5C,EAAAoiB,UAEAxK,OAEAyK,eAAA,EACAC,iBAAA,EACAC,eAAA,EACAC,kBAAA,QACAC,iBAAA,OACAvlB,KAAA,UACAE,OAAA,UACAvB,QAAA,EAEAwE,EAAA,EACAC,EAAA,EACAyF,GAAA,EACAC,GAAA,EAEAzI,MAAA,EACAC,OAAA,EAEA8I,EAAA,EACAtB,GAAA,EACAC,GAAA,EAEAyd,OAAA,EACAC,eAAA,EACAC,aAAA,UAEAC,YAAA,GACAC,cAAA,+BACAC,cAAA,UAKA/iB,EAAAgjB,MAAA,SAAAC,GACA,GAAA9E,EAGArjB,MAAAwL,EAAA,EACAxL,KAAAuhB,EAAA,EACAvhB,KAAAmgB,EAAA,EAEAgI,IAGA,gBAAAA,GACAjjB,EAAAob,MAAA4F,MAAAle,KAAAmgB,IAEA9E,EAAAne,EAAAob,MAAAwF,IAAAsC,KAAAD,EAAA9H,QAAAnb,EAAAob,MAAA0F,WAAA,KAGAhmB,KAAAwL,EAAApB,SAAAiZ,EAAA,IACArjB,KAAAuhB,EAAAnX,SAAAiZ,EAAA,IACArjB,KAAAmgB,EAAA/V,SAAAiZ,EAAA,KAEKne,EAAAob,MAAA2F,MAAAje,KAAAmgB,KAEL9E,EAAAne,EAAAob,MAAAsB,IAAAwG,KAAAzG,EAAAwG,IAGAnoB,KAAAwL,EAAApB,SAAAiZ,EAAA,OACArjB,KAAAuhB,EAAAnX,SAAAiZ,EAAA,OACArjB,KAAAmgB,EAAA/V,SAAAiZ,EAAA,QAIG,gBAAA8E,KACHnoB,KAAAwL,EAAA2c,EAAA3c,EACAxL,KAAAuhB,EAAA4G,EAAA5G,EACAvhB,KAAAmgB,EAAAgI,EAAAhI,KAMAjb,EAAAC,OAAAD,EAAAgjB,OAEAlG,SAAA,WACA,MAAAhiB,MAAAqoB,SAGAA,MAAA,WACA,UACAvG,EAAA9hB,KAAAwL,GACAsW,EAAA9hB,KAAAuhB,GACAO,EAAA9hB,KAAAmgB,IAGAmI,MAAA,WACA,cAAAtoB,KAAAwL,EAAAxL,KAAAuhB,EAAAvhB,KAAAmgB,GAAA9W,OAAA,KAGAkf,WAAA,WACA,MAAAvoB,MAAAwL,EAAA,OACAxL,KAAAuhB,EAAA,QACAvhB,KAAAmgB,EAAA,SAGAqI,MAAA,SAAAL,GAGA,MAFAnoB,MAAAyoB,YAAA,GAAAvjB,GAAAgjB,MAAAC,GAEAnoB,MAGA4G,GAAA,SAAA8hB,GAEA,MAAA1oB,MAAAyoB,aAGAC,IAAA,IAAAA,EAAA,IAAAA,EAGA,GAAAxjB,GAAAgjB,OACA1c,KAAAxL,KAAAwL,GAAAxL,KAAAyoB,YAAAjd,EAAAxL,KAAAwL,GAAAkd,GACAnH,KAAAvhB,KAAAuhB,GAAAvhB,KAAAyoB,YAAAlH,EAAAvhB,KAAAuhB,GAAAmH,GACAvI,KAAAngB,KAAAmgB,GAAAngB,KAAAyoB,YAAAtI,EAAAngB,KAAAmgB,GAAAuI,MATA1oB,QAkBAkF,EAAAgjB,MAAAlgB,KAAA,SAAAmgB,GAEA,MADAA,IAAA,GACAjjB,EAAAob,MAAA2F,MAAAje,KAAAmgB,IACAjjB,EAAAob,MAAA4F,MAAAle,KAAAmgB,IAIAjjB,EAAAgjB,MAAAhC,MAAA,SAAAiC,GACA,MAAAA,IAAA,gBAAAA,GAAA3c,GACA,gBAAA2c,GAAA5G,GACA,gBAAA4G,GAAAhI,GAIAjb,EAAAgjB,MAAAS,QAAA,SAAAR,GACA,MAAAjjB,GAAAgjB,MAAAhC,MAAAiC,IAAAjjB,EAAAgjB,MAAAlgB,KAAAmgB,IAGAjjB,EAAA3G,MAAA,SAAAuoB,EAAA8B,GACA9B,UAAA+B,UAGA,GAAA/B,EAAAxd,QAAAsf,IACA9B,EAAA8B,EAAAC,WAGA7oB,KAAA6L,MAAA7L,KAAAqlB,MAAAyB,IAGA5hB,EAAAC,OAAAD,EAAA3G,OAEAiqB,MAAA,SAAA1B,GAIA,GAHA9mB,KAAAyoB,YAAAzoB,KAAAqlB,MAAAyB,GAGA9mB,KAAA6L,MAAAvC,QAAAtJ,KAAAyoB,YAAAnf,OAAA,CAIA,IAHA,GAAAwf,GAAA9oB,KAAA6L,MAAA7L,KAAA6L,MAAAvC,OAAA,GACAyf,EAAA/oB,KAAAyoB,YAAAzoB,KAAAyoB,YAAAnf,OAAA,GAEAtJ,KAAA6L,MAAAvC,OAAAtJ,KAAAyoB,YAAAnf,QACAtJ,KAAAyoB,YAAA3d,KAAAie,EACA,MAAA/oB,KAAA6L,MAAAvC,OAAAtJ,KAAAyoB,YAAAnf,QACAtJ,KAAA6L,MAAAf,KAAAge,GAGA,MAAA9oB,OAGAgpB,OAAA,WAEA,OAAA/hB,GAAA,EAAA2b,EAAA5iB,KAAA6L,MAAAvC,OAAA2f,KAAsDhiB,EAAA2b,EAAQ3b,KAC9D,GAAAgiB,EAAAre,QAAA5K,KAAA6L,MAAA5E,KACAgiB,EAAAne,KAAA9K,KAAA6L,MAAA5E,GAGA,OAAAjH,MAAA6L,MAAAod,GAGAriB,GAAA,SAAA8hB,GAEA,IAAA1oB,KAAAyoB,YAAA,MAAAzoB,KAGA,QAAAiH,GAAA,EAAA2b,EAAA5iB,KAAA6L,MAAAvC,OAAAwd,KAAuD7f,EAAA2b,EAAQ3b,IAC/D6f,EAAAhc,KAAA9K,KAAA6L,MAAA5E,IAAAjH,KAAAyoB,YAAAxhB,GAAAjH,KAAA6L,MAAA5E,IAAAyhB,EAEA,WAAAxjB,GAAA3G,MAAAuoB,IAGA9E,SAAA,WACA,MAAAhiB,MAAA6L,MAAAxC,KAAA,MAGAwf,QAAA,WACA,MAAA7oB,MAAA6L,OAGAwZ,MAAA,SAAAyB,GAIA,MAHAA,KAAA+B,UAGAtqB,MAAAoiB,QAAAmG,KAEA9mB,KAAA2K,MAAAmc,IAGAnc,MAAA,SAAAue,GACA,MAAAA,GAAAxe,OAAAC,MAAAzF,EAAAob,MAAAkG,WAAAxkB,IAAAiI,aAGAmG,QAAA,WAGA,MAFApQ,MAAA6L,MAAAuE,UAEApQ,MAEAygB,MAAA,WACA,GAAAA,GAAA,GAAAzgB,MAAA0H,WAEA,OADA+Y,GAAA5U,MAAA2U,EAAAxgB,KAAA6L,OACA4U,KAIAvb,EAAAikB,WAAA,SAAArC,EAAA8B,GACA1jB,EAAA3G,MAAA0hB,KAAAjgB,KAAA8mB,EAAA8B,KAAA,QAIA1jB,EAAAikB,WAAAtgB,UAAA,GAAA3D,GAAA3G,MACA2G,EAAAikB,WAAAtgB,UAAAnB,YAAAxC,EAAAikB,WAEAjkB,EAAAC,OAAAD,EAAAikB,YAEAnH,SAAA,WAEA,OAAA/a,GAAA,EAAA2b,EAAA5iB,KAAA6L,MAAAvC,OAAAwd,KAAuD7f,EAAA2b,EAAQ3b,IAC/D6f,EAAAhc,KAAA9K,KAAA6L,MAAA5E,GAAAoC,KAAA,KAEA,OAAAyd,GAAAzd,KAAA,MAGA+f,OAAA,WACA,OACAviB,GAAA7G,KAAA6L,MAAA,MACA/E,GAAA9G,KAAA6L,MAAA,MACA/F,GAAA9F,KAAA6L,MAAA,MACA5F,GAAAjG,KAAA6L,MAAA,QAIAjF,GAAA,SAAA8hB,GAEA,IAAA1oB,KAAAyoB,YAAA,MAAAzoB,KAGA,QAAAiH,GAAA,EAAA2b,EAAA5iB,KAAA6L,MAAAvC,OAAAwd,KAAuD7f,EAAA2b,EAAQ3b,IAC/D6f,EAAAhc,MACA9K,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAAyoB,YAAAxhB,GAAA,GAAAjH,KAAA6L,MAAA5E,GAAA,IAAAyhB,EACA1oB,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAAyoB,YAAAxhB,GAAA,GAAAjH,KAAA6L,MAAA5E,GAAA,IAAAyhB,GAGA,WAAAxjB,GAAAikB,WAAArC,IAGAzB,MAAA,SAAAyB,GACA,GAAArc,KAKA,IAHAqc,IAAA+B,UAGAtqB,MAAAoiB,QAAAmG,GAAA,CAEA,GAAAvoB,MAAAoiB,QAAAmG,EAAA,IAEA,MAAAA,GAAA9kB,IAAA,SAAAkG,GAAwC,MAAAA,GAAAwY,SACjC,UAAAoG,EAAA,GAAAvhB,EAEP,MAAAuhB,GAAA9kB,IAAA,SAAAkG,GAAwC,OAAAA,EAAA3C,EAAA2C,EAAA1C,SAIxCshB,KAAApc,OAAAC,MAAAzF,EAAAob,MAAAkG,WAAAxkB,IAAAiI,WAKA6c,GAAAxd,OAAA,MAAAwd,EAAAzC,KAGA,QAAApd,GAAA,EAAAoiB,EAAAvC,EAAAxd,OAAsCrC,EAAAoiB,EAASpiB,GAAA,EAC/CwD,EAAAK,MAAAgc,EAAA7f,GAAA6f,EAAA7f,EAAA,IAEA,OAAAwD,IAGA6e,KAAA,SAAA/jB,EAAAC,GACA,GAAA+R,GAAAvX,KAAAkiB,MAOA,IAJA3c,GAAAgS,EAAAhS,EACAC,GAAA+R,EAAA/R,GAGAuK,MAAAxK,KAAAwK,MAAAvK,GACA,OAAAyB,GAAAjH,KAAA6L,MAAAvC,OAAA,EAAyCrC,GAAA,EAAQA,IACjDjH,KAAA6L,MAAA5E,IAAAjH,KAAA6L,MAAA5E,GAAA,GAAA1B,EAAAvF,KAAA6L,MAAA5E,GAAA,GAAAzB,EAEA,OAAAxF,OAGAylB,KAAA,SAAAhjB,EAAAC,GACA,GAAAuE,GAAAsQ,EAAAvX,KAAAkiB,MAGA,KAAAjb,EAAAjH,KAAA6L,MAAAvC,OAAA,EAAmCrC,GAAA,EAAQA,IAC3CsQ,EAAA9U,QAAAzC,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAA6L,MAAA5E,GAAA,GAAAsQ,EAAAhS,GAAA9C,EAAA8U,EAAA9U,MAAA8U,EAAAhS,GACAgS,EAAA7U,SAAA1C,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAA6L,MAAA5E,GAAA,GAAAsQ,EAAA/R,GAAA9C,EAAA6U,EAAA7U,OAAA6U,EAAA/R,EAGA,OAAAxF,OAGAkiB,KAAA,WAGA,MAFAhd,GAAAwe,OAAAgC,KAAA9Z,aAAA,SAAA5L,KAAAgiB,YAEA9c,EAAAwe,OAAAgC,KAAA6D,YA0DA,QAtDAC,IACAC,EAAA,SAAArJ,EAAA9J,EAAAoT,GAIA,MAHApT,GAAA/Q,EAAAmkB,EAAAnkB,EAAA6a,EAAA,GACA9J,EAAA9Q,EAAAkkB,EAAAlkB,EAAA4a,EAAA,IAEA,IAAA9J,EAAA/Q,EAAA+Q,EAAA9Q,IAEAmkB,EAAA,SAAAvJ,EAAA9J,GAGA,MAFAA,GAAA/Q,EAAA6a,EAAA,GACA9J,EAAA9Q,EAAA4a,EAAA,IACA,IAAAA,EAAA,GAAAA,EAAA,KAEAwJ,EAAA,SAAAxJ,EAAA9J,GAEA,MADAA,GAAA/Q,EAAA6a,EAAA,IACA,IAAAA,EAAA,KAEAyJ,EAAA,SAAAzJ,EAAA9J,GAEA,MADAA,GAAA9Q,EAAA4a,EAAA,IACA,IAAAA,EAAA,KAEA0J,EAAA,SAAA1J,EAAA9J,GAGA,MAFAA,GAAA/Q,EAAA6a,EAAA,GACA9J,EAAA9Q,EAAA4a,EAAA,IACA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA2J,EAAA,SAAA3J,EAAA9J,GAGA,MAFAA,GAAA/Q,EAAA6a,EAAA,GACA9J,EAAA9Q,EAAA4a,EAAA,IACA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA4J,EAAA,SAAA5J,EAAA9J,GAGA,MAFAA,GAAA/Q,EAAA6a,EAAA,GACA9J,EAAA9Q,EAAA4a,EAAA,IACA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA6J,EAAA,SAAA7J,EAAA9J,GAGA,MAFAA,GAAA/Q,EAAA6a,EAAA,GACA9J,EAAA9Q,EAAA4a,EAAA,IACA,IAAAA,EAAA,GAAAA,EAAA,KAEA8J,EAAA,SAAA9J,EAAA9J,EAAAoT,GAGA,MAFApT,GAAA/Q,EAAAmkB,EAAAnkB,EACA+Q,EAAA9Q,EAAAkkB,EAAAlkB,GACA,MAEA2kB,EAAA,SAAA/J,EAAA9J,GAGA,MAFAA,GAAA/Q,EAAA6a,EAAA,GACA9J,EAAA9Q,EAAA4a,EAAA,IACA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,MAIAgK,EAAA,aAAAzf,MAAA,IAEA1D,EAAA,EAAA2b,EAAAwH,EAAA9gB,OAAqCrC,EAAA2b,IAAQ3b,EAC7CuiB,EAAAY,EAAAnjB,IAAA,SAAAA,GACA,gBAAAmZ,EAAA9J,EAAAoT,GACA,QAAAziB,EAAAmZ,EAAA,GAAAA,EAAA,GAAA9J,EAAA/Q,MACA,SAAA0B,EAAAmZ,EAAA,GAAAA,EAAA,GAAA9J,EAAA9Q,MACA,SAAAyB,EACAmZ,EAAA,GAAAA,EAAA,GAAA9J,EAAA/Q,EACA6a,EAAA,GAAAA,EAAA,GAAA9J,EAAA9Q,MAGA,QAAA6kB,GAAA,EAAAC,EAAAlK,EAAA9W,OAAqC+gB,EAAAC,IAAQD,EAC7CjK,EAAAiK,GAAAjK,EAAAiK,MAAA,EAAA/T,EAAA9Q,EAAA8Q,EAAA/Q,EAGA,OAAAikB,GAAAviB,GAAAmZ,EAAA9J,EAAAoT,KAEGU,EAAAnjB,GAAAua,cAIHtc,GAAAqlB,UAAA,SAAAzD,EAAA8B,GACA1jB,EAAA3G,MAAA0hB,KAAAjgB,KAAA8mB,EAAA8B,KAAA,YAIA1jB,EAAAqlB,UAAA1hB,UAAA,GAAA3D,GAAA3G,MACA2G,EAAAqlB,UAAA1hB,UAAAnB,YAAAxC,EAAAqlB,UAEArlB,EAAAC,OAAAD,EAAAqlB,WAEAvI,SAAA,WACA,MAAAW,GAAA3iB,KAAA6L,QAGAyd,KAAA,SAAA/jB,EAAAC,GAEA,GAAA+R,GAAAvX,KAAAkiB,MAMA,IAHA3c,GAAAgS,EAAAhS,EACAC,GAAA+R,EAAA/R,GAEAuK,MAAAxK,KAAAwK,MAAAvK,GAEA,OAAAglB,GAAAvjB,EAAAjH,KAAA6L,MAAAvC,OAAA,EAA4CrC,GAAA,EAAQA,IACpDujB,EAAAxqB,KAAA6L,MAAA5E,GAAA,GAEA,KAAAujB,GAAA,KAAAA,GAAA,KAAAA,GACAxqB,KAAA6L,MAAA5E,GAAA,IAAA1B,EACAvF,KAAA6L,MAAA5E,GAAA,IAAAzB,GAES,KAAAglB,EACTxqB,KAAA6L,MAAA5E,GAAA,IAAA1B,EAES,KAAAilB,EACTxqB,KAAA6L,MAAA5E,GAAA,IAAAzB,EAES,KAAAglB,GAAA,KAAAA,GAAA,KAAAA,GACTxqB,KAAA6L,MAAA5E,GAAA,IAAA1B,EACAvF,KAAA6L,MAAA5E,GAAA,IAAAzB,EACAxF,KAAA6L,MAAA5E,GAAA,IAAA1B,EACAvF,KAAA6L,MAAA5E,GAAA,IAAAzB,EAEA,KAAAglB,IACAxqB,KAAA6L,MAAA5E,GAAA,IAAA1B,EACAvF,KAAA6L,MAAA5E,GAAA,IAAAzB,IAGS,KAAAglB,IACTxqB,KAAA6L,MAAA5E,GAAA,IAAA1B,EACAvF,KAAA6L,MAAA5E,GAAA,IAAAzB,EAMA,OAAAxF,OAGAylB,KAAA,SAAAhjB,EAAAC,GAEA,GAAAuE,GAAAujB,EAAAjT,EAAAvX,KAAAkiB,MAGA,KAAAjb,EAAAjH,KAAA6L,MAAAvC,OAAA,EAAmCrC,GAAA,EAAQA,IAC3CujB,EAAAxqB,KAAA6L,MAAA5E,GAAA,GAEA,KAAAujB,GAAA,KAAAA,GAAA,KAAAA,GACAxqB,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAA6L,MAAA5E,GAAA,GAAAsQ,EAAAhS,GAAA9C,EAAA8U,EAAA9U,MAAA8U,EAAAhS,EACAvF,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAA6L,MAAA5E,GAAA,GAAAsQ,EAAA/R,GAAA9C,EAAA6U,EAAA7U,OAAA6U,EAAA/R,GAEO,KAAAglB,EACPxqB,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAA6L,MAAA5E,GAAA,GAAAsQ,EAAAhS,GAAA9C,EAAA8U,EAAA9U,MAAA8U,EAAAhS,EAEO,KAAAilB,EACPxqB,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAA6L,MAAA5E,GAAA,GAAAsQ,EAAA/R,GAAA9C,EAAA6U,EAAA7U,OAAA6U,EAAA/R,EAEO,KAAAglB,GAAA,KAAAA,GAAA,KAAAA,GACPxqB,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAA6L,MAAA5E,GAAA,GAAAsQ,EAAAhS,GAAA9C,EAAA8U,EAAA9U,MAAA8U,EAAAhS,EACAvF,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAA6L,MAAA5E,GAAA,GAAAsQ,EAAA/R,GAAA9C,EAAA6U,EAAA7U,OAAA6U,EAAA/R,EACAxF,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAA6L,MAAA5E,GAAA,GAAAsQ,EAAAhS,GAAA9C,EAAA8U,EAAA9U,MAAA8U,EAAAhS,EACAvF,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAA6L,MAAA5E,GAAA,GAAAsQ,EAAA/R,GAAA9C,EAAA6U,EAAA7U,OAAA6U,EAAA/R,EAEA,KAAAglB,IACAxqB,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAA6L,MAAA5E,GAAA,GAAAsQ,EAAAhS,GAAA9C,EAAA8U,EAAA9U,MAAA8U,EAAAhS,EACAvF,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAA6L,MAAA5E,GAAA,GAAAsQ,EAAA/R,GAAA9C,EAAA6U,EAAA7U,OAAA6U,EAAA/R,IAGO,KAAAglB,IAEPxqB,KAAA6L,MAAA5E,GAAA,GAAAjH,KAAA6L,MAAA5E,GAAA,GAAAxE,EAAA8U,EAAA9U,MACAzC,KAAA6L,MAAA5E,GAAA,GAAAjH,KAAA6L,MAAA5E,GAAA,GAAAvE,EAAA6U,EAAA7U,OAGA1C,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAA6L,MAAA5E,GAAA,GAAAsQ,EAAAhS,GAAA9C,EAAA8U,EAAA9U,MAAA8U,EAAAhS,EACAvF,KAAA6L,MAAA5E,GAAA,IAAAjH,KAAA6L,MAAA5E,GAAA,GAAAsQ,EAAA/R,GAAA9C,EAAA6U,EAAA7U,OAAA6U,EAAA/R,EAKA,OAAAxF,OAGAyqB,cAAA,SAAAC,GACA,GAAAzjB,GAAA2b,EAAA6H,CAKA,KAHAC,EAAA,GAAAxlB,GAAAqlB,UAAAG,GAEAD,EAAAzqB,KAAA6L,MAAAvC,SAAAohB,EAAA7e,MAAAvC,OACArC,EAAA,EAAA2b,EAAA5iB,KAAA6L,MAAAvC,OAAsCmhB,GAAAxjB,EAAA2b,EAAyB3b,IAC/DwjB,EAAAzqB,KAAA6L,MAAA5E,GAAA,KAAAyjB,EAAA7e,MAAA5E,GAAA,EAGA,OAAAwjB,IAGAjC,MAAA,SAAAkC,GASA,MARAA,GAAA,GAAAxlB,GAAAqlB,UAAAG,GAEA1qB,KAAAyqB,cAAAC,GACA1qB,KAAAyoB,YAAAiC,EAEA1qB,KAAAyoB,YAAA,KAGAzoB,MAGA4G,GAAA,SAAA8hB,GAEA,IAAA1oB,KAAAyoB,YAAA,MAAAzoB,KAEA,IAGAiH,GAAA2b,EAAAyH,EAAAC,EAHAK,EAAA3qB,KAAA6L,MACA+e,EAAA5qB,KAAAyoB,YAAA5c,MACAib,KAAA4D,EAAA,GAAAxlB,GAAAqlB,SAKA,KAAAtjB,EAAA,EAAA2b,EAAA+H,EAAArhB,OAAwCrC,EAAA2b,EAAQ3b,IAAA,CAEhD,IADA6f,EAAA7f,IAAA0jB,EAAA1jB,GAAA,IACAojB,EAAA,EAAAC,EAAAK,EAAA1jB,GAAAqC,OAA4C+gB,EAAAC,EAAQD,IACpDvD,EAAA7f,GAAAojB,GAAAM,EAAA1jB,GAAAojB,IAAAO,EAAA3jB,GAAAojB,GAAAM,EAAA1jB,GAAAojB,IAAA3B,CAOA,OAAA5B,EAAA7f,GAAA,KACA6f,EAAA7f,GAAA,QAAA6f,EAAA7f,GAAA,IACA6f,EAAA7f,GAAA,QAAA6f,EAAA7f,GAAA,KAMA,MADAyjB,GAAA7e,MAAAib,EACA4D,GAGArF,MAAA,SAAAyB,GAEA,GAAAA,YAAA5hB,GAAAqlB,UAAA,MAAAzD,GAAA+B,SAGA,IAAAxH,GAAA1d,EAGAknB,GAAoBpB,EAAA,EAAAE,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAE,EAAA,EAAAD,EAAA,EAIpBpD,GAFA,gBAAAA,GAEAA,EACAzG,QAAAnb,EAAAob,MAAAsG,gBAAA1G,GACAG,QAAAnb,EAAAob,MAAAoG,YAAA,QACArG,QAAAnb,EAAAob,MAAAmG,OAAA,QACA/b,OACAC,MAAAzF,EAAAob,MAAAkG,WAGAM,EAAAgE,OAAA,SAAAC,EAAAC,GACA,SAAAjS,OAAAkH,KAAA8K,EAAAC,OAKA,IAAArnB,MACA2S,EAAA,GAAApR,GAAA0T,MACA8Q,EAAA,GAAAxkB,GAAA0T,MACA/H,EAAA,EACAwY,EAAAvC,EAAAxd,MAEA,IAEApE,EAAAob,MAAAqG,aAAA3e,KAAA8e,EAAAjW,KACAwQ,EAAAyF,EAAAjW,KACAA,GAEO,KAAAwQ,EACPA,EAAA,IACO,KAAAA,IACPA,EAAA,KAGA1d,EAAAmH,KAAA0e,EAAAnI,GAAApB,KAAA,KACA6G,EAAApG,MAAA7P,KAAAga,EAAAxJ,EAAAG,gBAAAxf,IAAAiI,YACAqM,EAAAoT,UAIKL,EAAAxY,EAEL,OAAAlN,IAIAue,KAAA,WAGA,MAFAhd,GAAAwe,OAAA9f,KAAAgI,aAAA,IAAA5L,KAAAgiB,YAEA9c,EAAAwe,OAAA9f,KAAA2lB,aAMArkB,EAAAzG,OAAAyG,EAAAsf,QAEAN,OAAA,SAAArY,EAAAof,GAEAjrB,KAAA6L,MAAA,EACA7L,KAAAirB,QAAA,GAGA,gBAAApf,GAEA7L,KAAA6L,MAAAkE,MAAAlE,GAAA,EAAAqf,SAAArf,OAAA,iBAEK,gBAAAA,IACLof,EAAApf,EAAAwX,MAAAne,EAAAob,MAAAuF,kBAIA7lB,KAAA6L,MAAA5B,WAAAghB,EAAA,IAGA,KAAAA,EAAA,GACAjrB,KAAA6L,OAAA,IACA,KAAAof,EAAA,KACAjrB,KAAA6L,OAAA,KAGA7L,KAAAirB,OAAA,IAIApf,YAAA3G,GAAAzG,SACAuB,KAAA6L,QAAAgd,UACA7oB,KAAAirB,KAAApf,EAAAof,OAMA9lB,QAEA6c,SAAA,WACA,OACA,KAAAhiB,KAAAirB,QACA,IAAAjrB,KAAA6L,OAAA,IACA,KAAA7L,KAAAirB,KACAjrB,KAAA6L,MAAA,IACA7L,KAAA6L,OACA7L,KAAAirB,MAEAE,OAAA,WACA,MAAAnrB,MAAAgiB,YAGA6G,QAAA,WACA,MAAA7oB,MAAA6L,OAGAuf,KAAA,SAAAC,GAEA,MADAA,GAAA,GAAAnmB,GAAAzG,OAAA4sB,GACA,GAAAnmB,GAAAzG,OAAAuB,KAAAqrB,EAAArrB,KAAAirB,MAAAI,EAAAJ,OAGAK,MAAA,SAAAD,GAEA,MADAA,GAAA,GAAAnmB,GAAAzG,OAAA4sB,GACA,GAAAnmB,GAAAzG,OAAAuB,KAAAqrB,EAAArrB,KAAAirB,MAAAI,EAAAJ,OAGAM,MAAA,SAAAF,GAEA,MADAA,GAAA,GAAAnmB,GAAAzG,OAAA4sB,GACA,GAAAnmB,GAAAzG,OAAAuB,KAAAqrB,EAAArrB,KAAAirB,MAAAI,EAAAJ,OAGAO,OAAA,SAAAH,GAEA,MADAA,GAAA,GAAAnmB,GAAAzG,OAAA4sB,GACA,GAAAnmB,GAAAzG,OAAAuB,KAAAqrB,EAAArrB,KAAAirB,MAAAI,EAAAJ,OAGA/Q,GAAA,SAAA+Q,GACA,GAAAI,GAAA,GAAAnmB,GAAAzG,OAAAuB,KAKA,OAHA,gBAAAirB,KACAI,EAAAJ,QAEAI,GAGA7C,MAAA,SAAA6C,GAOA,MANArrB,MAAAyoB,YAAA,GAAAvjB,GAAAzG,OAAA4sB,GAEAA,EAAAI,WACAzrB,KAAAyoB,YAAA5c,OAAA7L,KAAA6L,OAGA7L,MAGA4G,GAAA,SAAA8hB,GAEA,MAAA1oB,MAAAyoB,YAGA,GAAAvjB,GAAAzG,OAAAuB,KAAAyoB,aACA6C,MAAAtrB,MACAurB,MAAA7C,GACA0C,KAAAprB,MANAA,SAaAkF,EAAA8f,QAAA9f,EAAAsf,QAEAN,OAAA,SAAAjhB,GAEAjD,KAAA0rB,QAAAxmB,EAAAoiB,SAAAxK,MAAAxa,OACAtC,KAAA2rB,OAAA,KAGA3rB,KAAA4rB,QAGA5rB,KAAAiD,UACAjD,KAAApB,KAAAqE,EAAAgF,SACAjI,KAAAiD,KAAA6hB,SAAA9kB,KAGAA,KAAA0rB,QAAAzoB,EAAA8K,aAAA,WAAA/N,KAAA0rB,UAKAvmB,QAEAI,EAAA,SAAAA,GACA,MAAAvF,MAAAqC,KAAA,IAAAkD,IAGAC,EAAA,SAAAA,GACA,MAAAxF,MAAAqC,KAAA,IAAAmD,IAGAyF,GAAA,SAAA1F,GACA,aAAAA,EAAAvF,KAAAuF,IAAAvF,KAAAyC,QAAA,EAAAzC,KAAAuF,IAAAvF,KAAAyC,QAAA,IAGAyI,GAAA,SAAA1F,GACA,aAAAA,EAAAxF,KAAAwF,IAAAxF,KAAA0C,SAAA,EAAA1C,KAAAwF,IAAAxF,KAAA0C,SAAA,IAGA4mB,KAAA,SAAA/jB,EAAAC,GACA,MAAAxF,MAAAuF,KAAAC,MAGAqmB,OAAA,SAAAtmB,EAAAC,GACA,MAAAxF,MAAAiL,GAAA1F,GAAA2F,GAAA1F,IAGA/C,MAAA,SAAAA,GACA,MAAAzC,MAAAqC,KAAA,QAAAI,IAGAC,OAAA,SAAAA,GACA,MAAA1C,MAAAqC,KAAA,SAAAK,IAGA+iB,KAAA,SAAAhjB,EAAAC,GACA,GAAA4T,GAAA2L,EAAAjiB,KAAAyC,EAAAC,EAEA,OAAA1C,MACAyC,MAAA,GAAAyC,GAAAzG,OAAA6X,EAAA7T,QACAC,OAAA,GAAAwC,GAAAzG,OAAA6X,EAAA5T,UAGA+d,MAAA,SAAAmE,GAEA5kB,KAAA8rB,gBAGA,IAAArL,GAAAoC,EAAA7iB,KAAAiD,KAAA8N,WAAA,GAMA,OAHA6T,KAAA9L,IAAA2H,GACAzgB,KAAA+rB,MAAAtL,GAEAA,GAGAxf,OAAA,WAIA,MAHAjB,MAAA4kB,UACA5kB,KAAA4kB,SAAAoH,cAAAhsB,MAEAA,MAGAqgB,QAAA,SAAA7Y,GAGA,MAFAxH,MAAA+rB,MAAAvkB,GAAAvG,SAEAuG,GAGAykB,MAAA,SAAArH,GACA,MAAAA,GAAAsH,IAAAlsB,OAGAmsB,MAAA,SAAAvH,GACA,MAAAA,GAAA9L,IAAA9Y,OAGA4B,GAAA,SAAAA,GACA,MAAA5B,MAAAqC,KAAA,KAAAT,IAGAwqB,OAAA,SAAA7mB,EAAAC,GACA,GAAA+R,GAAAvX,KAAAkiB,MAEA,OAAA3c,GAAAgS,EAAAhS,GACAC,EAAA+R,EAAA/R,GACAD,EAAAgS,EAAAhS,EAAAgS,EAAA9U,OACA+C,EAAA+R,EAAA/R,EAAA+R,EAAA7U,QAGA2pB,KAAA,WACA,MAAArsB,MAAAsB,MAAA,eAGAgrB,KAAA,WACA,MAAAtsB,MAAAsB,MAAA,mBAGAirB,QAAA,WACA,cAAAvsB,KAAAsB,MAAA,YAGA0gB,SAAA,WACA,MAAAhiB,MAAAqC,KAAA,OAGAmqB,QAAA,WACA,GAAAnqB,GAAArC,KAAAqC,KAAA,QAEA,cAAAA,OAAAqI,OAAAC,MAAAzF,EAAAob,MAAAkG,YAGAiG,SAAA,SAAA9gB,GACA,UAAA3L,KAAAwsB,UAAA5hB,QAAAe,IAGA+gB,SAAA,SAAA/gB,GACA,IAAA3L,KAAAysB,SAAA9gB,GAAA,CACA,GAAAmb,GAAA9mB,KAAAwsB,SACA1F,GAAAhc,KAAAa,GACA3L,KAAAqC,KAAA,QAAAykB,EAAAzd,KAAA,MAGA,MAAArJ,OAGA2sB,YAAA,SAAAhhB,GAOA,MANA3L,MAAAysB,SAAA9gB,IACA3L,KAAAqC,KAAA,QAAArC,KAAAwsB,UAAAvF,OAAA,SAAA7G,GACA,MAAAA,IAAAzU,IACStC,KAAA,MAGTrJ,MAGA4sB,YAAA,SAAAjhB,GACA,MAAA3L,MAAAysB,SAAA9gB,GAAA3L,KAAA2sB,YAAAhhB,GAAA3L,KAAA0sB,SAAA/gB,IAGA2X,UAAA,SAAAjhB,GACA,MAAA6C,GAAA2nB,IAAA7sB,KAAAqC,UAGAuiB,OAAA,SAAAhmB,GACA,GAAAgmB,GAAA5kB,IAGA,KAAA4kB,EAAA3hB,KAAA2G,WAAA,WAKA,IAFAgb,EAAA1f,EAAA6d,MAAA6B,EAAA3hB,KAAA2G,aAEAhL,EAAA,MAAAgmB,EAGA,MAAAA,KAAA3hB,eAAA4E,GAAAC,YAAA,CACA,mBAAAlJ,GAAAgmB,EAAA/D,QAAAjiB,GAAAgmB,YAAAhmB,GAAA,MAAAgmB,EACA,KAAAA,EAAA3hB,KAAA2G,YAAA,aAAAgb,EAAA3hB,KAAA2G,WAAA3B,SAAA,WACA2c,GAAA1f,EAAA6d,MAAA6B,EAAA3hB,KAAA2G,cAIAhE,IAAA,WACA,MAAA5F,gBAAAkF,GAAAoQ,IAAAtV,UAAA4kB,OAAA1f,EAAAoQ,MAGAwX,QAAA,SAAAluB,GACA,GAAAkuB,MAAAlI,EAAA5kB,IAEA,IAEA,KADA4kB,WAAAhmB,MACAgmB,EAAA3hB,KAAA,KAEA6pB,GAAAhiB,KAAA8Z,SACOA,SAEP,OAAAkI,IAGAjM,QAAA,SAAAC,GACA,MAAAD,GAAA7gB,KAAAiD,KAAA6d,IAGA8E,OAAA,WACA,MAAA5lB,MAAAiD,MAGApF,IAAA,SAAAA,GAEA,GAAAkvB,GAAAplB,EAAAuF,cAAA,MAGA,MAAArP,GAAAmC,eAAAkF,GAAA8nB,QAoBA,MATAD,GAAAxf,YAAA1P,EAAA8J,EAAAuF,cAAA,QAGAlN,KAAA8rB,iBAGAjuB,EAAA0P,YAAAvN,KAAAiD,KAAA8N,WAAA,IAGAgc,EAAA5f,UAAAkT,QAAA,aAAAA,QAAA,cAlBA0M,GAAA5f,UAAA,QAAAtP,EAAAwiB,QAAA,SAAAA,QAAA,gDAGA,QAAApZ,GAAA,EAAA2b,EAAAmK,EAAAE,WAAAnK,WAAAxZ,OAA+DrC,EAAA2b,EAAQ3b,IACvEjH,KAAAiD,KAAAsK,YAAAwf,EAAAE,sBAiBA,OAAAjtB,OAGA8rB,eAAA,WAGA,GAAA9rB,KAAAktB,MAAAltB,KAAAmtB,MAAA,EACAntB,KAAAktB,KAAAltB,UAAAmtB,SACAD,KAAA,WACAltB,KAAA8rB,mBAUA,MALA9rB,MAAAiD,KAAAmqB,gBAAA,cAEA/e,OAAA1Q,KAAAqC,KAAA4rB,KAAAtiB,QACAtJ,KAAAiD,KAAA2I,aAAA,aAAAwZ,KAAAiI,UAAArtB,KAAA4rB,MAEA5rB,MAGAmlB,QAAA,SAAA1C,GAEA,MADAziB,MAAA4rB,IAAAnJ,EACAziB,MAEA4gB,GAAA,SAAAxd,GACA,MAAAwd,GAAA5gB,KAAAoD,OAKA8B,EAAAooB,QACAC,IAAA,SAAA7E,GAAqB,MAAAA,IACrB8E,KAAA,SAAA9E,GAAqB,OAAAre,KAAA8B,IAAAuc,EAAAre,KAAA+B,IAAA,MACrBqhB,IAAA,SAAA/E,GAAqB,MAAAre,MAAAqjB,IAAAhF,EAAAre,KAAA+B,GAAA,IACrBuhB,IAAA,SAAAjF,GAAqB,SAAAre,KAAA8B,IAAAuc,EAAAre,KAAA+B,GAAA,KAGrBlH,EAAAsjB,MAAA,SAAAE,GACA,gBAAAvO,EAAAD,GACA,UAAAhV,GAAA0oB,SAAAzT,EAAAD,GAAAtT,GAAA8hB,KAIAxjB,EAAA2oB,UAAA3oB,EAAAsf,QAEAN,OAAA,SAAAzB,GACAziB,KAAA4I,MAAA,EACA5I,KAAA8tB,UAAA,EACA9tB,KAAA+tB,WAAA,EAEA/tB,KAAAhB,SAAA,GAAAkG,GAAAzG,OAAAgkB,EAAAzjB,UAAA6pB,UACA7oB,KAAAZ,MAAA,GAAA8F,GAAAzG,OAAAgkB,EAAArjB,OAAAypB,UAEA7oB,KAAAS,OAAA,GAAAutB,MAAAhuB,KAAAZ,MACAY,KAAAuR,OAAAvR,KAAAS,MAAAT,KAAAhB,SACAgB,KAAAb,KAAAsjB,EAAAtjB,KAIAa,KAAAiuB,KAAA,EACAjuB,KAAAkuB,OAAA,EAEAluB,KAAAmuB,cAKAnuB,KAAA8c,SAKA9c,KAAAouB,UAKApuB,KAAA+lB,cAKA/lB,KAAAquB,WAUAnpB,EAAA2T,GAAA3T,EAAAsf,QAEAN,OAAA,SAAA1c,GACAxH,KAAAsuB,QAAA9mB,EACAxH,KAAAuuB,cACAvuB,KAAAwuB,QAAA,EACAxuB,KAAAyuB,UAAA,KACAzuB,KAAA0uB,QAAA,EACA1uB,KAAA2uB,QAAA,EACA3uB,KAAA0oB,IAAA,EAGA1oB,KAAA4uB,OAAA,EACA5uB,KAAA6uB,OAAA,GAGA1pB,QASArE,QAAA,SAAA2hB,EAAAtjB,EAAAC,GAEA,gBAAAqjB,KACAtjB,EAAAsjB,EAAAtjB,KACAC,EAAAqjB,EAAArjB,MACAqjB,IAAAzjB,SAGA,IAAAyvB,GAAA,GAAAvpB,GAAA2oB,WACA7uB,SAAAyjB,GAAA,IACArjB,SAAA,EACAD,KAAA+F,EAAAooB,OAAAnuB,GAAA,MAAAA,GAKA,OAFAa,MAAA8uB,MAAAL,GAEAzuB,MAQAZ,MAAA,SAAAA,GAGA,GAAAqvB,GAAA,GAAAvpB,GAAA2oB,WACA7uB,SAAAI,EACAA,MAAA,EACAD,KAAA+F,EAAAooB,OAAA,MAGA,OAAAttB,MAAA8uB,MAAAL,IAQA/L,OAAA,SAAAA,GACA,MAAAA,gBAAAxd,GAAA8f,SACAhlB,KAAAsuB,QAAA5L,EACA1iB,MAGAA,KAAAsuB,SAIAS,aAAA,SAAAC,GACA,OAAAA,EAAAhvB,KAAAyuB,UAAAhuB,QAAAT,KAAAyuB,UAAAzvB,SAAAgB,KAAA6uB,SAIAI,aAAA,SAAAL,GACA,MAAA5uB,MAAAyuB,UAAAzvB,SAAAgB,KAAA6uB,OAAAD,EAAA5uB,KAAAyuB,UAAAhuB,OAIAyuB,eAAA,WACAlvB,KAAAmvB,gBACAnvB,KAAAovB,eAAAvnB,EAAA+K,sBAAA,WAAoE5S,KAAAqvB,QAAcC,KAAAtvB,QAIlFmvB,cAAA,WACAtnB,EAAAqL,qBAAAlT,KAAAovB,iBAIA3uB,MAAA,WAOA,OALAT,KAAAwuB,QAAAxuB,KAAAyuB,YACAzuB,KAAAwuB,QAAA,EACAxuB,KAAAuvB,gBAGAvvB,MAIAuvB,aAAA,WAGA,MAFAvvB,MAAAyuB,UAAAhuB,OAAA,GAAAutB,MAAAhuB,KAAAyuB,UAAArvB,MAAAY,KAAA6uB,OACA7uB,KAAAyuB,UAAAld,OAAAvR,KAAAyuB,UAAAhuB,MAAAT,KAAAyuB,UAAAzvB,SAAAgB,KAAA6uB,OACA7uB,KAAAwvB,iBAAAH,QAQAP,MAAA,SAAA9lB,GAMA,OALA,kBAAAA,gBAAA9D,GAAA2oB,YACA7tB,KAAAuuB,WAAAzjB,KAAA9B,GAEAhJ,KAAAyuB,YAAAzuB,KAAAyuB,UAAAzuB,KAAAuuB,WAAAkB,SAEAzvB,MAOA0vB,QAAA,WAgBA,MAdA1vB,MAAA2G,OAGA3G,KAAAyuB,UAAAzuB,KAAAuuB,WAAAkB,QAEAzvB,KAAAyuB,YACAzuB,KAAAyuB,oBAAAvpB,GAAA2oB,UACA7tB,KAAAS,QAGAT,KAAAyuB,UAAAxO,KAAAjgB,OAIAA,MAKAwvB,eAAA,WACA,GAAAvoB,GAAAojB,EAAAsF,EACAtO,EAAArhB,KAAAyuB,SAEA,IAAApN,EAAAzY,KAAA,MAAA5I,KAEA,KAAAiH,IAAAoa,GAAA8M,WAeA,IAdAwB,EAAA3vB,KAAA0iB,SAAAzb,KAEA1I,MAAAoiB,QAAAgP,KACAA,OAGApxB,MAAAoiB,QAAAU,EAAA8M,WAAAlnB,MACAoa,EAAA8M,WAAAlnB,IAAAoa,EAAA8M,WAAAlnB,KAOAojB,EAAAsF,EAAArmB,OAA8B+gB,KAG9BhJ,EAAA8M,WAAAlnB,GAAAojB,YAAAnlB,GAAAzG,SACAkxB,EAAAtF,GAAA,GAAAnlB,GAAAzG,OAAAkxB,EAAAtF,KAEAhJ,EAAA8M,WAAAlnB,GAAAojB,GAAAsF,EAAAtF,GAAA7B,MAAAnH,EAAA8M,WAAAlnB,GAAAojB,GAIA,KAAApjB,IAAAoa,GAAAvE,MACAuE,EAAAvE,MAAA7V,GAAA,GAAA/B,GAAA0oB,SAAA5tB,KAAA0iB,SAAArgB,KAAA4E,GAAAoa,EAAAvE,MAAA7V,GAGA,KAAAA,IAAAoa,GAAA+M,OACA/M,EAAA+M,OAAAnnB,GAAA,GAAA/B,GAAA0oB,SAAA5tB,KAAA0iB,SAAAphB,MAAA2F,GAAAoa,EAAA+M,OAAAnnB,GAMA,OAHAoa,GAAAuO,sBAAA5vB,KAAA0iB,SAAAmN,YAEAxO,EAAAzY,MAAA,EACA5I,MAEA8vB,WAAA,WAEA,MADA9vB,MAAAuuB,cACAvuB,MAEA+vB,aAAA,WAEA,MADA/vB,MAAAyuB,UAAA,KACAzuB,MAOA2G,KAAA,SAAAqpB,EAAAF,GACA,GAAAtB,GAAAxuB,KAAAwuB,MAeA,OAdAxuB,MAAAwuB,QAAA,EAEAsB,GACA9vB,KAAA8vB,aAGAE,GAAAhwB,KAAAyuB,aAEAD,GAAAxuB,KAAAuvB,eACAvvB,KAAAiwB,SAGAjwB,KAAAmvB,gBAEAnvB,KAAA+vB,gBAMAxf,MAAA,WACA,GAAAvQ,KAAAyuB,UAAA,CACA,GAAAyB,GAAAlwB,KAAAyuB,SACAzuB,MAAA2G,OACA3G,KAAAyuB,UAAAyB,EACAlwB,KAAAmwB,UAEA,MAAAnwB,OAIAuR,OAAA,WAIA,IAFAvR,KAAA2G,MAAA,MAEA3G,KAAA0vB,UAAAjB,WAAAzuB,KAAA2G,MAAA,QAIA,MAFA3G,MAAA8vB,aAAAC,eAEA/vB,MAIAmwB,QAAA,WACA,MAAAnwB,MAAA4G,GAAA,OAIAqpB,MAAA,WAMA,OALA,IAAAjwB,KAAAyuB,UAAAP,QAEAluB,KAAAyuB,UAAAP,MAAAluB,KAAAyuB,UAAAR,KAAA,GAGA,gBAAAjuB,MAAAyuB,UAAAP,MAEAluB,KAAA4G,GAAA5G,KAAAyuB,UAAAP,OAAA,GAGAluB,KAAA4G,GAAA,OAMAA,GAAA,SAAA8hB,EAAA0H,GACA,GAAAC,GAAArwB,KAAAyuB,UAAAzvB,SAAAgB,KAAA6uB,MAYA,OAVA7uB,MAAA4uB,OAAAlG,EAEA0H,IACApwB,KAAAyuB,UAAAX,WAAA9tB,KAAA4uB,OAAA,EAAA5uB,KAAA4uB,QACA5uB,KAAA4uB,QAAA5uB,KAAAyuB,UAAAR,MAGAjuB,KAAAyuB,UAAAhuB,OAAA,GAAAutB,MAAAhuB,KAAA4uB,OAAAyB,EACArwB,KAAAyuB,UAAAld,OAAAvR,KAAAyuB,UAAAhuB,MAAA4vB,EAEArwB,KAAAqvB,MAAA,IAQAngB,MAAA,SAAAA,GACA,WAAAA,EAAAlP,KAAAswB,QAEAphB,GACAlP,KAAA6uB,OAAA3f,EAEAlP,KAAA4G,GAAA5G,KAAA4uB,QAAA,IACO5uB,KAAA6uB,QAIPZ,KAAA,SAAA1C,EAAAnb,GACA,GAAAgQ,GAAApgB,KAAAuwB,MAOA,OAJAnQ,GAAA8N,MAAA,MAAA3C,KACAnL,EAAA6N,KAAA,EAEA7d,IAAAgQ,EAAA2N,WAAA,GACA/tB,MAIAswB,MAAA,WAIA,MAHAtwB,MAAA0uB,QAAA,EACA1uB,KAAAmvB,gBAEAnvB,MAIAiR,KAAA,WACA,MAAAjR,MAAA0uB,QACA1uB,KAAA0uB,QAAA,EAEA1uB,KAAA4G,GAAA5G,KAAA4uB,QAAA,IAHA5uB,MAYAoQ,QAAA,SAAA0d,GACA,GAAA1N,GAAApgB,KAAAuwB,MAKA,OAHAnQ,GAAA0N,aAAA,KAAAA,GAAA1N,EAAA0N,SACAA,EAEA9tB,MASA2Q,SAAA,SAAA6f,GACA,MAAAA,GAAAxwB,KAAAyuB,UAAAtvB,KAAAa,KAAA0oB,KAAA1oB,KAAA0oB,KAQAqD,MAAA,SAAA/iB,GACA,GAAAoX,GAAApgB,KAAAuwB,OACAE,EAAA,QAAAA,GAAAzjB,GACAA,EAAA0jB,OAAAjC,WAAArO,IACApX,EAAAiX,KAAAjgB,KAAAogB,GACApgB,KAAAyV,IAAA,cAAAgb,IAMA,OAFAzwB,MAAA0iB,SAAAhf,GAAA,cAAA+sB,GAEAzwB,KAAA2wB,cAIAC,OAAA,SAAA5nB,GACA,GAAAoX,GAAApgB,KAAAuwB,OACAE,EAAA,SAAAzjB,GACAA,EAAA0jB,OAAAjC,WAAArO,GACApX,EAAAiX,KAAAjgB,KAAAgN,EAAA0jB,OAAAhI,IAAAxjB,EAAAsjB,MAAAxb,EAAA0jB,OAAAhI,KAAA1b,EAAA0jB,OAAAG,MAAAzQ,GAWA,OANApgB,MAAA0iB,SAAAjN,IAAA,YAAAgb,GAAA/sB,GAAA,YAAA+sB,GAEAzwB,KAAA+rB,MAAA,WACA/rB,KAAAyV,IAAA,YAAAgb,KAGAzwB,KAAA2wB,cAIA3vB,SAAA,SAAAgI,GACA,GAAAynB,GAAA,QAAAA,GAAAzjB,GACAhE,EAAAiX,KAAAjgB,MACAA,KAAAyV,IAAA,iBAAAgb,GAMA,OAFAzwB,MAAA0iB,SAAAjN,IAAA,iBAAAgb,GAAA/sB,GAAA,iBAAA+sB,GAEAzwB,KAAA2wB,cAIAG,UAAA,SAAA9nB,GACA,GAAAynB,GAAA,SAAAzjB,GACAhE,EAAAiX,KAAAjgB,KAAAgN,EAAA0jB,OAAAhI,IAAAxjB,EAAAsjB,MAAAxb,EAAA0jB,OAAAhI,KAAA1b,EAAA0jB,OAAAG,MAAA7jB,EAAA0jB,OAAAjC,WASA,OANAzuB,MAAA0iB,SAAAjN,IAAA,YAAAgb,GAAA/sB,GAAA,YAAA+sB,GAEAzwB,KAAAgB,SAAA,WACAhB,KAAAyV,IAAA,YAAAgb,KAGAzwB,KAAA2wB,cAGAJ,KAAA,WACA,MAAAvwB,MAAAuuB,WAAAjlB,OAAAtJ,KAAAuuB,WAAAvuB,KAAAuuB,WAAAjlB,OAAA,GAAAtJ,KAAAyuB,WAIA3V,IAAA,SAAAiY,EAAAC,EAAApyB,GAEA,MADAoB,MAAAuwB,OAAA3xB,GAAA,cAAAmyB,GAAAC,EACAhxB,KAAA2wB,cAOAtB,KAAA,SAAA4B,GAMA,GAHAA,IAAAjxB,KAAA4uB,OAAA5uB,KAAA+uB,cAAA,GAAAf,SAGA,IAAAhuB,KAAAyuB,UAAAP,MAAA,CACA,GAAAU,GAAAsC,EAAAC,CAGAvC,GAAAvkB,KAAAE,IAAAvK,KAAA4uB,OAAA,GACAsC,EAAA7mB,KAAAuG,MAAAge,IAEA,IAAA5uB,KAAAyuB,UAAAP,OAAAgD,EAAAlxB,KAAAyuB,UAAAP,OACAluB,KAAA0oB,IAAAkG,EAAAsC,EACAC,EAAAnxB,KAAAyuB,UAAAR,KACAjuB,KAAAyuB,UAAAR,KAAAiD,IAEAlxB,KAAA4uB,OAAA5uB,KAAAyuB,UAAAP,MACAluB,KAAA0oB,IAAA,EAEAyI,EAAAnxB,KAAAyuB,UAAAR,KAAA,EACAjuB,KAAAyuB,UAAAR,KAAAjuB,KAAAyuB,UAAAP,OAGAluB,KAAAyuB,UAAAV,YAEA/tB,KAAAyuB,UAAAX,SAAA9tB,KAAAyuB,UAAAX,UAAAxvB,SAAA0B,KAAAyuB,UAAAR,KAAAkD,GAAA,QAKAnxB,MAAA4uB,OAAAvkB,KAAAC,IAAAtK,KAAA4uB,OAAA,GACA5uB,KAAA0oB,IAAA1oB,KAAA4uB,MAIA5uB,MAAA0oB,IAAA,IAAA1oB,KAAA0oB,IAAA,GAEA1oB,KAAAyuB,UAAAX,WAAA9tB,KAAA0oB,IAAA,EAAA1oB,KAAA0oB,IAIA,IAAAmI,GAAA7wB,KAAAyuB,UAAAtvB,KAAAa,KAAA0oB,IAGA,QAAAzhB,KAAAjH,MAAAyuB,UAAAJ,KACApnB,EAAAjH,KAAA2uB,SAAA1nB,GAAA4pB,IACA7wB,KAAAyuB,UAAAJ,KAAApnB,GAAAgZ,KAAAjgB,KAAA0iB,SAAA1iB,KAAA0oB,IAAAmI,SACA7wB,MAAAyuB,UAAAJ,KAAApnB,GASA,OAJAjH,MAAAwuB,QAAAxuB,KAAA0iB,SAAAjM,KAAA,UAAoDiS,IAAA1oB,KAAA0oB,IAAAmI,QAAAO,GAAApxB,KAAAyuB,UAAAzuB,KAAAyuB,YAIpDzuB,KAAAyuB,WAKAzuB,KAAAqxB,SAGA,GAAArxB,KAAA0oB,MAAA1oB,KAAAyuB,UAAAX,UAAA9tB,KAAAyuB,UAAAX,UAAA,GAAA9tB,KAAA0oB,KAGA1oB,KAAAmvB,gBAGAnvB,KAAA0iB,SAAAjM,KAAA,YAAwC2a,GAAApxB,KAAAyuB,UAAAzuB,KAAAyuB,YAExCzuB,KAAAuuB,WAAAjlB,SACAtJ,KAAA0iB,SAAAjM,KAAA,eAGAzW,KAAAuuB,WAAAjlB,SACAtJ,KAAA0iB,SAAAjN,IAAA,OACAzV,KAAAwuB,QAAA,IAKAxuB,KAAAwuB,OAAAxuB,KAAA0vB,UACA1vB,KAAA+vB,iBAEO/vB,KAAA0uB,QAAA1uB,KAAAwuB,QAEPxuB,KAAAkvB,iBAIAlvB,KAAA2uB,QAAAkC,EACA7wB,MApCAA,MAyCAqxB,OAAA,WACA,GAAApqB,GAAAoiB,EAAAziB,EAAAhG,EAAAZ,KAAA0iB,EAAA1iB,KAAA0iB,SAAArB,EAAArhB,KAAAyuB,SAGA,KAAAxnB,IAAAoa,GAAA8M,WAEAvnB,KAAAmS,OAAAsI,EAAA8M,WAAAlnB,IAAAjF,IAAA,SAAAkG,GACA,sBAAAA,MAAAtB,GAAAsB,EAAAtB,GAAAya,EAAAliB,KAAAyB,EAAA8nB,KAAA9nB,EAAA8nB,KAAAxgB,IAGAwa,EAAAzb,GAAAwM,MAAAiP,EAAA9b,EAKA,KAAAK,IAAAoa,GAAAvE,MAEAlW,GAAAK,GAAA8R,OAAAsI,EAAAvE,MAAA7V,IAAAjF,IAAA,SAAAkG,GACA,sBAAAA,MAAAtB,GAAAsB,EAAAtB,GAAAya,EAAAliB,KAAAyB,EAAA8nB,KAAA9nB,EAAA8nB,KAAAxgB,IAGAwa,EAAArgB,KAAAoR,MAAAiP,EAAA9b,EAKA,KAAAK,IAAAoa,GAAA+M,OAEAxnB,GAAAK,GAAA8R,OAAAsI,EAAA+M,OAAAnnB,IAAAjF,IAAA,SAAAkG,GACA,sBAAAA,MAAAtB,GAAAsB,EAAAtB,GAAAya,EAAAliB,KAAAyB,EAAA8nB,KAAA9nB,EAAA8nB,KAAAxgB,IAGAwa,EAAAphB,MAAAmS,MAAAiP,EAAA9b,EAKA,IAAAya,EAAA0E,WAAAzc,OAAA,CAIA,IADA1C,EAAAya,EAAAuO,sBACA3oB,EAAA,EAAAoiB,EAAAhI,EAAA0E,WAAAzc,OAA6CrC,EAAAoiB,EAASpiB,IAAA,CAGtD,GAAAnH,GAAAuhB,EAAA0E,WAAA9e,EAGAnH,aAAAoF,GAAAwS,OAGA9Q,EADA9G,EAAA2rB,SACA7kB,EAAA0qB,UAAA,GAAApsB,GAAAwS,QAAA8Q,MAAA1oB,GAAA8G,GAAAya,EAAAliB,KAAAa,KAAA0oB,OAEA9hB,EAAA4hB,MAAA1oB,GAAA8G,GAAAya,EAAAliB,KAAAa,KAAA0oB,OAMA5oB,EAAA2rB,UACA3rB,EAAAyxB,KAAA3qB,EAAA4qB,WAGA5qB,IAAA0qB,SAAAxxB,EAAA8G,GAAAya,EAAAliB,KAAAa,KAAA0oB,QAKAhG,EAAAN,OAAAxb,GAGA,MAAA5G,OAMAquB,KAAA,SAAA3F,EAAA1f,EAAAyoB,GACA,GAAArR,GAAApgB,KAAAuwB,MAKA,OAJAkB,KAAA/I,EAAAtI,EAAAjhB,KAAAupB,IAEAtI,EAAAiO,KAAA3F,GAAA1f,EAEAhJ,MAGA2wB,WAAA,WAEA,MADA1d,YAAA,WAA4BjT,KAAAS,SAAa6uB,KAAAtvB,MAAA,GACzCA,OAKA4kB,OAAA1f,EAAA8f,QAGAL,WAEA7jB,QAAA,SAAA2hB,EAAAtjB,EAAAC,GACA,OAAAY,KAAAoxB,KAAApxB,KAAAoxB,GAAA,GAAAlsB,GAAA2T,GAAA7Y,QAAAc,QAAA2hB,EAAAtjB,EAAAC,IAEAA,MAAA,SAAAA,GACA,OAAAY,KAAAoxB,KAAApxB,KAAAoxB,GAAA,GAAAlsB,GAAA2T,GAAA7Y,QAAAZ,UAEAuH,KAAA,SAAAqpB,EAAAF,GAIA,MAHA9vB,MAAAoxB,IACApxB,KAAAoxB,GAAAzqB,KAAAqpB,EAAAF,GAEA9vB,MAEAuR,OAAA,WAIA,MAHAvR,MAAAoxB,IACApxB,KAAAoxB,GAAA7f,SAEAvR,MAGAswB,MAAA,WAIA,MAHAtwB,MAAAoxB,IACApxB,KAAAoxB,GAAAd,QAEAtwB,MAGAiR,KAAA,WAIA,MAHAjR,MAAAoxB,IACApxB,KAAAoxB,GAAAngB,OAEAjR,MAGAkP,MAAA,SAAAA,GACA,GAAAlP,KAAAoxB,GACA,UAAAliB,EACA,MAAAlP,MAAAoxB,GAAAliB,OAEAlP,MAAAoxB,GAAAliB,SAEA,MAAAlP,UAOAkF,EAAA0oB,SAAA1oB,EAAAsf,QAEAN,OAAA,SAAA/J,EAAAD,GAEA,MAAAhV,GAAAgjB,MAAAS,QAAAzO,GAAA,GAAAhV,GAAAgjB,MAAA/N,GAAAqO,MAAAtO,GAEAhV,EAAAob,MAAAkG,UAAAxe,KAAAmS,GAEAjV,EAAAob,MAAAoG,YAAA1e,KAAAmS,GAAA,GAAAjV,GAAAqlB,UAAApQ,GAAAqO,MAAAtO,GAEA,GAAAhV,GAAA3G,MAAA4b,GAAAqO,MAAAtO,GAGAhV,EAAAob,MAAAuF,cAAA7d,KAAAkS,GAAA,GAAAhV,GAAAzG,OAAA0b,GAAAqO,MAAAtO,IAGAla,KAAA6L,MAAAsO,OACAna,KAAAyoB,YAAAvO,KAGA/U,QACAyB,GAAA,SAAA8hB,EAAAgJ,GACA,MAAAA,GAAA,EAAA1xB,KAAA6L,MAAA7L,KAAAyoB,aAGAI,QAAA,WACA,MAAA7oB,MAAA6L,UAMA3G,EAAAC,OAAAD,EAAA2T,IAEAxW,KAAA,SAAAvC,EAAA0Y,EAAAiT,GAEA,mBAAA3rB,GACA,OAAAmf,KAAAnf,GACAE,KAAAqC,KAAA4c,EAAAnf,EAAAmf,QAGAjf,MAAA8Y,IAAAhZ,EAAA0Y,EAAA,QAGA,OAAAxY,OAGAsB,MAAA,SAAA+f,EAAA7I,GACA,mBAAA6I,GACA,OAAApC,KAAAoC,GACArhB,KAAAsB,MAAA2d,EAAAoC,EAAApC,QAGAjf,MAAA8Y,IAAAuI,EAAA7I,EAAA,SAEA,OAAAxY,OAGAuF,EAAA,SAAAA,EAAAkmB,GACA,GAAAzrB,KAAA0iB,kBAAAxd,GAAAE,EAEA,MADApF,MAAA+T,WAAsBxO,KAAIkmB,GAC1BzrB,IAGA,IAAA2xB,GAAA,GAAAzsB,GAAAzG,OAAA8G,EAEA,OADAosB,GAAAlG,WACAzrB,KAAA8Y,IAAA,IAAA6Y,IAGAnsB,EAAA,SAAAA,EAAAimB,GACA,GAAAzrB,KAAA0iB,kBAAAxd,GAAAE,EAEA,MADApF,MAAA+T,WAAsBvO,KAAIimB,GAC1BzrB,IAGA,IAAA2xB,GAAA,GAAAzsB,GAAAzG,OAAA+G,EAEA,OADAmsB,GAAAlG,WACAzrB,KAAA8Y,IAAA,IAAA6Y,IAGA1mB,GAAA,SAAA1F,GACA,MAAAvF,MAAA8Y,IAAA,QAAA5T,GAAAzG,OAAA8G,KAGA2F,GAAA,SAAA1F,GACA,MAAAxF,MAAA8Y,IAAA,QAAA5T,GAAAzG,OAAA+G,KAGA8jB,KAAA,SAAA/jB,EAAAC,GACA,MAAAxF,MAAAuF,KAAAC,MAGAqmB,OAAA,SAAAtmB,EAAAC,GACA,MAAAxF,MAAAiL,GAAA1F,GAAA2F,GAAA1F,IAGAigB,KAAA,SAAAhjB,EAAAC,GACA,GAAA1C,KAAA0iB,kBAAAxd,GAAA0sB,KAEA5xB,KAAAqC,KAAA,YAAAI,OAEK,CAEL,GAAA8U,EAEA9U,IAAAC,IACA6U,EAAAvX,KAAA0iB,SAAAR,QAGAzf,IACAA,EAAA8U,EAAA9U,MAAA8U,EAAA7U,UAGAA,IACAA,EAAA6U,EAAA7U,OAAA6U,EAAA9U,SAGAzC,KAAA8Y,IAAA,WAAA5T,GAAAzG,OAAAgE,IACAqW,IAAA,YAAA5T,GAAAzG,OAAAiE,IAIA,MAAA1C,OAGAyC,MAAA,SAAAA,GACA,MAAAzC,MAAA8Y,IAAA,WAAA5T,GAAAzG,OAAAgE,KAGAC,OAAA,SAAAA,GACA,MAAA1C,MAAA8Y,IAAA,YAAA5T,GAAAzG,OAAAiE,KAGAmvB,KAAA,SAAA/xB,EAAAqgB,EAAAC,EAAAvc,GAEA,UAAAugB,UAAA9a,OACAtJ,KAAA6xB,MAAA/xB,EAAAqgB,EAAAC,EAAAvc,IAGA7D,KAAA8Y,IAAA,WAAA9Y,KAAA0iB,SAAA,YAAA5iB,KAGAgyB,QAAA,SAAAjmB,GACA,MAAA7L,MAAA0iB,SAAAoP,QACA9xB,KAAA8Y,IAAA,aAAA5T,GAAAzG,OAAAoN,IACA7L,MAGAyX,QAAA,SAAAlS,EAAAC,EAAA/C,EAAAC,GAKA,MAJA1C,MAAA0iB,kBAAAxd,GAAA2f,WACA7kB,KAAA8Y,IAAA,aAAA5T,GAAA6sB,QAAAxsB,EAAAC,EAAA/C,EAAAC,IAGA1C,MAEAgyB,OAAA,SAAAvP,GACA,GAAAziB,KAAA0iB,kBAAAxd,GAAA+sB,KAAA,CACA,mBAAAxP,gBAAAvd,GAAAzG,OACA,MAAAuB,MAAAgyB,QACApK,OAAAxD,UAAA,GACA+D,MAAA/D,UAAA,GACArjB,QAAAqjB,UAAA,IAIA,OAAA3B,EAAA1hB,SAAAf,KAAAqC,KAAA,eAAAogB,EAAA1hB,SACA,MAAA0hB,EAAA0F,OAAAnoB,KAAAqC,KAAA,aAAAogB,EAAA0F,OACA,MAAA1F,EAAAmF,QAAA5nB,KAAAqC,KAAA,SAAAogB,EAAAmF,QAGA,MAAA5nB,SAIAkF,EAAAsS,IAAAtS,EAAAsf,QACAN,OAAA,SAAA3e,EAAAC,EAAA/C,EAAAC,GACA,qBAAA6C,gBAAAL,GAAA8f,SAEA,MAAA9f,GAAAsS,IAAAyI,KAAAjgB,KAAA,MAAAuF,EAAA2sB,KAAA3sB,EAAA2sB,KAAA3sB,IAAA,MAAAA,EAAA2M,IAAA3M,EAAA2M,IAAA3M,EAAAC,EAAAD,EAAA9C,MAAA8C,EAAA7C,OACK,IAAA0hB,UAAA9a,SACLtJ,KAAAuF,IACAvF,KAAAwF,IACAxF,KAAAyC,QACAzC,KAAA0C,UAIAugB,EAAAjjB,OAEAmF,QAEAgtB,MAAA,SAAA5a,GACA,GAAA4I,GAAA,GAAAngB,MAAA0H,WAQA,OALAyY,GAAA5a,EAAA8E,KAAAC,IAAAtK,KAAAuF,EAAAgS,EAAAhS,GACA4a,EAAA3a,EAAA6E,KAAAC,IAAAtK,KAAAwF,EAAA+R,EAAA/R,GACA2a,EAAA1d,MAAA4H,KAAAE,IAAAvK,KAAAuF,EAAAvF,KAAAyC,MAAA8U,EAAAhS,EAAAgS,EAAA9U,OAAA0d,EAAA5a,EACA4a,EAAAzd,OAAA2H,KAAAE,IAAAvK,KAAAwF,EAAAxF,KAAA0C,OAAA6U,EAAA/R,EAAA+R,EAAA7U,QAAAyd,EAAA3a,EAEAyd,EAAA9C,IAGApM,UAAA,SAAAuN,GACA,GAAAY,GAAAkQ,EAAAzZ,IAAA0Z,GAAA1Z,IAAA2Z,EAAA3Z,IAAA4Z,GAAA5Z,GAyBA,QAtBA,GAAAzT,GAAA0T,MAAA5Y,KAAAuF,EAAAvF,KAAAwF,GACA,GAAAN,GAAA0T,MAAA5Y,KAAA8F,GAAA9F,KAAAwF,GACA,GAAAN,GAAA0T,MAAA5Y,KAAAuF,EAAAvF,KAAAiG,IACA,GAAAf,GAAA0T,MAAA5Y,KAAA8F,GAAA9F,KAAAiG,KAGAusB,QAAA,SAAAlc,GACAA,IAAAvC,UAAAuN,GACA8Q,EAAA/nB,KAAAC,IAAA8nB,EAAA9b,EAAA/Q,GACA8sB,EAAAhoB,KAAAE,IAAA8nB,EAAA/b,EAAA/Q,GACA+sB,EAAAjoB,KAAAC,IAAAgoB,EAAAhc,EAAA9Q,GACA+sB,EAAAloB,KAAAE,IAAAgoB,EAAAjc,EAAA9Q,KAGA0c,EAAA,GAAAliB,MAAA0H,YACAwa,EAAA3c,EAAA6sB,EACAlQ,EAAAzf,MAAA4vB,EAAAD,EACAlQ,EAAA1c,EAAA8sB,EACApQ,EAAAxf,OAAA6vB,EAAAD,EAEArP,EAAAf,GAEAA,MAKAhd,EAAAutB,KAAAvtB,EAAAsf,QAEAN,OAAA,SAAA1c,GAIA,GAHAtC,EAAAsS,IAAA/D,MAAAzT,QAAA0gB,MAAAT,KAAAmE,YAGA5c,YAAAtC,GAAA8f,QAAA,CACA,GAAAzN,EAGA,KAEA,GAAA5P,EAAAgL,gBAAA+f,UASA,IAAA/qB,EAAAgL,gBAAA+f,SAAAlrB,EAAAvE,MAAA,SAAA0vB,WAAA,8BATA,CAGA,IADA,GAAAC,GAAAprB,EAAAvE,KACA2vB,EAAAhpB,YACAgpB,IAAAhpB,UAEA,IAAAgpB,GAAAjrB,EAAA,SAAAgrB,WAAA,0BAOApb,EAAA/P,EAAAvE,KAAAsmB,UACO,MAAAvc,GACP,GAAAxF,YAAAtC,GAAA2tB,MAAA,CACA,GAAApS,GAAAjZ,EAAAiZ,MAAAvb,EAAAwe,OAAA7iB,KAAAikB,UAAAuH,MACA9U,GAAAkJ,EAAAxd,KAAAsmB,UACA9I,EAAAxf,aAEAsW,IACAhS,EAAAiC,EAAAvE,KAAA6vB,WACAttB,EAAAgC,EAAAvE,KAAA8vB,UACAtwB,MAAA+E,EAAAvE,KAAA+vB,YACAtwB,OAAA8E,EAAAvE,KAAAqP,cAKApN,EAAAsS,IAAAyI,KAAAjgB,KAAAuX,KAMAgN,QAAArf,EAAAsS,IAGAoN,OAAA1f,EAAA8f,QAGAL,WAEAzC,KAAA,WACA,UAAAhd,GAAAutB,KAAAzyB,UAMAkF,EAAAutB,KAAA5pB,UAAAnB,YAAAxC,EAAAutB,KAGAvtB,EAAAC,OAAAD,EAAA8f,SACAiO,KAAA,WAEA,MADA9sB,SAAA6J,KAAA,sEACAhQ,KAAA0F,KAAA1F,KAAA4F,UAIAV,EAAAguB,KAAAhuB,EAAAsf,QAEAN,OAAA,SAAA1c,GACAtC,EAAAsS,IAAA/D,MAAAzT,QAAA0gB,MAAAT,KAAAmE,YAEA5c,YAAAtC,GAAA8f,SACA9f,EAAAsS,IAAAyI,KAAAjgB,KAAAwH,EAAAvE,KAAAT,0BAIA+hB,QAAArf,EAAAsS,IAGAoN,OAAA1f,EAAA8f,QAEA7f,QACAguB,UAAA,WAIA,MAFAnzB,MAAAuF,GAAAsC,EAAAurB,YACApzB,KAAAwF,GAAAqC,EAAA4K,YACAzS,OAKA2kB,WAEAjf,KAAA,SAAAwC,GACA,MAAAA,GAAA,GAAAhD,GAAAguB,KAAAlzB,MAAA+T,UAAA7L,EAAAmrB,YAAAC,WACA,GAAApuB,GAAAguB,KAAAlzB,MAAAmzB,gBAMAjuB,EAAAguB,KAAArqB,UAAAnB,YAAAxC,EAAAguB,KAEAhuB,EAAAwS,OAAAxS,EAAAsf,QAEAN,OAAA,SAAAyL,GACA,GAAA1oB,GAAAwF,EAAA4V,GAAA,aAeA,KAZAsN,cAAAzqB,GAAA8f,QACA2K,EAAAE,YACA,gBAAAF,GACAtN,EAAAsN,EAAAhlB,MAAAzF,EAAAob,MAAAkG,WAAAxkB,IAAAiI,aACA,GAAAma,UAAA9a,OACA+Y,KAAA3B,MAAAT,KAAAmE,YACA7lB,MAAAoiB,QAAAgP,GACAtN,EAAAsN,GACA,gBAAAA,GACAA,EAAAljB,EAGAxF,EAAAssB,EAAAjqB,OAAA,EAA+BrC,GAAA,IAAQA,EACvCjH,KAAAuzB,EAAAtsB,IAAA,MAAA0oB,EAAA4D,EAAAtsB,IACA0oB,EAAA4D,EAAAtsB,IAAAwF,EAAA8mB,EAAAtsB,KAIA9B,QAEAqsB,QAAA,WAEA,GAAA3rB,GAAAsc,EAAAniB,KAAA,KACAwzB,EAAArR,EAAAniB,KAAA,KACAyzB,EAAA,IAAAppB,KAAA+B,GAAA/B,KAAAqpB,MAAA7tB,EAAAL,EAAAK,EAAAN,GAAA,EAEA,QAEAA,EAAAvF,KAAAgN,EACAxH,EAAAxF,KAAAsiB,EACAqR,cAAA3zB,KAAAgN,EAAA3C,KAAA8B,IAAAsnB,EAAAppB,KAAA+B,GAAA,KAAApM,KAAAsiB,EAAAjY,KAAAqjB,IAAA+F,EAAAppB,KAAA+B,GAAA,MAAA/B,KAAA4M,KAAAjX,KAAAF,EAAAE,KAAAF,EAAAE,KAAAmgB,EAAAngB,KAAAmgB,GACAyT,cAAA5zB,KAAAsiB,EAAAjY,KAAA8B,IAAAsnB,EAAAppB,KAAA+B,GAAA,KAAApM,KAAAgN,EAAA3C,KAAAqjB,KAAA+F,EAAAppB,KAAA+B,GAAA,MAAA/B,KAAA4M,KAAAjX,KAAAogB,EAAApgB,KAAAogB,EAAApgB,KAAA6D,EAAA7D,KAAA6D,GAEA4vB,SACAI,MAAA,IAAAxpB,KAAA+B,GAAA/B,KAAAqpB,MAAAF,EAAAhuB,EAAAguB,EAAAjuB,GAEAuuB,OAAAzpB,KAAA4M,KAAAjX,KAAAF,EAAAE,KAAAF,EAAAE,KAAAmgB,EAAAngB,KAAAmgB,GACA4T,OAAA1pB,KAAA4M,KAAAjX,KAAAogB,EAAApgB,KAAAogB,EAAApgB,KAAA6D,EAAA7D,KAAA6D,GAEAmwB,SAAAP,EACA3zB,EAAAE,KAAAF,EACAqgB,EAAAngB,KAAAmgB,EACAC,EAAApgB,KAAAogB,EACAvc,EAAA7D,KAAA6D,EACAmJ,EAAAhN,KAAAgN,EACAsV,EAAAtiB,KAAAsiB,EACAF,OAAA,GAAAld,GAAAwS,OAAA1X,QAIAygB,MAAA,WACA,UAAAvb,GAAAwS,OAAA1X,OAGAwoB,MAAA,SAAApG,GAIA,MAFApiB,MAAAyoB,YAAA,GAAAvjB,GAAAwS,OAAA0K,GAEApiB,MAGA4G,GAAA,SAAA8hB,GAEA,MAAA1oB,MAAAyoB,YAGA,GAAAvjB,GAAAwS,QACA5X,EAAAE,KAAAF,GAAAE,KAAAyoB,YAAA3oB,EAAAE,KAAAF,GAAA4oB,EACAvI,EAAAngB,KAAAmgB,GAAAngB,KAAAyoB,YAAAtI,EAAAngB,KAAAmgB,GAAAuI,EACAtI,EAAApgB,KAAAogB,GAAApgB,KAAAyoB,YAAArI,EAAApgB,KAAAogB,GAAAsI,EACA7kB,EAAA7D,KAAA6D,GAAA7D,KAAAyoB,YAAA5kB,EAAA7D,KAAA6D,GAAA6kB,EACA1b,EAAAhN,KAAAgN,GAAAhN,KAAAyoB,YAAAzb,EAAAhN,KAAAgN,GAAA0b,EACApG,EAAAtiB,KAAAsiB,GAAAtiB,KAAAyoB,YAAAnG,EAAAtiB,KAAAsiB,GAAAoG,IATA1oB,MAeAsxB,SAAA,SAAAlP,GACA,UAAAld,GAAAwS,OAAA1X,KAAA4lB,SAAA0L,SAAA/O,EAAAH,GAAAwD,YAGA0N,QAAA,WACA,UAAApuB,GAAAwS,OAAA1X,KAAA4lB,SAAA0N,YAGA3b,UAAA,SAAApS,EAAAC,GACA,UAAAN,GAAAwS,OAAA1X,KAAA4lB,SAAAjO,UAAApS,GAAA,EAAAC,GAAA,KAGAoS,MAAA,SAAArS,EAAAC,EAAAyF,EAAAC,GAUA,MARA,IAAAkZ,UAAA9a,OACA9D,EAAAD,EACO,GAAA6e,UAAA9a,SACP4B,EAAAD,EACAA,EAAAzF,EACAA,EAAAD,GAGAvF,KAAAi0B,OAAAhpB,EAAAC,EAAA,GAAAhG,GAAAwS,OAAAnS,EAAA,IAAAC,EAAA,OAGA0uB,OAAA,SAAA1oB,EAAAP,EAAAC,GAIA,MAFAM,GAAAtG,EAAA2hB,MAAAK,QAAA1b,GAEAxL,KAAAi0B,OAAAhpB,EAAAC,EAAA,GAAAhG,GAAAwS,OAAArN,KAAA8B,IAAAX,GAAAnB,KAAAqjB,IAAAliB,IAAAnB,KAAAqjB,IAAAliB,GAAAnB,KAAA8B,IAAAX,GAAA,OAGA2oB,KAAA,SAAAr0B,EAAA2iB,GACA,WAAA3iB,EACAE,KAAA4X,OAAA,IAAA6K,EAAA,GACA,KAAA3iB,EACAE,KAAA4X,MAAA,OAAA6K,GACAziB,KAAA4X,OAAA,KAAA9X,EAAA,MAAA2iB,IAAA3iB,IAGAs0B,KAAA,SAAA7uB,EAAAC,EAAAyF,EAAAC,GAcA,MAZA,IAAAkZ,UAAA9a,OACA9D,EAAAD,EACO,GAAA6e,UAAA9a,SACP4B,EAAAD,EACAA,EAAAzF,EACAA,EAAAD,GAIAA,EAAAL,EAAA2hB,MAAAK,QAAA3hB,GACAC,EAAAN,EAAA2hB,MAAAK,QAAA1hB,GAEAxF,KAAAi0B,OAAAhpB,EAAAC,EAAA,GAAAhG,GAAAwS,OAAA,EAAArN,KAAAgqB,IAAA7uB,GAAA6E,KAAAgqB,IAAA9uB,GAAA,SAGAkuB,MAAA,SAAAluB,EAAA0F,EAAAC,GACA,MAAAlL,MAAAo0B,KAAA7uB,EAAA,EAAA0F,EAAAC,IAGA2oB,MAAA,SAAAruB,EAAAyF,EAAAC,GACA,MAAAlL,MAAAo0B,KAAA,EAAA5uB,EAAAyF,EAAAC,IAGA+oB,OAAA,SAAAhpB,EAAAC,EAAAkX,GACA,MAAApiB,MACAsxB,SAAA,GAAApsB,GAAAwS,OAAA,QAAAzM,GAAA,EAAAC,GAAA,IACAomB,SAAAlP,GACAkP,SAAA,GAAApsB,GAAAwS,OAAA,SAAAzM,GAAA,GAAAC,GAAA,KAGA0a,OAAA,WAKA,OAHAxD,GAAAld,EAAAwe,OAAAkC,OAAA0O,kBAGArtB,EAAAssB,EAAAjqB,OAAA,EAAqCrC,GAAA,EAAQA,IAC7Cmb,EAAAmR,EAAAtsB,IAAAjH,KAAAuzB,EAAAtsB,GAEA,OAAAmb,IAGAJ,SAAA,WAEA,gBAAAuB,EAAAvjB,KAAAF,GAAA,IAAAyjB,EAAAvjB,KAAAmgB,GACA,IAAAoD,EAAAvjB,KAAAogB,GAAA,IAAAmD,EAAAvjB,KAAA6D,GACA,IAAA0f,EAAAvjB,KAAAgN,GAAA,IAAAuW,EAAAvjB,KAAAsiB,GACA,MAKAsC,OAAA1f,EAAA8f,QAGAL,WAEA4P,IAAA,WACA,UAAArvB,GAAAwS,OAAA1X,KAAAiD,KAAAuxB,WAGAnB,UAAA,WAKA,GAAArzB,eAAAkF,GAAAqQ,OAAA,CACA,GAAArT,GAAAlC,KAAAkC,KAAA,KACAof,EAAApf,EAAAe,KAAAwxB,cAEA,OADAvyB,GAAAjB,SACA,GAAAiE,GAAAwS,OAAA4J,GAEA,UAAApc,GAAAwS,OAAA1X,KAAAiD,KAAAwxB,oBAOAvvB,EAAA0T,MAAA1T,EAAAsf,QAEAN,OAAA,SAAA3e,EAAAC,GACA,GAAAmqB,GAAAljB,GAA2BlH,EAAA,EAAAC,EAAA,EAG3BmqB,GAAApxB,MAAAoiB,QAAApb,IACOA,IAAA,GAAAC,EAAAD,EAAA,IACP,gBAAAA,IACOA,MAAAC,EAAAD,EAAAC,GACP,MAAAD,GACOA,IAAAC,EAAA,MAAAA,IAAAD,GAA2BkH,EAGlCzM,KAAAuF,EAAAoqB,EAAApqB,EACAvF,KAAAwF,EAAAmqB,EAAAnqB,GAIAL,QAEAsb,MAAA,WACA,UAAAvb,GAAA0T,MAAA5Y,OAGAwoB,MAAA,SAAAjjB,EAAAC,GAIA,MAFAxF,MAAAyoB,YAAA,GAAAvjB,GAAA0T,MAAArT,EAAAC,GAEAxF,MAGA4G,GAAA,SAAA8hB,GAEA,MAAA1oB,MAAAyoB,YAGA,GAAAvjB,GAAA0T,OACArT,EAAAvF,KAAAuF,GAAAvF,KAAAyoB,YAAAljB,EAAAvF,KAAAuF,GAAAmjB,EACAljB,EAAAxF,KAAAwF,GAAAxF,KAAAyoB,YAAAjjB,EAAAxF,KAAAwF,GAAAkjB,IALA1oB,MAWA4lB,OAAA,WAEA,GAAArP,GAAArR,EAAAwe,OAAAkC,OAAA8O,gBAMA,OAHAne,GAAAhR,EAAAvF,KAAAuF,EACAgR,EAAA/Q,EAAAxF,KAAAwF,EAEA+Q,GAGAxC,UAAA,SAAAqO,GACA,UAAAld,GAAA0T,MAAA5Y,KAAA4lB,SAAA+O,gBAAAvS,EAAAwD,eAOA1gB,EAAAC,OAAAD,EAAA8f,SAGAzO,MAAA,SAAAhR,EAAAC,GACA,UAAAN,GAAA0T,MAAArT,EAAAC,GAAAuO,UAAA/T,KAAAqzB,YAAAC,cAKApuB,EAAAC,OAAAD,EAAA8f,SAEA3iB,KAAA,SAAAvC,EAAA0Y,EAAA9a,GAEA,SAAAoC,EAAA,CAIA,IAFAA,KACA0Y,EAAAxY,KAAAiD,KAAAyG,WACAhM,EAAA8a,EAAAlP,OAAA,EAA4B5L,GAAA,EAAQA,IACpCoC,EAAA0Y,EAAA9a,GAAAuK,UAAA/C,EAAAob,MAAA+F,SAAAre,KAAAwQ,EAAA9a,GAAAk3B,WAAA3qB,WAAAuO,EAAA9a,GAAAk3B,WAAApc,EAAA9a,GAAAk3B,SAEA,OAAA90B,GAEK,mBAAAA,GAEL,IAAA0Y,IAAA1Y,GAAAE,KAAAqC,KAAAmW,EAAA1Y,EAAA0Y,QAEK,WAAAA,EAELxY,KAAAiD,KAAAmqB,gBAAAttB,OAEK,UAAA0Y,EAGL,MADAA,GAAAxY,KAAAiD,KAAA8K,aAAAjO,GACA,MAAA0Y,EACAtT,EAAAoiB,SAAAxK,MAAAhd,GACAoF,EAAAob,MAAA+F,SAAAre,KAAAwQ,GACAvO,WAAAuO,IAIA,iBAAA1Y,EACAE,KAAAqC,KAAA,SAAA4H,WAAAuO,GAAA,EAAAxY,KAAA0rB,QAAA,MACA,UAAA5rB,IACAE,KAAA0rB,QAAAlT,GAGA,QAAA1Y,GAAA,UAAAA,IACAoF,EAAAob,MAAAiG,QAAAve,KAAAwQ,KACAA,EAAAxY,KAAA4F,MAAAsf,OAAA2P,MAAArc,EAAA,MAEAA,YAAAtT,GAAA4vB,QACAtc,EAAAxY,KAAA4F,MAAAsf,OAAA6P,QAAA,eACA/0B,KAAA8Y,IAAAN,OAKA,gBAAAA,GACAA,EAAA,GAAAtT,GAAAzG,OAAA+Z,GAGAtT,EAAAgjB,MAAAS,QAAAnQ,GACAA,EAAA,GAAAtT,GAAAgjB,MAAA1P,GAGAja,MAAAoiB,QAAAnI,KACAA,EAAA,GAAAtT,GAAA3G,MAAAia,IAGA,WAAA1Y,EAEAE,KAAA8xB,SACA9xB,KAAA8xB,QAAAtZ,GAGA,gBAAA9a,GACAsC,KAAAiD,KAAA+xB,eAAAt3B,EAAAoC,EAAA0Y,EAAAwJ,YACAhiB,KAAAiD,KAAA2I,aAAA9L,EAAA0Y,EAAAwJ,aAIAhiB,KAAAi1B,SAAA,aAAAn1B,GAAA,KAAAA,GACAE,KAAAi1B,QAAAn1B,EAAA0Y,GAGA,MAAAxY,SAGAkF,EAAAC,OAAAD,EAAA8f,SAEAjR,UAAA,SAAA0O,EAAAgJ,GAEA,GACArJ,GAAAF,EADAQ,EAAA1iB,IAIA,oBAAAyiB,GAIA,MAFAL,GAAA,GAAAld,GAAAwS,OAAAgL,GAAA8O,UAEA,gBAAA/O,GAAAL,EAAAK,GAAAL,CAUA,IANAA,EAAA,GAAAld,GAAAwS,OAAAgL,GAGA+I,SAAAhJ,EAAAgJ,SAGA,MAAAhJ,EAAA3iB,EACAsiB,EAAAqJ,EAEArJ,EAAAkP,SAAA,GAAApsB,GAAAwS,OAAA+K,IAEA,GAAAvd,GAAAwS,OAAA+K,OAGK,UAAAA,EAAAuR,SAELxR,EAAAC,EAAAC,GAGAN,EAAAqJ,EAEArJ,EAAA8R,OAAAzR,EAAAuR,SAAAvR,EAAAxX,GAAAwX,EAAAvX,IAEAkX,EAAA8R,OAAAzR,EAAAuR,SAAA5R,EAAAoP,UAAAwC,SAAAvR,EAAAxX,GAAAwX,EAAAvX,QAGK,UAAAuX,EAAA7K,OAAA,MAAA6K,EAAAqR,QAAA,MAAArR,EAAAsR,OAAA,CAQL,GANAvR,EAAAC,EAAAC,GAGAD,EAAAqR,OAAA,MAAArR,EAAA7K,MAAA6K,EAAA7K,MAAA,MAAA6K,EAAAqR,OAAArR,EAAAqR,OAAA,EACArR,EAAAsR,OAAA,MAAAtR,EAAA7K,MAAA6K,EAAA7K,MAAA,MAAA6K,EAAAsR,OAAAtR,EAAAsR,OAAA,GAEAtI,EAAA,CAEA,GAAAze,GAAAoV,EAAAoP,SACA/O,GAAAqR,OAAA,EAAArR,EAAAqR,OAAA9mB,EAAA8mB,OACArR,EAAAsR,OAAA,EAAAtR,EAAAsR,OAAA/mB,EAAA+mB,OAGA3R,IAAAxK,MAAA6K,EAAAqR,OAAArR,EAAAsR,OAAAtR,EAAAxX,GAAAwX,EAAAvX,QAGK,UAAAuX,EAAA2R,MAAA,MAAA3R,EAAAgR,OAAA,MAAAhR,EAAAoR,MAAA,CAQL,GANArR,EAAAC,EAAAC,GAGAD,EAAAgR,MAAA,MAAAhR,EAAA2R,KAAA3R,EAAA2R,KAAA,MAAA3R,EAAAgR,MAAAhR,EAAAgR,MAAA,EACAhR,EAAAoR,MAAA,MAAApR,EAAA2R,KAAA3R,EAAA2R,KAAA,MAAA3R,EAAAoR,MAAApR,EAAAoR,MAAA,GAEApI,EAAA,CAEA,GAAAze,GAAAoV,EAAAoP,SACApP,KAAAkP,UAAA,GAAApsB,GAAAwS,QAAA0c,KAAApnB,EAAAymB,MAAAzmB,EAAA6mB,MAAApR,EAAAxX,GAAAwX,EAAAvX,IAAAooB,WAGAlR,IAAAgS,KAAA3R,EAAAgR,MAAAhR,EAAAoR,MAAApR,EAAAxX,GAAAwX,EAAAvX,QAGKuX,GAAA0R,MACL,KAAA1R,EAAA0R,MAAA,KAAA1R,EAAA0R,KACA1R,EAAAmF,OAAA,MAAAnF,EAAAmF,OAAAlF,EAAAR,OAAA,IAAAO,EAAA0R,MAAA1R,EAAAmF,OAEA,MAAAnF,EAAAmF,QACA1F,EAAAQ,EAAAR,OACAO,EAAA0R,KAAAjS,EAAAjX,GACAwX,EAAAmF,OAAA1F,EAAAhX,IAEAuX,EAAA0R,KAAA1R,EAAAmF,OAIAxF,GAAA,GAAAld,GAAAwS,QAAAyc,KAAA1R,EAAA0R,KAAA1R,EAAAmF,SAGK,MAAAnF,EAAAld,GAAA,MAAAkd,EAAAjd,IACLimB,EAEArJ,IAAAzK,UAAA8K,EAAAld,EAAAkd,EAAAjd,IAGA,MAAAid,EAAAld,IAAA6c,EAAApV,EAAAyV,EAAAld,GACA,MAAAkd,EAAAjd,IAAA4c,EAAAE,EAAAG,EAAAjd,IAIA,OAAAxF,MAAAqC,KAAA,YAAA+f,MAIAld,EAAAC,OAAAD,EAAA2T,IACA9E,UAAA,SAAA0O,EAAAgJ,GAEA,GACArJ,GAAAF,EADAQ,EAAA1iB,KAAA0iB,QAIA,uBAAAD,IAEAL,EAAA,GAAAld,GAAAwS,OAAAgL,GAAA8O,UAEA,gBAAA/O,GAAAL,EAAAK,GAAAL,IAIAqJ,SAAAhJ,EAAAgJ,SAGA,MAAAhJ,EAAA3iB,EACAsiB,EAAA,GAAAld,GAAAwS,OAAA+K,GAGK,MAAAA,EAAAuR,UAELxR,EAAAC,EAAAC,GAGAN,EAAA,GAAAld,GAAAgwB,OAAAzS,EAAAuR,SAAAvR,EAAAxX,GAAAwX,EAAAvX,KAGK,MAAAuX,EAAA7K,OAAA,MAAA6K,EAAAqR,QAAA,MAAArR,EAAAsR,QAELvR,EAAAC,EAAAC,GAGAD,EAAAqR,OAAA,MAAArR,EAAA7K,MAAA6K,EAAA7K,MAAA,MAAA6K,EAAAqR,OAAArR,EAAAqR,OAAA,EACArR,EAAAsR,OAAA,MAAAtR,EAAA7K,MAAA6K,EAAA7K,MAAA,MAAA6K,EAAAsR,OAAAtR,EAAAsR,OAAA,EAEA3R,EAAA,GAAAld,GAAAiwB,MAAA1S,EAAAqR,OAAArR,EAAAsR,OAAAtR,EAAAxX,GAAAwX,EAAAvX,KAGK,MAAAuX,EAAAgR,OAAA,MAAAhR,EAAAoR,OAELrR,EAAAC,EAAAC,GAGAD,EAAAgR,MAAA,MAAAhR,EAAAgR,MAAAhR,EAAAgR,MAAA,EACAhR,EAAAoR,MAAA,MAAApR,EAAAoR,MAAApR,EAAAoR,MAAA,EAEAzR,EAAA,GAAAld,GAAAkwB,KAAA3S,EAAAgR,MAAAhR,EAAAoR,MAAApR,EAAAxX,GAAAwX,EAAAvX,KAGKuX,EAAA0R,MACL,KAAA1R,EAAA0R,MAAA,KAAA1R,EAAA0R,KACA1R,EAAAmF,OAAA,MAAAnF,EAAAmF,OAAAlF,EAAAR,OAAA,IAAAO,EAAA0R,MAAA1R,EAAAmF,OAEA,MAAAnF,EAAAmF,QACA1F,EAAAQ,EAAAR,OACAO,EAAA0R,KAAAjS,EAAAjX,GACAwX,EAAAmF,OAAA1F,EAAAhX,IAEAuX,EAAA0R,KAAA1R,EAAAmF,OAIAxF,GAAA,GAAAld,GAAAwS,QAAAyc,KAAA1R,EAAA0R,KAAA1R,EAAAmF,SAGK,MAAAnF,EAAAld,GAAA,MAAAkd,EAAAjd,IACL4c,EAAA,GAAAld,GAAAmwB,UAAA5S,EAAAld,EAAAkd,EAAAjd,IAGA4c,GAEAA,EAAAqJ,WAEAzrB,KAAAuwB,OAAAxK,WAAAjb,KAAAsX,GAEApiB,KAAA2wB,cANA3wB,SAUAkF,EAAAC,OAAAD,EAAA8f,SAEAsQ,YAAA,WACA,MAAAt1B,MAAAqC,KAAA,mBAGAwtB,UAAA,WAiBA,OAfA7vB,KAAAqC,KAAA,kBAEAsI,MAAAzF,EAAAob,MAAAyF,YAAArF,MAAA,MAAA1e,IAAA,SAAAW,GAEA,GAAA4yB,GAAA5yB,EAAA+H,OAAAC,MAAA,IACA,QAAA4qB,EAAA,GAAAA,EAAA,GAAA5qB,MAAAzF,EAAAob,MAAAkG,WAAAxkB,IAAA,SAAAW,GAA0E,MAAAsH,YAAAtH,QAG1EmoB,OAAA,SAAA1I,EAAArO,GAEA,gBAAAA,EAAA,GAAAqO,EAAAkP,SAAAjP,EAAAtO,EAAA,KACAqO,EAAArO,EAAA,IAAAN,MAAA2O,EAAArO,EAAA,KAEO,GAAA7O,GAAAwS,SAKP8d,SAAA,SAAA5Q,GACA,GAAA5kB,MAAA4kB,EAAA,MAAA5kB,KACA,IAAAu0B,GAAAv0B,KAAAqzB,YACAoC,EAAA7Q,EAAAyO,YAAAC,SAIA,OAFAtzB,MAAAisB,MAAArH,GAAA0Q,cAAAvhB,UAAA0hB,EAAAnE,SAAAiD,IAEAv0B,MAGA01B,MAAA,WACA,MAAA11B,MAAAw1B,SAAAx1B,KAAA4F,UAKAV,EAAAywB,eAAAzwB,EAAAsf,QAEAN,OAAA,SAAAyL,EAAAiG,GAEA,GAAAxR,UAAA9a,OAAA,oBAAAssB,GACA,MAAA51B,MAAA0H,YAAAuY,KAAAjgB,QAAA0gB,MAAAT,KAAAmE,WAGA,IAAA7lB,MAAAoiB,QAAAgP,GACA,OAAA1oB,GAAA,EAAAoiB,EAAArpB,KAAAokB,UAAA9a,OAAiDrC,EAAAoiB,IAASpiB,EAC1DjH,UAAAokB,UAAAnd,IAAA0oB,EAAA1oB,OAEK,oBAAA0oB,GACL,OAAA1oB,GAAA,EAAAoiB,EAAArpB,KAAAokB,UAAA9a,OAAiDrC,EAAAoiB,IAASpiB,EAC1DjH,UAAAokB,UAAAnd,IAAA0oB,EAAA3vB,KAAAokB,UAAAnd,GAIAjH,MAAA41B,UAAA,GAEA,IAAAA,IACA51B,KAAA41B,UAAA,IAKAzwB,QAEAif,aACA2M,OAAA,GAEAnqB,GAAA,SAAA8hB,GAIA,OAFAlO,MAEAvT,EAAA,EAAAoiB,EAAArpB,KAAAokB,UAAA9a,OAAiDrC,EAAAoiB,IAASpiB,EAC1DuT,EAAA1P,KAAA9K,UAAAokB,UAAAnd,IAGA,IAAAqa,GAAAthB,KAAA61B,OAAA,GAAA3wB,GAAAwS,MAIA,OAFA4J,IAAA,GAAApc,GAAAwS,QAAA8Q,MAAAtjB,EAAAwS,OAAA7O,UAAA7I,KAAA+wB,QAAAtd,MAAA6N,EAAA9G,IAAA5T,GAAA8hB,GAEA1oB,KAAA41B,SAAAtU,EAAAgS,UAAAhS,GAIAiQ,KAAA,SAAA9O,GACA,OAAAxb,GAAA,EAAAoiB,EAAArpB,KAAAokB,UAAA9a,OAAiDrC,EAAAoiB,IAASpiB,EAC1Dwb,EAAAziB,KAAAokB,UAAAnd,QAAA,KAAAjH,UAAAokB,UAAAnd,IAAA,EAAAwb,EAAAziB,KAAAokB,UAAAnd,GAWA,OALAwb,GAAAxX,GAAAjL,KAAAiL,GACAwX,EAAAvX,GAAAlL,KAAAkL,GAEAlL,KAAA61B,MAAA,IAAA3wB,EAAAuc,EAAAzhB,KAAA+wB,UAAAtO,GAAA,GAAA7b,GAAA,GAEA5G,SAOAkF,EAAAmwB,UAAAnwB,EAAAsf,QAEAI,OAAA1f,EAAAwS,OACA6M,QAAArf,EAAAywB,eAEAzR,OAAA,SAAAyL,EAAAiG,GACA51B,KAAA0H,YAAA+L,MAAAzT,QAAA0gB,MAAAT,KAAAmE,aAGAjf,QACAif,WAAA,+BACA2M,OAAA,eAKA7rB,EAAAgwB,OAAAhwB,EAAAsf,QAEAI,OAAA1f,EAAAwS,OACA6M,QAAArf,EAAAywB,eAEAzR,OAAA,SAAAyL,EAAAiG,GACA51B,KAAA0H,YAAA+L,MAAAzT,QAAA0gB,MAAAT,KAAAmE,aAGAjf,QACAif,WAAA,sBACA2M,OAAA,SACAnqB,GAAA,SAAA8hB,GACA,GAAApH,IAAA,GAAApc,GAAAwS,QAAAwc,QAAA,GAAAhvB,GAAAzG,QAAA+pB,MAAAxoB,KAAAg0B,UAAAh0B,KAAA61B,MAAA71B,KAAA61B,MAAA7B,SAAA,IAAAptB,GAAA8hB,GAAA1oB,KAAAiL,GAAAjL,KAAAkL,GACA,OAAAlL,MAAA41B,SAAAtU,EAAAgS,UAAAhS,GAEAiQ,KAAA,SAAA9O,GAEA,MADAziB,MAAA61B,MAAApT,EACAziB,SAMAkF,EAAAiwB,MAAAjwB,EAAAsf,QAEAI,OAAA1f,EAAAwS,OACA6M,QAAArf,EAAAywB,eAEAzR,OAAA,SAAAyL,EAAAiG,GACA51B,KAAA0H,YAAA+L,MAAAzT,QAAA0gB,MAAAT,KAAAmE,aAGAjf,QACAif,WAAA,6BACA2M,OAAA,WAKA7rB,EAAAkwB,KAAAlwB,EAAAsf,QAEAI,OAAA1f,EAAAwS,OACA6M,QAAArf,EAAAywB,eAEAzR,OAAA,SAAAyL,EAAAiG,GACA51B,KAAA0H,YAAA+L,MAAAzT,QAAA0gB,MAAAT,KAAAmE,aAGAjf,QACAif,WAAA,2BACA2M,OAAA,UAKA7rB,EAAAC,OAAAD,EAAA8f,SAEA1jB,MAAA,SAAA+f,EAAA7I,GACA,MAAA4L,UAAA9a,OAEA,MAAAtJ,MAAAiD,KAAA3B,MAAAw0B,SAAA,EAEK,IAAA1R,UAAA9a,OAAA,EAEL,mBAAA+X,GACA,IAAA7I,IAAA6I,GAAArhB,KAAAsB,MAAAkX,EAAA6I,EAAA7I,QAEO,KAAAtT,EAAAob,MAAA6F,MAAAne,KAAAqZ,GAaP,MAAArhB,MAAAiD,KAAA3B,MAAA8f,EAAAC,GALA,KANAA,IAAA1W,MAAA,WAEAsc,OAAA,SAAAja,GAA+B,QAAAA,IAC/BhL,IAAA,SAAAgL,GAA2B,MAAAA,GAAArC,MAAA,aAG3B6N,EAAA6I,EAAAgD,OACArkB,KAAAsB,MAAAkX,EAAA,GAAAA,EAAA,QAQAxY,MAAAiD,KAAA3B,MAAA8f,EAAAC,IAAA,OAAA7I,GAAAtT,EAAAob,MAAA8F,QAAApe,KAAAwQ,GAAA,GAAAA,CAGA,OAAAxY,SAGAkF,EAAA8nB,OAAA9nB,EAAAsf,QAEAN,OAAA,SAAA1c,GACAxH,KAAA0H,YAAAuY,KAAAjgB,KAAAwH,IAIA+c,QAAArf,EAAA8f,QAGA7f,QAEApD,SAAA,WACA,MAAAmD,GAAA2hB,MAAA7kB,IAAAkD,EAAA2hB,MAAAO,kBAAApnB,KAAAiD,KAAA6f,YAAA,SAAA7f,GACA,MAAAiC,GAAA6d,MAAA9f,MAIA6V,IAAA,SAAAtR,EAAAP,GAMA,MALA,OAAAA,EACAjH,KAAAiD,KAAAsK,YAAA/F,EAAAvE,MACAuE,EAAAvE,MAAAjD,KAAAiD,KAAA6f,WAAA7b,IACAjH,KAAAiD,KAAA+K,aAAAxG,EAAAvE,KAAAjD,KAAAiD,KAAA6f,WAAA7b,IAEAjH,MAGAksB,IAAA,SAAA1kB,EAAAP,GAEA,MADAjH,MAAA8Y,IAAAtR,EAAAP,GACAO,GAGAuuB,IAAA,SAAAvuB,GACA,MAAAxH,MAAA6Q,MAAArJ,IAAA,GAGAqJ,MAAA,SAAArJ,GACA,SAAAkZ,MAAAT,KAAAjgB,KAAAiD,KAAA6f,YAAAlY,QAAApD,EAAAvE,OAGA4pB,IAAA,SAAA5lB,GACA,MAAA/B,GAAA6d,MAAA/iB,KAAAiD,KAAA6f,WAAA7b,KAGA+uB,MAAA,WACA,MAAAh2B,MAAA6sB,IAAA,IAGA0D,KAAA,WACA,MAAAvwB,MAAA6sB,IAAA7sB,KAAAiD,KAAA6f,WAAAxZ,OAAA,IAGA4jB,KAAA,SAAAnG,EAAAkP,GACA,GAAAhvB,GAAA2b,EACA7gB,EAAA/B,KAAA+B,UAEA,KAAAkF,EAAA,EAAA2b,EAAA7gB,EAAAuH,OAAuCrC,EAAA2b,EAAQ3b,IAC/ClF,EAAAkF,YAAA/B,GAAA8f,SACA+B,EAAAtT,MAAA1R,EAAAkF,MAAAlF,IAEAk0B,GAAAl0B,EAAAkF,YAAA/B,GAAA2f,WACA9iB,EAAAkF,GAAAimB,KAAAnG,EAAAkP,EAGA,OAAAj2B,OAGAgsB,cAAA,SAAAxkB,GAGA,MAFAxH,MAAAiD,KAAAgL,YAAAzG,EAAAvE,MAEAjD,MAGAqB,MAAA,WAEA,KAAArB,KAAAiD,KAAAizB,iBACAl2B,KAAAiD,KAAAgL,YAAAjO,KAAAiD,KAAAkzB,UAKA,cAFAn2B,MAAAo2B,MAEAp2B,MAGAklB,KAAA,WACA,MAAAllB,MAAA4F,MAAAsf,WAMAhgB,EAAAC,OAAAD,EAAA8nB,QAEAqJ,QAAA,SAAAzR,EAAA0R,GACA,WAAAA,GAAAt2B,eAAAkF,GAAAqxB,MAAAv2B,KAAAiD,MAAAiC,EAAAwe,OAAA7iB,KAAAb,MAEA4kB,MAAA5kB,eAAAkF,GAAAoQ,IAAAtV,UAAA4kB,OAAA1f,EAAA8nB,SACAsJ,KAAA3d,IAEA3Y,KAAAktB,KAAA,WACA,MAAAltB,gBAAAkF,GAAAqxB,KAAAv2B,KACAA,eAAAkF,GAAA8nB,OAAAhtB,KAAAq2B,QAAAzR,EAAA0R,EAAA,GACAt2B,KAAAw1B,SAAA5Q,KAGA5kB,KAAAiD,KAAAgqB,YAAAjtB,KAAAiB,SAEAjB,OAGAw2B,QAAA,SAAA5R,EAAA0R,GACA,MAAAt2B,MAAAq2B,QAAAzR,EAAA0R,MAIApxB,EAAA2f,UAAA3f,EAAAsf,QAEAN,OAAA,SAAA1c,GACAxH,KAAA0H,YAAAuY,KAAAjgB,KAAAwH,IAIA+c,QAAArf,EAAA8nB,SAIA9nB,EAAA6sB,QAAA7sB,EAAAsf,QAEAN,OAAA,SAAAyL,GACA,GAEApqB,GAAAC,EAAA/C,EAAAC,EAAA+zB,EAAAC,EAAAC,EAFAlqB,GAAA,SAGAmqB,EAAA,EACAC,EAAA,EACAC,EAAA,8CAEA,IAAAnH,YAAAzqB,GAAA8f,QAAA,CAYA,IAVA0R,EAAA/G,EACAgH,EAAAhH,EACA8G,GAAA9G,EAAAttB,KAAA,gBAAAghB,MAAAyT,GACAnH,EAAAzN,KAGAzf,EAAA,GAAAyC,GAAAzG,OAAAkxB,EAAAltB,SACAC,EAAA,GAAAwC,GAAAzG,OAAAkxB,EAAAjtB,UAGA,KAAAD,EAAAwoB,MACA2L,GAAAn0B,EAAAoJ,MACApJ,EAAA,GAAAyC,GAAAzG,OAAAi4B,YAAAxxB,GAAAoQ,IAAAohB,EAAA9R,SAAAmS,YAAAL,EAAA9R,SAAAniB,SACAi0B,IAAA9R,QAEA,WAAAliB,EAAAuoB,MACA4L,GAAAn0B,EAAAmJ,MACAnJ,EAAA,GAAAwC,GAAAzG,OAAAk4B,YAAAzxB,GAAAoQ,IAAAqhB,EAAA/R,SAAAoS,aAAAL,EAAA/R,SAAAliB,UACAi0B,IAAA/R,QAIA5kB,MAAAuF,EAAA,EACAvF,KAAAwF,EAAA,EACAxF,KAAAyC,QAAAm0B,EACA52B,KAAA0C,SAAAm0B,EACA72B,KAAAqG,KAAA,EAEAowB,IAEAlxB,EAAA0E,WAAAwsB,EAAA,IACAjxB,EAAAyE,WAAAwsB,EAAA,IACAh0B,EAAAwH,WAAAwsB,EAAA,IACA/zB,EAAAuH,WAAAwsB,EAAA,IAGAz2B,KAAAqG,KAAArG,KAAAyC,MAAAzC,KAAA0C,OAAAD,EAAAC,EACA1C,KAAA0C,SACA1C,KAAAyC,QAGAzC,KAAAuF,IACAvF,KAAAwF,IACAxF,KAAAyC,QACAzC,KAAA0C,cAOAitB,GAAA,gBAAAA,GACAA,EAAAtM,MAAAyT,GAAA90B,IAAA,SAAAkG,GAA2C,MAAA+B,YAAA/B,KAC3C3J,MAAAoiB,QAAAgP,GACAA,EACA,gBAAAA,IACAA,EAAApqB,EAAAoqB,EAAAnqB,EAAAmqB,EAAAltB,MAAAktB,EAAAjtB,QACA,GAAA0hB,UAAA9a,UACAoX,MAAAT,KAAAmE,WACA3X,EAEAzM,KAAAuF,EAAAoqB,EAAA,GACA3vB,KAAAwF,EAAAmqB,EAAA,GACA3vB,KAAAyC,MAAAktB,EAAA,GACA3vB,KAAA0C,OAAAitB,EAAA,IAMAxqB,QAEA6c,SAAA,WACA,MAAAhiB,MAAAuF,EAAA,IAAAvF,KAAAwF,EAAA,IAAAxF,KAAAyC,MAAA,IAAAzC,KAAA0C,QAEA8lB,MAAA,SAAAjjB,EAAAC,EAAA/C,EAAAC,GAEA,MADA1C,MAAAyoB,YAAA,GAAAvjB,GAAA6sB,QAAAxsB,EAAAC,EAAA/C,EAAAC,GACA1C,MAGA4G,GAAA,SAAA8hB,GAEA,MAAA1oB,MAAAyoB,YAEA,GAAAvjB,GAAA6sB,SACA/xB,KAAAuF,GAAAvF,KAAAyoB,YAAAljB,EAAAvF,KAAAuF,GAAAmjB,EACA1oB,KAAAwF,GAAAxF,KAAAyoB,YAAAjjB,EAAAxF,KAAAwF,GAAAkjB,EACA1oB,KAAAyC,OAAAzC,KAAAyoB,YAAAhmB,MAAAzC,KAAAyC,OAAAimB,EACA1oB,KAAA0C,QAAA1C,KAAAyoB,YAAA/lB,OAAA1C,KAAA0C,QAAAgmB,IANA1oB,OAcA4kB,OAAA1f,EAAA2f,UAGAF,WAGAlN,QAAA,SAAAlS,EAAAC,EAAA/C,EAAAC,GACA,UAAA0hB,UAAA9a,OAEA,GAAApE,GAAA6sB,QAAA/xB,MAGAA,KAAAqC,KAAA,aAAA6C,GAAA6sB,QAAAxsB,EAAAC,EAAA/C,EAAAC,SAOC,QACD,WACA,YACA,UACA,YACA,WACA,YAGA,aACA,YACA,aACA,WACA,eAAA8vB,QAAA,SAAA9b,GAGAxR,EAAA8f,QAAAnc,UAAA6N,GAAA,SAAA4L,GAGA,MADApd,GAAAxB,GAAA1D,KAAAiD,KAAAyT,EAAA4L,GACAtiB,QAKAkF,EAAA+xB,aACA/xB,EAAAgyB,cACAhyB,EAAAiyB,WAAA,EAGAjyB,EAAAxB,GAAA,SAAAT,EAAAyT,EAAAxF,EAAAkmB,EAAA/uB,GAEA,GAAAmiB,GAAAtZ,EAAAoe,KAAA8H,GAAAn0B,EAAA6hB,UAAA7hB,GACA4N,GAAA3L,EAAAgyB,WAAAtsB,QAAA3H,GAAA,GAAAiC,EAAAgyB,WAAApsB,KAAA7H,IAAA,EACAiS,EAAAwB,EAAA/L,MAAA,QACAiZ,EAAAlN,EAAA/L,MAAA,YAIAzF,GAAA+xB,UAAApmB,GAAA3L,EAAA+xB,UAAApmB,OACA3L,EAAA+xB,UAAApmB,GAAAqE,GAAAhQ,EAAA+xB,UAAApmB,GAAAqE,OACAhQ,EAAA+xB,UAAApmB,GAAAqE,GAAA0O,GAAA1e,EAAA+xB,UAAApmB,GAAAqE,GAAA0O,OAEA1S,EAAAmmB,mBACAnmB,EAAAmmB,mBAAAnyB,EAAAiyB,YAGAjyB,EAAA+xB,UAAApmB,GAAAqE,GAAA0O,GAAA1S,EAAAmmB,kBAAA7M,EAGAvnB,EAAAO,iBAAA0R,EAAAsV,EAAAniB,IAAA,IAIAnD,EAAAuQ,IAAA,SAAAxS,EAAAyT,EAAAxF,GACA,GAAAL,GAAA3L,EAAAgyB,WAAAtsB,QAAA3H,GACAiS,EAAAwB,KAAA/L,MAAA,QACAiZ,EAAAlN,KAAA/L,MAAA,QACAsa,EAAA,EAEA,QAAApU,EAEA,GAAAK,EAAA,CAEA,GADA,kBAAAA,SAAAmmB,mBACAnmB,EAAA,MAGAhM,GAAA+xB,UAAApmB,GAAAqE,IAAAhQ,EAAA+xB,UAAApmB,GAAAqE,GAAA0O,GAAA,OAEA3gB,EAAAmO,oBAAA8D,EAAAhQ,EAAA+xB,UAAApmB,GAAAqE,GAAA0O,GAAA,KAAA1S,IAAA,SAEAhM,GAAA+xB,UAAApmB,GAAAqE,GAAA0O,GAAA,KAAA1S,QAGG,IAAA0S,GAAA1O,GAEH,GAAAhQ,EAAA+xB,UAAApmB,GAAAqE,IAAAhQ,EAAA+xB,UAAApmB,GAAAqE,GAAA0O,GAAA,CACA,IAAA1S,IAAAhM,GAAA+xB,UAAApmB,GAAAqE,GAAA0O,GACA1e,EAAAuQ,IAAAxS,GAAAiS,EAAA0O,GAAAva,KAAA,KAAA6H,SAEAhM,GAAA+xB,UAAApmB,GAAAqE,GAAA0O,QAGG,IAAAA,EAEH,IAAAlN,IAAAxR,GAAA+xB,UAAApmB,GACA,IAAAoU,IAAA/f,GAAA+xB,UAAApmB,GAAA6F,GACAkN,IAAAqB,GACA/f,EAAAuQ,IAAAxS,GAAAyT,EAAAkN,GAAAva,KAAA,UAKG,IAAA6L,GAEH,GAAAhQ,EAAA+xB,UAAApmB,GAAAqE,GAAA,CACA,IAAA+P,IAAA/f,GAAA+xB,UAAApmB,GAAAqE,GACAhQ,EAAAuQ,IAAAxS,GAAAiS,EAAA+P,GAAA5b,KAAA,YAEAnE,GAAA+xB,UAAApmB,GAAAqE,QAGG,CAEH,IAAAwB,IAAAxR,GAAA+xB,UAAApmB,GACA3L,EAAAuQ,IAAAxS,EAAAyT,SAEAxR,GAAA+xB,UAAApmB,SACA3L,GAAAgyB,WAAArmB,KAMA3L,EAAAC,OAAAD,EAAA8f,SAEAthB,GAAA,SAAAgT,EAAAxF,EAAAkmB,EAAA/uB,GAGA,MAFAnD,GAAAxB,GAAA1D,KAAAiD,KAAAyT,EAAAxF,EAAAkmB,EAAA/uB,GAEArI,MAGAyV,IAAA,SAAAiB,EAAAxF,GAGA,MAFAhM,GAAAuQ,IAAAzV,KAAAiD,KAAAyT,EAAAxF,GAEAlR,MAGAyW,KAAA,SAAAC,EAAA/W,GAUA,MAPA+W,aAAA7O,GAAAyvB,MACAt3B,KAAAiD,KAAAs0B,cAAA7gB,GAEA1W,KAAAiD,KAAAs0B,cAAA7gB,EAAA,GAAAxR,GAAAsyB,YAAA9gB,GAAoEga,OAAA/wB,EAAA83B,YAAA,KAGpEz3B,KAAA2rB,OAAAjV,EACA1W,MAEA0W,MAAA,WACA,MAAA1W,MAAA2rB,UAKAzmB,EAAAqxB,KAAArxB,EAAAsf,QAEAN,OAAA,OAGAK,QAAArf,EAAA2f,YAGA3f,EAAAE,EAAAF,EAAAsf,QAEAN,OAAA,IAGAK,QAAArf,EAAA2f,UAGA1f,QAEAI,EAAA,SAAAA,GACA,aAAAA,EAAAvF,KAAA+T,UAAA,KAAA/T,KAAA+T,WAA+DxO,IAAAvF,KAAAuF,MAAkB,IAGjFC,EAAA,SAAAA,GACA,aAAAA,EAAAxF,KAAA+T,UAAA,KAAA/T,KAAA+T,WAA+DvO,IAAAxF,KAAAwF,MAAkB,IAGjFyF,GAAA,SAAA1F,GACA,aAAAA,EAAAvF,KAAA03B,OAAAzsB,GAAAjL,KAAAuF,IAAAvF,KAAA03B,OAAAj1B,MAAA,IAGAyI,GAAA,SAAA1F,GACA,aAAAA,EAAAxF,KAAA03B,OAAAxsB,GAAAlL,KAAAwF,IAAAxF,KAAA03B,OAAAh1B,OAAA,IAEAg1B,KAAA,WAEA,GAAAxV,GAAAliB,KAAAkiB,OACAyV,EAAA33B,KAAA+T,WAUA,OARAmO,GAAA3c,GAAAoyB,EAAApyB,EACA2c,EAAApc,IAAA6xB,EAAApyB,EACA2c,EAAAjX,IAAA0sB,EAAApyB,EAEA2c,EAAA1c,GAAAmyB,EAAAnyB,EACA0c,EAAAjc,IAAA0xB,EAAAnyB,EACA0c,EAAAhX,IAAAysB,EAAAnyB,EAEA0c,IAKAyC,WAEA9hB,MAAA,WACA,MAAA7C,MAAAksB,IAAA,GAAAhnB,GAAAE,OAKAF,EAAAoQ,IAAApQ,EAAAsf,QAEAN,OAAA,SAAA1c,GACAA,IAEAA,EAAA,gBAAAA,GACAG,EAAAC,eAAAJ,GACAA,EAIA,OAAAA,EAAAS,SACAjI,KAAA0H,YAAAuY,KAAAjgB,KAAAwH,IAEAxH,KAAA0H,YAAAuY,KAAAjgB,KAAAkF,EAAAgf,OAAA,QACA1c,EAAA+F,YAAAvN,KAAAiD,MACAjD,KAAAylB,KAAA,gBAIAzlB,KAAAilB,YAAAC,SAKAX,QAAArf,EAAA2f,UAGA1f,QAEA8f,UAAA,WACA,MAAAjlB,MACAqC,MAAewhB,MAAA3e,EAAA0e,GAAApP,QAAA,QACfnS,KAAA,cAAA6C,EAAA4e,MAAA5e,EAAA2e,OACAxhB,KAAA,cAAA6C,EAAA6e,MAAA7e,EAAA2e,QAGAqB,KAAA,WACA,IAAAllB,KAAAo2B,MAAA,CACA,GAAAlR,IAGAA,EAAAllB,KAAAiD,KAAAsiB,qBAAA,YACAvlB,KAAAo2B,MAAAlxB,EAAA6d,MAAAmC,GAEAllB,KAAAo2B,MAAA,GAAAlxB,GAAAqxB,KAGAv2B,KAAAiD,KAAAsK,YAAAvN,KAAAo2B,MAAAnzB,MAGA,MAAAjD,MAAAo2B,OAGAxR,OAAA,WACA,MAAA5kB,MAAAiD,KAAA2G,YAAA,aAAA5J,KAAAiD,KAAA2G,WAAA3B,SACAjI,KAAAiD,KAAA2G,WADA,MAKAguB,KAAA,WACA,GAAAlP,GAAA1oB,KAAAiD,KAAAwxB,cAOA,OALA/L,IACA1oB,KACAsB,MAAA,QAAAonB,EAAA1b,EAAA,QACA1L,MAAA,OAAAonB,EAAApG,EAAA,QAEAtiB,MAIAiB,OAAA,WAKA,MAJAjB,MAAA4kB,UACA5kB,KAAA4kB,SAAA3W,YAAAjO,KAAAiD,MAGAjD,MAEAqB,MAAA,WAEA,KAAArB,KAAAiD,KAAAizB,iBACAl2B,KAAAiD,KAAAgL,YAAAjO,KAAAiD,KAAAkzB,UASA,cANAn2B,MAAAo2B,MAGAlxB,EAAAwe,OAAA7iB,KAAA+I,YACA5J,KAAAiD,KAAAsK,YAAArI,EAAAwe,OAAA7iB,MAEAb,MAEAygB,MAAA,SAAAmE,GAEA5kB,KAAA8rB,gBAGA,IAAA7oB,GAAAjD,KAAAiD,KAGAwd,EAAAoC,EAAA5f,EAAA8N,WAAA,GASA,OANA6T,IACAA,EAAA3hB,MAAA2hB,GAAArX,YAAAkT,EAAAxd,MAEAA,EAAA2G,WAAAoE,aAAAyS,EAAAxd,OAAA40B,aAGApX,MASAvb,EAAAC,OAAAD,EAAA8f,SAEA8S,SAAA,WACA,MAAA93B,MAAA4kB,SAAA7iB,YAGAg2B,SAAA,WACA,MAAA/3B,MAAA4kB,SAAA/T,MAAA7Q,OAGAoa,KAAA,WACA,MAAApa,MAAA83B,WAAA93B,KAAA+3B,WAAA,IAGAC,SAAA,WACA,MAAAh4B,MAAA83B,WAAA93B,KAAA+3B,WAAA,IAGAE,QAAA,WACA,GAAAhxB,GAAAjH,KAAA+3B,WAAA,EACAzhB,EAAAtW,KAAA4kB,QASA,OANAtO,GAAA0V,cAAAhsB,MAAA8Y,IAAA9Y,KAAAiH,GAGAqP,YAAApR,GAAAoQ,KACAgB,EAAArT,KAAAsK,YAAA+I,EAAA4O,OAAAjiB,MAEAjD,MAGAk4B,SAAA,WACA,GAAAjxB,GAAAjH,KAAA+3B,UAKA,OAHA9wB,GAAA,GACAjH,KAAA4kB,SAAAoH,cAAAhsB,MAAA8Y,IAAA9Y,KAAAiH,EAAA,GAEAjH,MAGA4T,MAAA,WACA,GAAA0C,GAAAtW,KAAA4kB,QASA,OANAtO,GAAArT,KAAAsK,YAAAvN,KAAAiD,MAGAqT,YAAApR,GAAAoQ,KACAgB,EAAArT,KAAAsK,YAAA+I,EAAA4O,OAAAjiB,MAEAjD,MAGAqU,KAAA,WAIA,MAHArU,MAAA+3B,WAAA,GACA/3B,KAAA4kB,SAAAoH,cAAAhsB,MAAA8Y,IAAA9Y,KAAA,GAEAA,MAGAm4B,OAAA,SAAA3wB,GACAA,EAAAvG,QAEA,IAAAgG,GAAAjH,KAAA+3B,UAIA,OAFA/3B,MAAA4kB,SAAA9L,IAAAtR,EAAAP,GAEAjH,MAGA+rB,MAAA,SAAAvkB,GACAA,EAAAvG,QAEA,IAAAgG,GAAAjH,KAAA+3B,UAIA,OAFA/3B,MAAA4kB,SAAA9L,IAAAtR,EAAAP,EAAA,GAEAjH,QAIAkF,EAAAkzB,KAAAlzB,EAAAsf,QAEAN,OAAA,WACAlkB,KAAA0H,YAAAuY,KAAAjgB,KAAAkF,EAAAgf,OAAA,SAGAlkB,KAAAq4B,YAIA9T,QAAArf,EAAA2f,UAGA1f,QAEAlE,OAAA,WAEA,OAAAgG,GAAAjH,KAAAq4B,QAAA/uB,OAAA,EAA2CrC,GAAA,EAAQA,IACnDjH,KAAAq4B,QAAApxB,IACAjH,KAAAq4B,QAAApxB,GAAAqxB,QAMA,OALAt4B,MAAAq4B,WAGAnzB,EAAA8f,QAAAnc,UAAA5H,OAAAgf,KAAAjgB,MAEAA,OAKA2kB,WAEA4T,KAAA,WACA,MAAAv4B,MAAAklB,OAAAgH,IAAA,GAAAhnB,GAAAkzB,UAMAlzB,EAAAC,OAAAD,EAAA8f,SAEAwT,SAAA,SAAAhxB,GAQA,MANAxH,MAAAy4B,OAAAjxB,YAAAtC,GAAAkzB,KAAA5wB,EAAAxH,KAAA4kB,SAAA2T,OAAAzf,IAAAtR,GAGAxH,KAAAy4B,OAAAJ,QAAAvtB,KAAA9K,MAGAA,KAAAqC,KAAA,gBAAArC,KAAAy4B,OAAAp2B,KAAA,aAGAi2B,OAAA,WAEA,aADAt4B,MAAAy4B,OACAz4B,KAAAqC,KAAA,gBAKA6C,EAAAwzB,SAAAxzB,EAAAsf,QAEAN,OAAA,WACAlkB,KAAA0H,YAAAuY,KAAAjgB,KAAAkF,EAAAgf,OAAA,aAGAlkB,KAAAq4B,YAIA9T,QAAArf,EAAA2f,UAGA1f,QAEAlE,OAAA,WAEA,OAAAgG,GAAAjH,KAAAq4B,QAAA/uB,OAAA,EAA2CrC,GAAA,EAAQA,IACnDjH,KAAAq4B,QAAApxB,IACAjH,KAAAq4B,QAAApxB,GAAA0xB,QAMA,OALA34B,MAAAq4B,WAGAr4B,KAAA4kB,SAAAoH,cAAAhsB,MAEAA,OAKA2kB,WAEAiU,KAAA,WACA,MAAA54B,MAAAklB,OAAAgH,IAAA,GAAAhnB,GAAAwzB,cAMAxzB,EAAAC,OAAAD,EAAA8f,SAEA6T,SAAA,SAAArxB,GAQA,MANAxH,MAAA84B,QAAAtxB,YAAAtC,GAAAwzB,SAAAlxB,EAAAxH,KAAA4kB,SAAAgU,OAAA9f,IAAAtR,GAGAxH,KAAA84B,QAAAT,QAAAvtB,KAAA9K,MAGAA,KAAAqC,KAAA,qBAAArC,KAAA84B,QAAAz2B,KAAA,aAGAs2B,OAAA,WAEA,aADA34B,MAAA84B,QACA94B,KAAAqC,KAAA,qBAIA6C,EAAA6f,SAAA7f,EAAAsf,QAEAN,OAAA,SAAAtlB,GACAoB,KAAA0H,YAAAuY,KAAAjgB,KAAAkF,EAAAgf,OAAAtlB,EAAA,aAGAoB,KAAApB,QAIA2lB,QAAArf,EAAA2f,UAGA1f,QAEAyB,GAAA,SAAAghB,EAAAO,EAAApnB,GACA,MAAAf,MAAAksB,IAAA,GAAAhnB,GAAA+sB,MAAAD,OAAApK,EAAAO,EAAApnB,IAGAixB,OAAA,SAAAjL,GAQA,MANA/mB,MAAAqB,QAGA,kBAAA0lB,IACAA,EAAA9G,KAAAjgB,WAEAA,MAGAoC,KAAA,WACA,cAAApC,KAAA4B,KAAA,KAGAogB,SAAA,WACA,MAAAhiB,MAAAoC,QAGAC,KAAA,SAAAvC,EAAAqgB,EAAAC,GAEA,MADA,aAAAtgB,MAAA,qBACAoF,EAAA2f,UAAAhc,UAAAxG,KAAA4d,KAAAjgB,KAAAF,EAAAqgB,EAAAC,KAKAuE,WAEAje,SAAA,SAAA9H,EAAAmoB,GACA,MAAA/mB,MAAAklB,OAAAxe,SAAA9H,EAAAmoB,OAMA7hB,EAAAC,OAAAD,EAAA6f,SAAA7f,EAAA2T,IAEAsB,KAAA,SAAA5U,EAAAC,GACA,iBAAAxF,KAAAsuB,SAAAtuB,MAAApB,KACAoB,KAAAqC,MAAiB+uB,GAAA,GAAAlsB,GAAAzG,OAAA8G,GAAAwzB,GAAA,GAAA7zB,GAAAzG,OAAA+G,KACjBxF,KAAAqC,MAAiBwE,GAAA,GAAA3B,GAAAzG,OAAA8G,GAAAuB,GAAA,GAAA5B,GAAAzG,OAAA+G,MAGjB0U,GAAA,SAAA3U,EAAAC,GACA,iBAAAxF,KAAAsuB,SAAAtuB,MAAApB,KACAoB,KAAAqC,MAAiB4I,GAAA,GAAA/F,GAAAzG,OAAA8G,GAAA2F,GAAA,GAAAhG,GAAAzG,OAAA+G,KACjBxF,KAAAqC,MAAiByD,GAAA,GAAAZ,GAAAzG,OAAA8G,GAAAU,GAAA,GAAAf,GAAAzG,OAAA+G,QAKjBN,EAAAC,OAAAD,EAAAqxB,MAEA7vB,SAAA,SAAA9H,EAAAmoB,GACA,MAAA/mB,MAAAksB,IAAA,GAAAhnB,GAAA6f,SAAAnmB,IAAAozB,OAAAjL,MAKA7hB,EAAA+sB,KAAA/sB,EAAAsf,QAEAN,OAAA,OAGAK,QAAArf,EAAA8f,QAGA7f,QAEA6sB,OAAA,SAAAvP,GAcA,OAbA,gBAAAA,gBAAAvd,GAAAzG,UACAgkB,GACAmF,OAAAxD,UAAA,GACA+D,MAAA/D,UAAA,GACArjB,QAAAqjB,UAAA,KAKA,MAAA3B,EAAA1hB,SAAAf,KAAAqC,KAAA,eAAAogB,EAAA1hB,SACA,MAAA0hB,EAAA0F,OAAAnoB,KAAAqC,KAAA,aAAAogB,EAAA0F,OACA,MAAA1F,EAAAmF,QAAA5nB,KAAAqC,KAAA,YAAA6C,GAAAzG,OAAAgkB,EAAAmF,SAEA5nB,SAMAkF,EAAA8zB,QAAA9zB,EAAAsf,QAEAN,OAAA,UAGAK,QAAArf,EAAA2f,UAGA1f,QAEA/C,KAAA,WACA,cAAApC,KAAA4B,KAAA,KAGAowB,OAAA,SAAAjL,GAQA,MANA/mB,MAAAqB,QAGA,kBAAA0lB,IACAA,EAAA9G,KAAAjgB,WAEAA,MAGAgiB,SAAA,WACA,MAAAhiB,MAAAoC,QAGAC,KAAA,SAAAvC,EAAAqgB,EAAAC,GAEA,MADA,aAAAtgB,MAAA,oBACAoF,EAAA2f,UAAAhc,UAAAxG,KAAA4d,KAAAjgB,KAAAF,EAAAqgB,EAAAC,KAMAuE,WAEAoQ,QAAA,SAAAtyB,EAAAC,EAAAqkB,GACA,MAAA/mB,MAAAklB,OAAA6P,QAAAtyB,EAAAC,EAAAqkB,OAKA7hB,EAAAC,OAAAD,EAAAqxB,MAEAxB,QAAA,SAAAtyB,EAAAC,EAAAqkB,GACA,MAAA/mB,MAAAksB,IAAA,GAAAhnB,GAAA8zB,SAAAhH,OAAAjL,GAAA1kB,MACAkD,EAAA,EACAC,EAAA,EACA/C,QACAC,SACAu2B,aAAA,sBAKA/zB,EAAA2tB,MAAA3tB,EAAAsf,QAEAN,OAAA,SAAA1c,GACAxH,KAAA0H,YAAAuY,KAAAjgB,KAAAwH,IAIA+c,QAAArf,EAAA8f,UAIA9f,EAAAg0B,KAAAh0B,EAAAsf,QAEAN,OAAA,SAAA1c,EAAA+c,GAKA,GAHAvkB,KAAA0H,YAAAuY,KAAAjgB,KAAAkF,EAAAgf,OAAA1c,IAGA+c,EACA,OAAAwM,KAAAxM,GAAA1b,UACA,kBAAA0b,GAAA1b,UAAAkoB,KACA/wB,KAAA+wB,GAAAxM,EAAA1b,UAAAkoB,KAIAxM,QAAArf,EAAA8f,QAGA7f,QAEAg0B,MAAA,SAAA3c,GAEA,KAAAxc,KAAAiD,KAAAizB,iBACAl2B,KAAAiD,KAAAgL,YAAAjO,KAAAiD,KAAAkzB,UAKA,OAFAn2B,MAAAiD,KAAAsK,YAAA5F,EAAAyxB,eAAA5c,IAEAxc,SAMAkF,EAAAC,OAAAD,EAAA8nB,QAEAxlB,QAAA,SAAAA,EAAA+c,GACA,MAAAvkB,MAAAksB,IAAA,GAAAhnB,GAAAg0B,KAAA1xB,EAAA+c,OAIArf,EAAAm0B,OAAAn0B,EAAAsf,QAEAN,OAAA,SAGAK,QAAArf,EAAA2f,UAEAF,WAEA2U,OAAA,WACA,MAAAt5B,MAAAksB,IAAA,GAAAhnB,GAAAm0B,YAKAn0B,EAAAq0B,IAAAr0B,EAAAsf,QAEAN,OAAA,MAGAK,QAAArf,EAAA2tB,MAGA1tB,QAEAqC,QAAA,SAAAA,EAAAuF,GAEA,MAAA/M,MAAAqC,KAAA,QAAA0K,GAAA,QAAAvF,EAAAtC,EAAA4e,SAKAa,WAEA6U,IAAA,SAAAhyB,EAAAuF,GACA,MAAA/M,MAAAksB,IAAA,GAAAhnB,GAAAq0B,KAAA/xB,UAAAuF,OAIA7H,EAAAu0B,KAAAv0B,EAAAsf,QAEAN,OAAA,OAGAK,QAAArf,EAAA2tB,MAGAlO,WAEAziB,KAAA,SAAAO,EAAAC,GACA,MAAA1C,MAAAksB,IAAA,GAAAhnB,GAAAu0B,MAAAhU,KAAAhjB,EAAAC,OAIAwC,EAAAw0B,OAAAx0B,EAAAsf,QAEAN,OAAA,SAGAK,QAAArf,EAAA2tB,MAGAlO,WAEAgV,OAAA,SAAAlU,GACA,MAAAzlB,MAAAksB,IAAA,GAAAhnB,GAAAw0B,QAAAxvB,GAAA,GAAAhF,GAAAzG,OAAAgnB,GAAA+F,OAAA,IAAAlC,KAAA,SAKApkB,EAAAC,OAAAD,EAAAw0B,OAAAx0B,EAAA2T,IAEA3O,GAAA,SAAAA,GACA,MAAAlK,MAAAqC,KAAA,IAAA6H,IAGAC,GAAA,SAAAA,GACA,MAAAnK,MAAAkK,GAAAC,MAIAjF,EAAA00B,QAAA10B,EAAAsf,QAEAN,OAAA,UAGAK,QAAArf,EAAA2tB,MAGAlO,WAEAkV,QAAA,SAAAp3B,EAAAC,GACA,MAAA1C,MAAAksB,IAAA,GAAAhnB,GAAA00B,SAAAnU,KAAAhjB,EAAAC,GAAA4mB,KAAA,SAKApkB,EAAAC,OAAAD,EAAA00B,QAAA10B,EAAAu0B,KAAAv0B,EAAA2T,IAEA3O,GAAA,SAAAA,GACA,MAAAlK,MAAAqC,KAAA,KAAA6H,IAGAC,GAAA,SAAAA,GACA,MAAAnK,MAAAqC,KAAA,KAAA8H,MAKAjF,EAAAC,OAAAD,EAAAw0B,OAAAx0B,EAAA00B,SAEAr0B,EAAA,SAAAA,GACA,aAAAA,EAAAvF,KAAAiL,KAAAjL,KAAAkK,KAAAlK,KAAAiL,GAAA1F,EAAAvF,KAAAkK,OAGA1E,EAAA,SAAAA,GACA,aAAAA,EAAAxF,KAAAkL,KAAAlL,KAAAmK,KAAAnK,KAAAkL,GAAA1F,EAAAxF,KAAAmK,OAGAc,GAAA,SAAA1F,GACA,aAAAA,EAAAvF,KAAAqC,KAAA,MAAArC,KAAAqC,KAAA,KAAAkD,IAGA2F,GAAA,SAAA1F,GACA,aAAAA,EAAAxF,KAAAqC,KAAA,MAAArC,KAAAqC,KAAA,KAAAmD,IAGA/C,MAAA,SAAAA,GACA,aAAAA,EAAA,EAAAzC,KAAAkK,KAAAlK,KAAAkK,GAAA,GAAAhF,GAAAzG,OAAAgE,GAAA+oB,OAAA,KAGA9oB,OAAA,SAAAA,GACA,aAAAA,EAAA,EAAA1C,KAAAmK,KAAAnK,KAAAmK,GAAA,GAAAjF,GAAAzG,OAAAiE,GAAA8oB,OAAA,KAGA/F,KAAA,SAAAhjB,EAAAC,GACA,GAAA4T,GAAA2L,EAAAjiB,KAAAyC,EAAAC,EAEA,OAAA1C,MACAkK,GAAA,GAAAhF,GAAAzG,OAAA6X,EAAA7T,OAAA+oB,OAAA,IACArhB,GAAA,GAAAjF,GAAAzG,OAAA6X,EAAA5T,QAAA8oB,OAAA,OAGAtmB,EAAA40B,KAAA50B,EAAAsf,QAEAN,OAAA,OAGAK,QAAArf,EAAA2tB,MAGA1tB,QAEA2hB,MAAA,WACA,UAAA5hB,GAAAikB,aACAnpB,KAAAqC,KAAA,MAAArC,KAAAqC,KAAA,QACArC,KAAAqC,KAAA,MAAArC,KAAAqC,KAAA,UAIAwvB,KAAA,SAAAhrB,EAAAC,EAAAhB,EAAAG,GACA,aAAAY,EACA7G,KAAA8mB,SAEAjgB,MADA,KAAAC,GACcD,KAAAC,KAAAhB,KAAAG,MAEd,GAAAf,GAAAikB,WAAAtiB,GAAAuiB,SAEAppB,KAAAqC,KAAAwE,KAGAyiB,KAAA,SAAA/jB,EAAAC,GACA,MAAAxF,MAAAqC,KAAArC,KAAA8mB,QAAAwC,KAAA/jB,EAAAC,GAAA4jB,WAGA3D,KAAA,SAAAhjB,EAAAC,GACA,GAAA4T,GAAA2L,EAAAjiB,KAAAyC,EAAAC,EAEA,OAAA1C,MAAAqC,KAAArC,KAAA8mB,QAAArB,KAAAnP,EAAA7T,MAAA6T,EAAA5T,QAAA0mB,YAKAzE,WAEAoV,KAAA,SAAAlzB,EAAAC,EAAAhB,EAAAG,GAGA,MAAAf,GAAA40B,KAAAjxB,UAAAgpB,KAAApe,MACAzT,KAAAksB,IAAA,GAAAhnB,GAAA40B,MACA,MAAAjzB,KAAAC,EAAAhB,EAAAG,IAAA,cAMAf,EAAA80B,SAAA90B,EAAAsf,QAEAN,OAAA,WAGAK,QAAArf,EAAA2tB,MAGAlO,WAEAgB,SAAA,SAAArP,GAEA,MAAAtW,MAAAksB,IAAA,GAAAhnB,GAAA80B,UAAAnI,KAAAvb,GAAA,GAAApR,GAAAikB,gBAKAjkB,EAAA+0B,QAAA/0B,EAAAsf,QAEAN,OAAA,UAGAK,QAAArf,EAAA2tB,MAGAlO,WAEAuV,QAAA,SAAA5jB,GAEA,MAAAtW,MAAAksB,IAAA,GAAAhnB,GAAA+0B,SAAApI,KAAAvb,GAAA,GAAApR,GAAAikB,gBAMAjkB,EAAAC,OAAAD,EAAA80B,SAAA90B,EAAA+0B,SAEAnT,MAAA,WACA,MAAA9mB,MAAAm6B,SAAAn6B,KAAAm6B,OAAA,GAAAj1B,GAAAikB,WAAAnpB,KAAAqC,KAAA,aAGAwvB,KAAA,SAAAvb,GACA,aAAAA,EACAtW,KAAA8mB,QACA9mB,KAAAqB,QAAAgB,KAAA,yBAAAiU,KAAAtW,KAAAm6B,OAAA,GAAAj1B,GAAAikB,WAAA7S,KAGAjV,MAAA,WAEA,aADArB,MAAAm6B,OACAn6B,MAGAspB,KAAA,SAAA/jB,EAAAC,GACA,MAAAxF,MAAAqC,KAAA,SAAArC,KAAA8mB,QAAAwC,KAAA/jB,EAAAC,KAGAigB,KAAA,SAAAhjB,EAAAC,GACA,GAAA4T,GAAA2L,EAAAjiB,KAAAyC,EAAAC,EAEA,OAAA1C,MAAAqC,KAAA,SAAArC,KAAA8mB,QAAArB,KAAAnP,EAAA7T,MAAA6T,EAAA5T,YAMAwC,EAAAC,OAAAD,EAAA40B,KAAA50B,EAAA80B,SAAA90B,EAAA+0B,SAEAG,WAAAl1B,EAAAikB,WAEA5jB,EAAA,SAAAA,GACA,aAAAA,EAAAvF,KAAAkiB,OAAA3c,EAAAvF,KAAAspB,KAAA/jB,EAAAvF,KAAAkiB,OAAA1c,IAGAA,EAAA,SAAAA,GACA,aAAAA,EAAAxF,KAAAkiB,OAAA1c,EAAAxF,KAAAspB,KAAAtpB,KAAAkiB,OAAA3c,EAAAC,IAGA/C,MAAA,SAAAA,GACA,GAAA0d,GAAAngB,KAAAkiB,MAEA,cAAAzf,EAAA0d,EAAA1d,MAAAzC,KAAAylB,KAAAhjB,EAAA0d,EAAAzd,SAGAA,OAAA,SAAAA,GACA,GAAAyd,GAAAngB,KAAAkiB,MAEA,cAAAxf,EAAAyd,EAAAzd,OAAA1C,KAAAylB,KAAAtF,EAAA1d,MAAAC,MAGAwC,EAAAm1B,KAAAn1B,EAAAsf,QAEAN,OAAA,OAGAK,QAAArf,EAAA2tB,MAGA1tB,QAEAi1B,WAAAl1B,EAAAqlB,UAEAzD,MAAA,WACA,MAAA9mB,MAAAm6B,SAAAn6B,KAAAm6B,OAAA,GAAAj1B,GAAAqlB,UAAAvqB,KAAAqC,KAAA,QAGAwvB,KAAA,SAAAhuB,GACA,aAAAA,EACA7D,KAAA8mB,QACA9mB,KAAAqB,QAAAgB,KAAA,oBAAAwB,KAAA7D,KAAAm6B,OAAA,GAAAj1B,GAAAqlB,UAAA1mB,KAGAxC,MAAA,WAEA,aADArB,MAAAm6B,OACAn6B,MAGAspB,KAAA,SAAA/jB,EAAAC,GACA,MAAAxF,MAAAqC,KAAA,IAAArC,KAAA8mB,QAAAwC,KAAA/jB,EAAAC,KAGAD,EAAA,SAAAA,GACA,aAAAA,EAAAvF,KAAAkiB,OAAA3c,EAAAvF,KAAAspB,KAAA/jB,EAAAvF,KAAAkiB,OAAA1c,IAGAA,EAAA,SAAAA,GACA,aAAAA,EAAAxF,KAAAkiB,OAAA1c,EAAAxF,KAAAspB,KAAAtpB,KAAAkiB,OAAA3c,EAAAC,IAGAigB,KAAA,SAAAhjB,EAAAC,GACA,GAAA4T,GAAA2L,EAAAjiB,KAAAyC,EAAAC,EAEA,OAAA1C,MAAAqC,KAAA,IAAArC,KAAA8mB,QAAArB,KAAAnP,EAAA7T,MAAA6T,EAAA5T,UAGAD,MAAA,SAAAA,GACA,aAAAA,EAAAzC,KAAAkiB,OAAAzf,MAAAzC,KAAAylB,KAAAhjB,EAAAzC,KAAAkiB,OAAAxf,SAGAA,OAAA,SAAAA,GACA,aAAAA,EAAA1C,KAAAkiB,OAAAxf,OAAA1C,KAAAylB,KAAAzlB,KAAAkiB,OAAAzf,MAAAC,KAMAiiB,WAEA/gB,KAAA,SAAAC,GAEA,MAAA7D,MAAAksB,IAAA,GAAAhnB,GAAAm1B,MAAAxI,KAAAhuB,GAAA,GAAAqB,GAAAqlB,eAKArlB,EAAA4vB,MAAA5vB,EAAAsf,QAEAN,OAAA,QAGAK,QAAArf,EAAA2tB,MAGA1tB,QAEAm1B,KAAA,SAAAlX,GACA,IAAAA,EAAA,MAAApjB,KAEA,IAAAY,GAAAZ,KACAu6B,EAAA,GAAA1yB,GAAAitB,KAoCA,OAjCA5vB,GAAAxB,GAAA62B,EAAA,kBACAr1B,EAAAuQ,IAAA8kB,EAEA,IAAAjkB,GAAA1V,EAAAgkB,OAAA1f,EAAA8zB,QAEA,QAAA1iB,IAGA,GAAA1V,EAAA6B,SAAA,GAAA7B,EAAA8B,UACA9B,EAAA6kB,KAAA8U,EAAA93B,MAAA83B,EAAA73B,QAGA4T,GAAA,GAAAA,EAAA7T,SAAA,GAAA6T,EAAA5T,UACA4T,EAAAmP,KAAA7kB,EAAA6B,QAAA7B,EAAA8B,UAGA,kBAAA9B,GAAA45B,SACA55B,EAAA45B,QAAAva,KAAArf,GACA6B,MAAA83B,EAAA93B,MACAC,OAAA63B,EAAA73B,OACA+3B,MAAAF,EAAA93B,MAAA83B,EAAA73B,OACA0gB,WAIAle,EAAAxB,GAAA62B,EAAA,iBAAAvtB,GACA9H,EAAAuQ,IAAA8kB,GAEA,kBAAA35B,GAAA85B,QACA95B,EAAA85B,OAAAza,KAAArf,EAAAoM,KAIAhN,KAAAqC,KAAA,OAAAk4B,EAAAnb,IAAApf,KAAAof,IAAAgE,EAAAle,EAAA4e,QAGA6W,OAAA,SAAAA,GAEA,MADA36B,MAAAw6B,QAAAG,EACA36B,MAGA46B,MAAA,SAAAA,GAEA,MADA56B,MAAA06B,OAAAE,EACA56B,OAKA2kB,WAEAkQ,MAAA,SAAAlF,EAAAltB,EAAAC,GACA,MAAA1C,MAAAksB,IAAA,GAAAhnB,GAAA4vB,OAAAwF,KAAA3K,GAAAlK,KAAAhjB,GAAA,EAAAC,GAAAD,GAAA,OAKAyC,EAAA0sB,KAAA1sB,EAAAsf,QAEAN,OAAA,WACAlkB,KAAA0H,YAAAuY,KAAAjgB,KAAAkF,EAAAgf,OAAA,SAEAlkB,KAAA4rB,IAAAkG,QAAA,GAAA5sB,GAAAzG,OAAA,KACAuB,KAAA66B,UAAA,EACA76B,KAAA86B,QAAA,EAGA96B,KAAAqC,KAAA,cAAA6C,EAAAoiB,SAAAxK,MAAA,iBAIAyH,QAAArf,EAAA2tB,MAGA1tB,QAEAI,EAAA,SAAAA,GAEA,aAAAA,EACAvF,KAAAqC,KAAA,KAEArC,KAAAqC,KAAA,IAAAkD,IAGAC,EAAA,SAAAA,GACA,GAAAu1B,GAAA/6B,KAAAqC,KAAA,KACAogB,EAAA,gBAAAsY,KAAA/6B,KAAAkiB,OAAA1c,EAAA,CAGA,cAAAA,EACA,gBAAAu1B,KAAAtY,EAAAsY,EAEA/6B,KAAAqC,KAAA,oBAAAmD,GAAAqjB,UAAArjB,EAAAid,EAAAjd,IAGAyF,GAAA,SAAA1F,GACA,aAAAA,EAAAvF,KAAAkiB,OAAAjX,GAAAjL,KAAAuF,IAAAvF,KAAAkiB,OAAAzf,MAAA,IAGAyI,GAAA,SAAA1F,GACA,aAAAA,EAAAxF,KAAAkiB,OAAAhX,GAAAlL,KAAAwF,IAAAxF,KAAAkiB,OAAAxf,OAAA,IAGA8Z,KAAA,SAAAA,GAEA,YAAAA,EAAA,CAGA,OAFAA,GAAA,GACAza,EAAA/B,KAAAiD,KAAA6f,WACA7b,EAAA,EAAAoiB,EAAAtnB,EAAAuH,OAA6CrC,EAAAoiB,IAASpiB,EAGtD,GAAAA,GAAA,GAAAlF,EAAAkF,GAAA+zB,UAAA,GAAA91B,EAAA6d,MAAAhhB,EAAAkF,IAAA2kB,IAAAqP,WACAze,GAAA,MAIAA,GAAAza,EAAAkF,GAAAi0B,WAGA,OAAA1e,GAMA,GAFAxc,KAAAqB,QAAA85B,OAAA,GAEA,kBAAA3e,GAEAA,EAAAyD,KAAAjgB,eAEO,CAEPwc,IAAA7R,MAAA,KAGA,QAAA1D,GAAA,EAAA2b,EAAApG,EAAAlT,OAAyCrC,EAAA2b,EAAQ3b,IACjDjH,KAAAo7B,MAAA5e,EAAAvV,IAAAo0B,UAIA,MAAAr7B,MAAAm7B,OAAA,GAAAlG,WAGAxP,KAAA,SAAAA,GACA,MAAAzlB,MAAAqC,KAAA,YAAAojB,GAAAwP,WAGAnD,QAAA,SAAAjmB,GAEA,aAAAA,EACA7L,KAAA4rB,IAAAkG,SAGA9xB,KAAA4rB,IAAAkG,QAAA,GAAA5sB,GAAAzG,OAAAoN,GAEA7L,KAAAi1B,YAGA9H,MAAA,WACA,GAAAlqB,IAAAjD,KAAAs7B,UAAAt7B,KAAAs7B,YAAAt7B,MAAAiD,KAGAkqB,EAAAjoB,EAAA2hB,MAAA7kB,IAAAkD,EAAA2hB,MAAAO,kBAAAnkB,EAAA6f,YAAA,SAAA5a,GACA,MAAAhD,GAAA6d,MAAA7a,IAIA,WAAAhD,GAAAof,IAAA6I,IAGA8H,QAAA,SAAAA,GAMA,GAJA,iBAAAA,KACAj1B,KAAA66B,SAAA5F,GAGAj1B,KAAA66B,SAAA,CACA,GAAAj6B,GAAAZ,KACAu7B,EAAA,EACAC,EAAAx7B,KAAA4rB,IAAAkG,QAAA,GAAA5sB,GAAAzG,OAAAuB,KAAAqC,KAAA,aAEArC,MAAAmtB,QAAAD,KAAA,WACAltB,KAAA4rB,IAAAqP,WACAr6B,EAAA06B,YACAt7B,KAAAqC,KAAA,IAAAzB,EAAAyB,KAAA,MACA,MAAArC,KAAAwc,OACA+e,GAAAC,GAEAx7B,KAAAqC,KAAA,KAAAm5B,EAAAD,GACAA,EAAA,MAKAv7B,KAAAyW,KAAA,WAGA,MAAAzW,OAGAm7B,MAAA,SAAAA,GAEA,MADAn7B,MAAA86B,SAAAK,EACAn7B,MAGAmlB,QAAA,SAAA1C,GAGA,MAFAziB,MAAA4rB,IAAAnJ,EACAziB,KAAA4rB,IAAAkG,QAAA,GAAA5sB,GAAAzG,OAAAgkB,EAAAqP,SAAA,KACA9xB,OAKA2kB,WAEAnI,KAAA,SAAAA,GACA,MAAAxc,MAAAksB,IAAA,GAAAhnB,GAAA0sB,MAAApV,SAGAif,MAAA,SAAAjf,GACA,MAAAxc,MAAAksB,IAAA,GAAAhnB,GAAA0sB,MAAA6J,MAAAjf,OAMAtX,EAAAw2B,MAAAx2B,EAAAsf,QAEAN,OAAA,QAGAK,QAAArf,EAAA2tB,MAGA1tB,QAEAqX,KAAA,SAAAA,GACA,aAAAA,EAAAxc,KAAAiD,KAAAi4B,aAAAl7B,KAAA4rB,IAAAqP,SAAA,UAEA,kBAAAze,KAAAyD,KAAAjgB,gBAAAy7B,MAAAjf,GAEAxc,OAGA27B,GAAA,SAAAA,GACA,MAAA37B,MAAAqC,KAAA,KAAAs5B,IAGAH,GAAA,SAAAA,GACA,MAAAx7B,MAAAqC,KAAA,KAAAm5B,IAGAH,QAAA,WAEA,GAAAO,GAAA57B,KAAA4kB,OAAA1f,EAAA0sB,KAMA,OAHA5xB,MAAA4rB,IAAAqP,UAAA,EAGAj7B,KAAAw7B,GAAAI,EAAAhQ,IAAAkG,QAAA8J,EAAAv5B,KAAA,cAAAA,KAAA,IAAAu5B,EAAAr2B,SAMAL,EAAAC,OAAAD,EAAA0sB,KAAA1sB,EAAAw2B,OAEAD,MAAA,SAAAjf,GAQA,OANA,IAAAxc,KAAA86B,QACA96B,KAAAqB,QAGArB,KAAAiD,KAAAsK,YAAA5F,EAAAyxB,eAAA5c,IAEAxc,MAGAo7B,MAAA,SAAA5e,GACA,GAAAvZ,IAAAjD,KAAAs7B,UAAAt7B,KAAAs7B,YAAAt7B,MAAAiD,KACAm4B,EAAA,GAAAl2B,GAAAw2B,KASA,QANA,IAAA17B,KAAA86B,QACA96B,KAAAqB,QAGA4B,EAAAsK,YAAA6tB,EAAAn4B,MAEAm4B,EAAA5e,SAGAnb,MAAA,WAIA,IAHA,GAAA4B,IAAAjD,KAAAs7B,UAAAt7B,KAAAs7B,YAAAt7B,MAAAiD,KAGAA,EAAAizB,iBACAjzB,EAAAgL,YAAAhL,EAAAkzB,UAEA,OAAAn2B,OAGAsJ,OAAA,WACA,MAAAtJ,MAAAiD,KAAA44B,2BAIA32B,EAAA42B,SAAA52B,EAAAsf,QAEAN,OAAA,WAGAK,QAAArf,EAAA8nB,OAGApI,OAAA1f,EAAA0sB,KAGAjN,WACAyV,WAAAl1B,EAAAqlB,UAEA3mB,KAAA,SAAAC,GAMA,IAJA,GAAAD,GAAA,GAAAsB,GAAA42B,SACAC,EAAA/7B,KAAA4F,MAAAsf,OAAAthB,KAAAC,GAGA7D,KAAAiD,KAAAizB,iBACAtyB,EAAAX,KAAAsK,YAAAvN,KAAAiD,KAAAgqB,WAQA,OALAjtB,MAAAiD,KAAAsK,YAAA3J,EAAAX,MAGAW,EAAAvB,KAAA,WAAA05B,EAAA72B,EAAA4e,OAEA9jB,MAGA8mB,MAAA,WACA,GAAAiV,GAAA/7B,KAAA+7B,OAEA,OAAAA,KAAAjV,QAAA,MAGA+K,KAAA,SAAAhuB,GACA,GAAAk4B,GAAA/7B,KAAA+7B,QACArR,EAAA,IAMA,OAJAqR,KACArR,EAAAqR,EAAAlK,KAAAhuB,IAGA,MAAAA,EAAA6mB,EAAA1qB,MAGA+7B,MAAA,WACA,GAAAn4B,GAAA5D,KAAAs7B,UAEA,IAAA13B,EACA,MAAAA,GAAA0f,UAAA,SAGAgY,SAAA,WACA,GAAAt7B,KAAAiD,KAAAgqB,YAAA,YAAAjtB,KAAAiD,KAAAgqB,WAAAhlB,SACA,MAAA/C,GAAA6d,MAAA/iB,KAAAiD,KAAAgqB,gBAKA/nB,EAAAqQ,OAAArQ,EAAAsf,QAEAN,OAAA,WACAlkB,KAAA0H,YAAAuY,KAAAjgB,KAAAkF,EAAAgf,OAAA,QAEAlkB,KAAAsB,MAAA,uBAIAijB,QAAArf,EAAA2f,UAGAF,WAEAa,OAAA,WACA,MAAAxlB,MAAAksB,IAAA,GAAAhnB,GAAAqQ,YAIArQ,EAAAilB,EAAAjlB,EAAAsf,QAEAN,OAAA,IAGAK,QAAArf,EAAA2f,UAGA1f,QAEA+U,GAAA,SAAAkJ,GACA,MAAApjB,MAAAqC,KAAA,OAAA+gB,EAAAle,EAAA4e,QAGAuI,KAAA,SAAA3J,GACA,MAAA1iB,MAAAqC,KAAA,OAAAqgB,EAAAxd,EAAA4e,QAGApB,OAAA,SAAAA,GACA,MAAA1iB,MAAAqC,KAAA,SAAAqgB,KAKAiC,WAEAqX,KAAA,SAAA5Y,GACA,MAAApjB,MAAAksB,IAAA,GAAAhnB,GAAAilB,GAAAjQ,GAAAkJ,OAKAle,EAAAC,OAAAD,EAAA8f,SAEAiX,OAAA,SAAA7Y,GACA,GAAA4Y,GAAA,GAAA92B,GAAAilB,CAOA,OALA,kBAAA/G,GACAA,EAAAnD,KAAA+b,KAEAA,EAAA9hB,GAAAkJ,GAEApjB,KAAA4kB,SAAAsH,IAAA8P,GAAA9P,IAAAlsB,SAIAkF,EAAAg3B,OAAAh3B,EAAAsf,QAEAN,OAAA,SAGAK,QAAArf,EAAA2f,UAGA1f,QAEA1C,MAAA,SAAAA,GACA,MAAAzC,MAAAqC,KAAA,cAAAI,IAGAC,OAAA,SAAAA,GACA,MAAA1C,MAAAqC,KAAA,eAAAK,IAGA8B,IAAA,SAAAe,EAAAC,GACA,MAAAxF,MAAAqC,KAAA,OAAAkD,GAAAlD,KAAA,OAAAmD,IAGAwsB,OAAA,SAAAjL,GAQA,MANA/mB,MAAAqB,QAGA,kBAAA0lB,IACAA,EAAA9G,KAAAjgB,WAEAA,MAGAgiB,SAAA,WACA,cAAAhiB,KAAA4B,KAAA,MAKA+iB,WACAwX,OAAA,SAAA15B,EAAAC,EAAAqkB,GAEA,MAAA/mB,MAAAklB,OAAAiX,OAAA15B,EAAAC,EAAAqkB,OAMA7hB,EAAAC,OAAAD,EAAAqxB,MAEA4F,OAAA,SAAA15B,EAAAC,EAAAqkB,GAEA,MAAA/mB,MAAAksB,IAAA,GAAAhnB,GAAAg3B,QACAzW,KAAAhjB,EAAAC,GACA8B,IAAA/B,EAAA,EAAAC,EAAA,GACA+U,QAAA,IAAAhV,EAAAC,GACAL,KAAA,iBACA2vB,OAAAjL,MAKA7hB,EAAAC,OAAAD,EAAA40B,KAAA50B,EAAA80B,SAAA90B,EAAA+0B,QAAA/0B,EAAAm1B,MAEA8B,OAAA,SAAAA,EAAA15B,EAAAC,EAAAqkB,GACA,GAAA1kB,IAAA,SAWA,OARA,OAAA85B,GAAA95B,EAAAyI,KAAAqxB,GACA95B,IAAAgH,KAAA,KAGA8yB,EAAA/X,UAAA,YAAAlf,GAAAg3B,OACA9X,UAAA,GACApkB,KAAA4F,MAAAu2B,OAAA15B,EAAAC,EAAAqkB,GAEA/mB,KAAAqC,OAAA85B,KAKA,IAAAC,IACA95B,QAAA,sFACAF,MAAA,0BACAi6B,OAAA,SAAAT,EAAA97B,GACA,eAAAA,EAAA87B,IAAA,IAAA97B,KAKC,iBAAA0yB,QAAA,SAAAlR,GACD,GAAAra,GAAAq1B,IAEAA,GAAAhb,GAAA,SAAAmB,GACA,YAAAA,EACA,MAAAziB,KACA,oBAAAyiB,IAAAvd,EAAAgjB,MAAAhC,MAAAzD,OAAA,kBAAAA,GAAArgB,KACApC,KAAAqC,KAAAif,EAAAmB,OAIA,KAAAxb,EAAAm1B,EAAA9a,GAAAhY,OAAA,EAAmCrC,GAAA,EAAQA,IAC3C,MAAAwb,EAAA2Z,EAAA9a,GAAAra,KACAjH,KAAAqC,KAAA+5B,EAAAC,OAAA/a,EAAA8a,EAAA9a,GAAAra,IAAAwb,EAAA2Z,EAAA9a,GAAAra,IAEA,OAAAjH,OAGAkF,EAAAC,OAAAD,EAAA8f,QAAA9f,EAAA2T,GAAAyjB,KAIAp3B,EAAAC,OAAAD,EAAA8f,QAAA9f,EAAA2T,IAEAqb,OAAA,SAAArwB,EAAAoH,EAAAC,GACA,MAAAlL,MAAA+T,WAA2BigB,SAAAnwB,EAAAoH,KAAAC,QAG3BkpB,KAAA,SAAA7uB,EAAAC,EAAAyF,EAAAC,GACA,UAAAkZ,UAAA9a,QAAA,GAAA8a,UAAA9a,OACAtJ,KAAA+T,WAAsBqgB,KAAA7uB,EAAA0F,GAAAzF,EAAA0F,GAAAD,IACtBjL,KAAA+T,WAAsB0f,MAAAluB,EAAAsuB,MAAAruB,EAAAyF,KAAAC,QAGtB0M,MAAA,SAAArS,EAAAC,EAAAyF,EAAAC,GACA,UAAAkZ,UAAA9a,QAAA,GAAA8a,UAAA9a,OACAtJ,KAAA+T,WAAsB6D,MAAArS,EAAA0F,GAAAzF,EAAA0F,GAAAD,IACtBjL,KAAA+T,WAAsB+f,OAAAvuB,EAAAwuB,OAAAvuB,EAAAyF,KAAAC,QAGtByM,UAAA,SAAApS,EAAAC,GACA,MAAAxF,MAAA+T,WAA2BxO,IAAAC,OAG3B2uB,KAAA,SAAAr0B,EAAA2iB,GAEA,MADAA,GAAA,gBAAA3iB,KAAA2iB,EACAziB,KAAA+T,WAA2BogB,KAAAr0B,GAAA,OAAA8nB,OAAAnF,KAG3BL,OAAA,SAAAd,GACA,MAAAthB,MAAAqC,KAAA,eAAA6C,GAAAwS,OAAA,GAAA0M,UAAA9a,UAAAoX,MAAAT,KAAAmE,WAAA9C,KAGAvgB,QAAA,SAAA8K,GACA,MAAA7L,MAAAqC,KAAA,UAAAwJ,IAGA8vB,GAAA,SAAAp2B,GACA,MAAAvF,MAAAuF,EAAA,GAAAL,GAAAzG,OAAA8G,GAAA6lB,KAAAprB,eAAAkF,GAAA2T,GAAA,EAAA7Y,KAAAuF,MAAA,IAGAi2B,GAAA,SAAAh2B,GACA,MAAAxF,MAAAwF,EAAA,GAAAN,GAAAzG,OAAA+G,GAAA4lB,KAAAprB,eAAAkF,GAAA2T,GAAA,EAAA7Y,KAAAwF,MAAA,IAGA+2B,MAAA,SAAAh3B,EAAAC,GACA,MAAAxF,MAAA27B,GAAAp2B,GAAAi2B,GAAAh2B,MAIAN,EAAAC,OAAAD,EAAAu0B,KAAAv0B,EAAA00B,QAAA10B,EAAAw0B,OAAAx0B,EAAA6f,SAAA7f,EAAA2T,IAEA2jB,OAAA,SAAAj3B,EAAAC,GACA,GAAA5G,IAAAoB,KAAAsuB,SAAAtuB,MAAApB,IACA,iBAAAA,GAAA,UAAAA,EACAoB,KAAAqC,KAAA,OAAA6C,GAAAzG,OAAA8G,IACAvF,KAAAkK,GAAA3E,GAAA4E,GAAA,MAAA3E,EAAAD,EAAAC,MAIAN,EAAAC,OAAAD,EAAAm1B,MAEA/wB,OAAA,WACA,MAAAtJ,MAAAiD,KAAA6M,kBAGA2sB,QAAA,SAAAnzB,GACA,MAAAtJ,MAAAiD,KAAAy5B,iBAAApzB,MAIApE,EAAAC,OAAAD,EAAA8nB,OAAA9nB,EAAA0sB,KAAA1sB,EAAAw2B,MAAAx2B,EAAA2T,IAEA8jB,KAAA,SAAA78B,EAAA0Y,GACA,mBAAA1Y,GACA,IAAA0Y,IAAA1Y,GAAAE,KAAA28B,KAAAnkB,EAAA1Y,EAAA0Y,GAGA,kBAAA1Y,EACAE,KAAA8xB,QAAAtZ,GACA,UAAA1Y,EACAE,KAAAqC,KAAA,cAAAmW,GACA,QAAA1Y,GAAA,UAAAA,GAAA,UAAAA,GAAA,WAAAA,GAAA,WAAAA,GAAA,SAAAA,EACAE,KAAAqC,KAAA,QAAAvC,EAAA0Y,GACAxY,KAAAqC,KAAAvC,EAAA0Y,MAIAtT,EAAAof,IAAApf,EAAAsf,QAEAN,OAAA,SAAA0Y,GAEAr+B,MAAAoiB,QAAAic,GAAA58B,KAAA48B,UAAA58B,KAAAqB,SAIA8D,QAEA2T,IAAA,WACA,GAAA7R,GAAA2b,EAAAzZ,KAAAuX,MAAAT,KAAAmE,UAEA,KAAAnd,EAAA,EAAA2b,EAAAzZ,EAAAG,OAAuCrC,EAAA2b,EAAQ3b,IAC/CjH,KAAA48B,QAAA9xB,KAAA3B,EAAAlC,GAEA,OAAAjH,OAGAiB,OAAA,SAAAuG,GACA,GAAAP,GAAAjH,KAAA6Q,MAAArJ,EAMA,OAHAP,IAAA,GACAjH,KAAA48B,QAAAC,OAAA51B,EAAA,GAEAjH,MAGAktB,KAAA,SAAAnG,GACA,OAAA9f,GAAA,EAAA2b,EAAA5iB,KAAA48B,QAAAtzB,OAA+CrC,EAAA2b,EAAQ3b,IACvD8f,EAAAtT,MAAAzT,KAAA48B,QAAA31B,MAAAjH,KAAA48B,SAEA,OAAA58B,OAGAqB,MAAA,WAIA,MAFArB,MAAA48B,WAEA58B,MAGAsJ,OAAA,WACA,MAAAtJ,MAAA48B,QAAAtzB,QAGAysB,IAAA,SAAAvuB,GACA,MAAAxH,MAAA6Q,MAAArJ,IAAA,GAGAqJ,MAAA,SAAArJ,GACA,MAAAxH,MAAA48B,QAAAhyB,QAAApD,IAGAqlB,IAAA,SAAA5lB,GACA,MAAAjH,MAAA48B,QAAA31B,IAGA+uB,MAAA,WACA,MAAAh2B,MAAA6sB,IAAA,IAGA0D,KAAA,WACA,MAAAvwB,MAAA6sB,IAAA7sB,KAAA48B,QAAAtzB,OAAA,IAGAuf,QAAA,WACA,MAAA7oB,MAAA48B,SAGA1a,KAAA,WAEA,MAAAliB,KAAA48B,QAAAtzB,OACA,UAAApE,GAAAguB,IAGA,IAAAxtB,GAAA1F,KAAA48B,QAAA,GAAAl3B,KAAA1F,KAAA48B,QAAA,GAAAh3B,MAOA,OALA5F,MAAAktB,KAAA,WAEAxnB,IAAAysB,MAAAnyB,KAAA0F,KAAA1F,KAAA4F,UAGAF,IAKAif,WAEAmY,IAAA,SAAAF,GACA,UAAA13B,GAAAof,IAAAsY,OAKA13B,EAAA2T,GAAAyL,IAAApf,EAAAsf,QAEAN,OAAA,SAAA4Y,GAEA98B,KAAA88B,SAMA53B,EAAAof,IAAAC,QAAA,WACA,GAAAjD,GACAhhB,IAGA,QAAAghB,KAAApc,GAAA2tB,MAAAhqB,UACA,kBAAA3D,GAAA2tB,MAAAhqB,UAAAyY,IAAA,kBAAApc,GAAAof,IAAAzb,UAAAyY,IACAhhB,EAAAwK,KAAAwW,EAGAhhB,GAAAkyB,QAAA,SAAAzB,GACA7rB,EAAAof,IAAAzb,UAAAkoB,GAAA,WACA,OAAA9pB,GAAA,EAAA2b,EAAA5iB,KAAA48B,QAAAtzB,OAA+CrC,EAAA2b,EAAQ3b,IACvDjH,KAAA48B,QAAA31B,IAAA,kBAAAjH,MAAA48B,QAAA31B,GAAA8pB,IACA/wB,KAAA48B,QAAA31B,GAAA8pB,GAAAtd,MAAAzT,KAAA48B,QAAA31B,GAAAmd,UAEA,kBAAA2M,EAAA/wB,KAAAoxB,KAAApxB,KAAAoxB,GAAA,GAAAlsB,GAAA2T,GAAAyL,IAAAtkB,eAKAM,IAGA,QAAAghB,KAAApc,GAAA2T,GAAAhQ,UACA,kBAAA3D,GAAA2T,GAAAhQ,UAAAyY,IAAA,kBAAApc,GAAA2T,GAAAyL,IAAAzb,UAAAyY,IACAhhB,EAAAwK,KAAAwW,EAGAhhB,GAAAkyB,QAAA,SAAAzB,GACA7rB,EAAA2T,GAAAyL,IAAAzb,UAAAkoB,GAAA,WACA,OAAA9pB,GAAA,EAAA2b,EAAA5iB,KAAA88B,IAAAF,QAAAtzB,OAAmDrC,EAAA2b,EAAQ3b,IAC3DjH,KAAA88B,IAAAF,QAAA31B,GAAAmqB,GAAAL,GAAAtd,MAAAzT,KAAA88B,IAAAF,QAAA31B,GAAAmqB,GAAAhN,UAEA,OAAApkB,UAQAkF,EAAAC,OAAAD,EAAA8f,SAEArlB,KAAA,SAAAG,EAAA0Y,EAAAhN,GACA,mBAAA1L,GACA,IAAA0Y,IAAA1Y,GACAE,KAAAL,KAAA6Y,EAAA1Y,EAAA0Y,QAEK,IAAA4L,UAAA9a,OAAA,EACL,IACA,MAAA8b,MAAAC,MAAArlB,KAAAqC,KAAA,QAAAvC,IACO,MAAAkN,GACP,MAAAhN,MAAAqC,KAAA,QAAAvC,OAIAE,MAAAqC,KACA,QAAAvC,EACA,OAAA0Y,EACA,MACA,IAAAhN,GAAA,gBAAAgN,IAAA,gBAAAA,GACAA,EACA4M,KAAAiI,UAAA7U,GAIA,OAAAxY,SAGAkF,EAAAC,OAAAD,EAAA8f,SAEA+X,SAAA,SAAAC,EAAAxkB,GAEA,mBAAA4L,WAAA,GACA,OAAA5L,KAAAwkB,GACAh9B,KAAA+8B,SAAAvkB,EAAAwkB,EAAAxkB,QAGA,OAAA4L,UAAA9a,OACA,MAAAtJ,MAAAi9B,SAAAD,EAIAh9B,MAAAi9B,SAAAD,GAAAxkB,EAEA,MAAAxY,OAIAk9B,OAAA,WACA,MAAA9Y,UAAA9a,OACAtJ,KAAAm9B,eAEA,QAAAl2B,GAAAmd,UAAA9a,OAAA,EAAwCrC,GAAA,EAAQA,UAChDjH,MAAAi9B,SAAA7Y,UAAAnd,GAEA,OAAAjH,OAIAi9B,OAAA,WACA,MAAAj9B,MAAAm9B,UAAAn9B,KAAAm9B,eAKAj4B,EAAA2nB,IAAA,SAAAjrB,GACA,GAAAqB,GAAA0E,EAAAC,eAAAub,EAAAvhB,MACA,OAAAsD,GAAA6d,MAAA9f,IAIAiC,EAAAk4B,OAAA,SAAAC,EAAAzY,GACA,UAAA1f,GAAAof,IACApf,EAAA2hB,MAAA7kB,KAAA4iB,GAAAjd,GAAAyB,iBAAAi0B,GAAA,SAAAp6B,GACA,MAAAiC,GAAA6d,MAAA9f,OAKAiC,EAAAC,OAAAD,EAAA8nB,QAEAoQ,OAAA,SAAAC,GACA,MAAAn4B,GAAAk4B,OAAAC,EAAAr9B,KAAAiD,QAqLA,IAAAswB,GAAA,SAAA5oB,MAAA,GAGA,sBAAA9C,GAAA2vB,YAAA,CAEA,GAAA8F,GAAA,SAAA5mB,EAAArO,GACAA,MAA0Bk1B,SAAA,EAAA9F,YAAA,EAAA/G,WAAAtiB,GAC1B,IAAApB,GAAArF,EAAA61B,YAAA,cAEA,OADAxwB,GAAAywB,gBAAA/mB,EAAArO,EAAAk1B,QAAAl1B,EAAAovB,WAAApvB,EAAAqoB,QACA1jB,EAGAswB,GAAAz0B,UAAAhB,EAAAyvB,MAAAzuB,UAEA3D,EAAAsyB,YAAA8F,MAEAp4B,GAAAsyB,YAAA3vB,EAAA2vB,WA+BA,OA3BA,UAAAtU,GAIA,OAHAwa,GAAA,EACAC,GAAA,gBAEAp4B,EAAA,EAAgBA,EAAAo4B,EAAAr0B,SAAAzB,EAAA+K,wBAAqDrN,EACrE2d,EAAAtQ,sBAAAsQ,EAAAya,EAAAp4B,GAAA,yBACA2d,EAAAhQ,qBAAAgQ,EAAAya,EAAAp4B,GAAA,yBACA2d,EAAAya,EAAAp4B,GAAA,8BAGA2d,GAAAtQ,sBAAAsQ,EAAAtQ,uBACA,SAAAtK,GACA,GAAAs1B,IAAA,GAAA5P,OAAA6P,UACAC,EAAAzzB,KAAAE,IAAA,MAAAqzB,EAAAF,IAEA97B,EAAAshB,EAAAjQ,WAAA,WACA3K,EAAAs1B,EAAAE,IACOA,EAGP,OADAJ,GAAAE,EAAAE,EACAl8B,GAGAshB,EAAAhQ,qBAAAgQ,EAAAhQ,sBAAAgQ,EAAA3P,cAEC1L,GAED3C,KfglGM64B,KACA,SAAU5gC,EAAQ8H,EAAS5H,GgBhjRjC,GAAAiK;;;;;CAKA,SAAAO,EAAAF,EAAAq2B,EAAA5vB,GACA,YAkBA,SAAA6vB,GAAAj1B,EAAAk1B,EAAAC,GACA,MAAAlrB,YAAAmrB,EAAAp1B,EAAAm1B,GAAAD,GAYA,QAAAG,GAAAC,EAAAt1B,EAAAm1B,GACA,QAAA5/B,MAAAoiB,QAAA2d,KACApR,EAAAoR,EAAAH,EAAAn1B,GAAAm1B,IACA,GAWA,QAAAjR,GAAA9pB,EAAAm7B,EAAAJ,GACA,GAAAl3B,EAEA,IAAA7D,EAIA,GAAAA,EAAAovB,QACApvB,EAAAovB,QAAA+L,EAAAJ,OACK,IAAA/6B,EAAAkG,SAAA8E,EAEL,IADAnH,EAAA,EACAA,EAAA7D,EAAAkG,QACAi1B,EAAAte,KAAAke,EAAA/6B,EAAA6D,KAAA7D,GACA6D,QAGA,KAAAA,IAAA7D,GACAA,EAAAuL,eAAA1H,IAAAs3B,EAAAte,KAAAke,EAAA/6B,EAAA6D,KAAA7D,GAYA,QAAAo7B,GAAAzN,EAAAplB,EAAA8yB,GACA,GAAAC,GAAA,sBAAA/yB,EAAA,KAAA8yB,EAAA,QACA,mBACA,GAAAzxB,GAAA,GAAAvF,OAAA,mBACAk3B,EAAA3xB,KAAA2xB,MAAA3xB,EAAA2xB,MAAAte,QAAA,sBACAA,QAAA,kBACAA,QAAA,+CAA+D,sBAE/Dja,EAAAyB,EAAA1B,UAAA0B,EAAA1B,QAAA6J,MAAAnI,EAAA1B,QAAAC,IAIA,OAHAA,IACAA,EAAA6Z,KAAApY,EAAA1B,QAAAu4B,EAAAC,GAEA5N,EAAAtd,MAAAzT,KAAAokB,YAwEA,QAAAG,GAAAqa,EAAAnyB,EAAAoyB,GACA,GACAC,GADAC,EAAAtyB,EAAA5D,SAGAi2B,GAAAF,EAAA/1B,UAAAwF,OAAA6V,OAAA6a,GACAD,EAAAp3B,YAAAk3B,EACAE,EAAAE,OAAAD,EAEAF,GACAI,GAAAH,EAAAD,GAUA,QAAAT,GAAAp1B,EAAAm1B,GACA,kBACA,MAAAn1B,GAAAyK,MAAA0qB,EAAA/Z,YAWA,QAAA8a,GAAAp8B,EAAAkuB,GACA,aAAAluB,IAAAq8B,GACAr8B,EAAA2Q,MAAAud,IAAA,IAAA5iB,IAAA4iB,GAEAluB,EASA,QAAAs8B,GAAAC,EAAAC,GACA,MAAAD,KAAAjxB,EAAAkxB,EAAAD,EASA,QAAAE,GAAA7c,EAAA8c,EAAAC,GACAvS,EAAAwS,EAAAF,GAAA,SAAA5gC,GACA8jB,EAAAlf,iBAAA5E,EAAA6gC,GAAA,KAUA,QAAAE,GAAAjd,EAAA8c,EAAAC,GACAvS,EAAAwS,EAAAF,GAAA,SAAA5gC,GACA8jB,EAAAtR,oBAAAxS,EAAA6gC,GAAA,KAWA,QAAAG,GAAA38B,EAAA2hB,GACA,KAAA3hB,GAAA,CACA,GAAAA,GAAA2hB,EACA,QAEA3hB,KAAA2G,WAEA,SASA,QAAAi2B,GAAAl9B,EAAAm9B,GACA,MAAAn9B,GAAAiI,QAAAk1B,IAAA,EAQA,QAAAJ,GAAA/8B,GACA,MAAAA,GAAA+H,OAAAC,MAAA,QAUA,QAAAo1B,GAAA3gB,EAAA0gB,EAAAE,GACA,GAAA5gB,EAAAxU,UAAAo1B,EACA,MAAA5gB,GAAAxU,QAAAk1B,EAGA,KADA,GAAA74B,GAAA,EACAA,EAAAmY,EAAA9V,QAAA,CACA,GAAA02B,GAAA5gB,EAAAnY,GAAA+4B,IAAAF,IAAAE,GAAA5gB,EAAAnY,KAAA64B,EACA,MAAA74B,EAEAA,KAEA,SASA,QAAAg5B,GAAA78B,GACA,MAAA7E,OAAAsK,UAAA6X,MAAAT,KAAA7c,EAAA,GAUA,QAAA88B,GAAA9gB,EAAAH,EAAAkhB,GAKA,IAJA,GAAAC,MACAC,KACAp5B,EAAA,EAEAA,EAAAmY,EAAA9V,QAAA,CACA,GAAAxG,GAAAmc,EAAAG,EAAAnY,GAAAgY,GAAAG,EAAAnY,EACA84B,GAAAM,EAAAv9B,GAAA,GACAs9B,EAAAt1B,KAAAsU,EAAAnY,IAEAo5B,EAAAp5B,GAAAnE,EACAmE,IAaA,MAVAk5B,KAIAC,EAHAnhB,EAGAmhB,EAAAD,KAAA,SAAArgC,EAAAqgB,GACA,MAAArgB,GAAAmf,GAAAkB,EAAAlB,KAHAmhB,EAAAD,QAQAC,EASA,QAAAE,GAAAl9B,EAAAm9B,GAKA,IAJA,GAAAlE,GAAAmE,EACAC,EAAAF,EAAA,GAAA/e,cAAA+e,EAAA7f,MAAA,GAEAzZ,EAAA,EACAA,EAAAy5B,GAAAp3B,QAAA,CAIA,GAHA+yB,EAAAqE,GAAAz5B,IACAu5B,EAAA,EAAAnE,EAAAoE,EAAAF,IAEAn9B,GACA,MAAAo9B,EAEAv5B,KAEA,MAAAmH,GAQA,QAAAuyB,KACA,MAAAC,MAQA,QAAAC,GAAAr5B,GACA,GAAA5B,GAAA4B,EAAAs5B,eAAAt5B,CACA,OAAA5B,GAAAm7B,aAAAn7B,EAAAo7B,cAAAn5B,EAyCA,QAAAo5B,GAAAC,EAAA54B,GACA,GAAA1H,GAAAZ,IACAA,MAAAkhC,UACAlhC,KAAAsI,WACAtI,KAAAwH,QAAA05B,EAAA15B,QACAxH,KAAA0iB,OAAAwe,EAAA74B,QAAA84B,YAIAnhC,KAAAohC,WAAA,SAAAlsB,GACAgqB,EAAAgC,EAAA74B,QAAAg5B,QAAAH,KACAtgC,EAAA6+B,QAAAvqB,IAIAlV,KAAA4I,OAoCA,QAAA04B,GAAAJ,GACA,GACAK,GAAAL,EAAA74B,QAAAk5B,UAaA,YAXAA,IAEKC,GACLC,EACKC,GACLC,EACKC,GAGLC,EAFAC,IAIAZ,EAAAa,GASA,QAAAA,GAAAb,EAAAc,EAAAC,GACA,GAAAC,GAAAD,EAAAE,SAAA74B,OACA84B,EAAAH,EAAAI,gBAAA/4B,OACAg5B,EAAAN,EAAAO,IAAAL,EAAAE,GAAA,EACAI,EAAAR,GAAAS,GAAAC,KAAAR,EAAAE,GAAA,CAEAH,GAAAK,YACAL,EAAAO,YAEAF,IACApB,EAAAyB,YAKAV,EAAAD,YAGAY,EAAA1B,EAAAe,GAGAf,EAAA2B,KAAA,eAAAZ,GAEAf,EAAA4B,UAAAb,GACAf,EAAAyB,QAAAI,UAAAd,EAQA,QAAAW,GAAA1B,EAAAe,GACA,GAAAU,GAAAzB,EAAAyB,QACAR,EAAAF,EAAAE,SACAa,EAAAb,EAAA74B,MAGAq5B,GAAAM,aACAN,EAAAM,WAAAC,EAAAjB,IAIAe,EAAA,IAAAL,EAAAQ,cACAR,EAAAQ,cAAAD,EAAAjB,GACK,IAAAe,IACLL,EAAAQ,eAAA,EAGA,IAAAF,GAAAN,EAAAM,WACAE,EAAAR,EAAAQ,cACAC,EAAAD,IAAAtX,OAAAoX,EAAApX,OAEAA,EAAAoW,EAAApW,OAAAwX,EAAAlB,EACAF,GAAAqB,UAAAC,KACAtB,EAAAuB,UAAAvB,EAAAqB,UAAAL,EAAAK,UAEArB,EAAAwB,MAAAC,EAAAN,EAAAvX,GACAoW,EAAA0B,SAAAC,EAAAR,EAAAvX,GAEAgY,EAAAlB,EAAAV,GACAA,EAAA6B,gBAAAC,EAAA9B,EAAA+B,OAAA/B,EAAA7rB,OAEA,IAAA6tB,GAAAC,EAAAjC,EAAAuB,UAAAvB,EAAA+B,OAAA/B,EAAA7rB,OACA6rB,GAAAkC,iBAAAF,EAAA1+B,EACA08B,EAAAmC,iBAAAH,EAAAz+B,EACAy8B,EAAAgC,gBAAAr3B,GAAAq3B,EAAA1+B,GAAAqH,GAAAq3B,EAAAz+B,GAAAy+B,EAAA1+B,EAAA0+B,EAAAz+B,EAEAy8B,EAAArqB,MAAAurB,EAAAkB,EAAAlB,EAAAhB,YAAA,EACAF,EAAAjO,SAAAmP,EAAAmB,EAAAnB,EAAAhB,YAAA,EAEAF,EAAAsC,YAAA5B,EAAAI,UAAAd,EAAAE,SAAA74B,OACAq5B,EAAAI,UAAAwB,YAAAtC,EAAAE,SAAA74B,OAAAq5B,EAAAI,UAAAwB,YADAtC,EAAAE,SAAA74B,OAGAk7B,EAAA7B,EAAAV,EAGA,IAAAvf,GAAAwe,EAAA15B,OACAo4B,GAAAqC,EAAAwC,SAAA/hB,YACAA,EAAAuf,EAAAwC,SAAA/hB,QAEAuf,EAAAvf,SAGA,QAAAmhB,GAAAlB,EAAAV,GACA,GAAApW,GAAAoW,EAAApW,OACAjE,EAAA+a,EAAA+B,gBACAC,EAAAhC,EAAAgC,cACA5B,EAAAJ,EAAAI,aAEAd,GAAAD,YAAAO,IAAAQ,EAAAf,YAAAS,KACAkC,EAAAhC,EAAAgC,WACAp/B,EAAAw9B,EAAAiB,QAAA,EACAx+B,EAAAu9B,EAAA3sB,QAAA,GAGAwR,EAAA+a,EAAA+B,aACAn/B,EAAAsmB,EAAAtmB,EACAC,EAAAqmB,EAAArmB,IAIAy8B,EAAA+B,OAAAW,EAAAp/B,GAAAsmB,EAAAtmB,EAAAqiB,EAAAriB,GACA08B,EAAA7rB,OAAAuuB,EAAAn/B,GAAAqmB,EAAArmB,EAAAoiB,EAAApiB,GAQA,QAAAg/B,GAAA7B,EAAAV,GACA,GAEA2C,GAAAC,EAAAC,EAAAC,EAFAxU,EAAAoS,EAAAqC,cAAA/C,EACAuB,EAAAvB,EAAAqB,UAAA/S,EAAA+S,SAGA,IAAArB,EAAAD,WAAAU,KAAAc,EAAAyB,IAAA1U,EAAAqU,WAAAx2B,GAAA,CACA,GAAA41B,GAAA/B,EAAA+B,OAAAzT,EAAAyT,OACA5tB,EAAA6rB,EAAA7rB,OAAAma,EAAAna,OAEAoC,EAAA0rB,EAAAV,EAAAQ,EAAA5tB,EACAyuB,GAAArsB,EAAAjT,EACAu/B,EAAAtsB,EAAAhT,EACAo/B,EAAAh4B,GAAA4L,EAAAjT,GAAAqH,GAAA4L,EAAAhT,GAAAgT,EAAAjT,EAAAiT,EAAAhT,EACAu/B,EAAAhB,EAAAC,EAAA5tB,GAEAusB,EAAAqC,aAAA/C,MAGA2C,GAAArU,EAAAqU,SACAC,EAAAtU,EAAAsU,UACAC,EAAAvU,EAAAuU,UACAC,EAAAxU,EAAAwU,SAGA9C,GAAA2C,WACA3C,EAAA4C,YACA5C,EAAA6C,YACA7C,EAAA8C,YAQA,QAAA7B,GAAAjB,GAKA,IAFA,GAAAE,MACAl7B,EAAA,EACAA,EAAAg7B,EAAAE,SAAA74B,QACA64B,EAAAl7B,IACAmO,QAAA5D,GAAAywB,EAAAE,SAAAl7B,GAAAmO,SACAC,QAAA7D,GAAAywB,EAAAE,SAAAl7B,GAAAoO,UAEApO,GAGA,QACAq8B,UAAAC,KACApB,WACAtW,OAAAwX,EAAAlB,GACA6B,OAAA/B,EAAA+B,OACA5tB,OAAA6rB,EAAA7rB,QASA,QAAAitB,GAAAlB,GACA,GAAAa,GAAAb,EAAA74B,MAGA,QAAA05B,EACA,OACAz9B,EAAAiM,GAAA2wB,EAAA,GAAA/sB,SACA5P,EAAAgM,GAAA2wB,EAAA,GAAA9sB,SAKA,KADA,GAAA9P,GAAA,EAAAC,EAAA,EAAAyB,EAAA,EACAA,EAAA+7B,GACAz9B,GAAA48B,EAAAl7B,GAAAmO,QACA5P,GAAA28B,EAAAl7B,GAAAoO,QACApO,GAGA,QACA1B,EAAAiM,GAAAjM,EAAAy9B,GACAx9B,EAAAgM,GAAAhM,EAAAw9B,IAWA,QAAAkB,GAAAV,EAAAj+B,EAAAC,GACA,OACAD,IAAAi+B,GAAA,EACAh+B,IAAAg+B,GAAA,GAUA,QAAAO,GAAAx+B,EAAAC,GACA,MAAAD,KAAAC,EACA0/B,GAGAt4B,GAAArH,IAAAqH,GAAApH,GACAD,EAAA,EAAA4/B,GAAAC,GAEA5/B,EAAA,EAAA6/B,GAAAC,GAUA,QAAA1B,GAAA1rB,EAAAC,EAAAxZ,GACAA,IACAA,EAAA4mC,GAEA,IAAAhgC,GAAA4S,EAAAxZ,EAAA,IAAAuZ,EAAAvZ,EAAA,IACA6G,EAAA2S,EAAAxZ,EAAA,IAAAuZ,EAAAvZ,EAAA,GAEA,OAAA0L,MAAA4M,KAAA1R,IAAAC,KAUA,QAAAk+B,GAAAxrB,EAAAC,EAAAxZ,GACAA,IACAA,EAAA4mC,GAEA,IAAAhgC,GAAA4S,EAAAxZ,EAAA,IAAAuZ,EAAAvZ,EAAA,IACA6G,EAAA2S,EAAAxZ,EAAA,IAAAuZ,EAAAvZ,EAAA,GACA,YAAA0L,KAAAqpB,MAAAluB,EAAAD,GAAA8E,KAAA+B,GASA,QAAAk4B,GAAA7jC,EAAA+kC,GACA,MAAA9B,GAAA8B,EAAA,GAAAA,EAAA,GAAAC,IAAA/B,EAAAjjC,EAAA,GAAAA,EAAA,GAAAglC,IAUA,QAAApB,GAAA5jC,EAAA+kC,GACA,MAAA5B,GAAA4B,EAAA,GAAAA,EAAA,GAAAC,IAAA7B,EAAAnjC,EAAA,GAAAA,EAAA,GAAAglC,IAiBA,QAAA3D,KACA9hC,KAAA0lC,KAAAC,GACA3lC,KAAA4lC,MAAAC,GAEA7lC,KAAA8lC,SAAA,EAEA7E,EAAAxtB,MAAAzT,KAAAokB,WAoEA,QAAAqd,KACAzhC,KAAA0lC,KAAAK,GACA/lC,KAAA4lC,MAAAI,GAEA/E,EAAAxtB,MAAAzT,KAAAokB,WAEApkB,KAAAimC,MAAAjmC,KAAAkhC,QAAAyB,QAAAuD,iBAoEA,QAAAC,KACAnmC,KAAAomC,SAAAC,GACArmC,KAAA4lC,MAAAU,GACAtmC,KAAAumC,SAAA,EAEAtF,EAAAxtB,MAAAzT,KAAAokB,WAsCA,QAAAoiB,GAAAtxB,EAAAtW,GACA,GAAA6nC,GAAAxG,EAAA/qB,EAAAC,SACAuxB,EAAAzG,EAAA/qB,EAAAyxB,eAMA,OAJA/nC,IAAA6jC,GAAAC,MACA+D,EAAAvG,EAAAuG,EAAA1tB,OAAA2tB,GAAA,mBAGAD,EAAAC,GAiBA,QAAA/E,KACA3hC,KAAAomC,SAAAQ,GACA5mC,KAAA6mC,aAEA5F,EAAAxtB,MAAAzT,KAAAokB,WA0BA,QAAA0iB,GAAA5xB,EAAAtW,GACA,GAAAmoC,GAAA9G,EAAA/qB,EAAAC,SACA0xB,EAAA7mC,KAAA6mC,SAGA,IAAAjoC,GAAA2jC,GAAAyE,KAAA,IAAAD,EAAAz9B,OAEA,MADAu9B,GAAAE,EAAA,GAAAE,aAAA,GACAF,IAGA,IAAA9/B,GACAigC,EACAP,EAAA1G,EAAA/qB,EAAAyxB,gBACAQ,KACAzkB,EAAA1iB,KAAA0iB,MAQA,IALAwkB,EAAAH,EAAA9f,OAAA,SAAAmgB,GACA,MAAAxH,GAAAwH,EAAA1kB,YAIA9jB,IAAA2jC,GAEA,IADAt7B,EAAA,EACAA,EAAAigC,EAAA59B,QACAu9B,EAAAK,EAAAjgC,GAAAggC,aAAA,EACAhgC,GAMA,KADAA,EAAA,EACAA,EAAA0/B,EAAAr9B,QACAu9B,EAAAF,EAAA1/B,GAAAggC,aACAE,EAAAr8B,KAAA67B,EAAA1/B,IAIArI,GAAA6jC,GAAAC,WACAmE,GAAAF,EAAA1/B,GAAAggC,YAEAhgC,GAGA,OAAAkgC,GAAA79B,QAMA42B,EAAAgH,EAAAnuB,OAAAouB,GAAA,iBACAA,OAPA,GAwBA,QAAAtF,KACAZ,EAAAxtB,MAAAzT,KAAAokB,UAEA,IAAAqb,GAAArB,EAAAp+B,KAAAy/B,QAAAz/B,KACAA,MAAAonC,MAAA,GAAAzF,GAAA3hC,KAAAkhC,QAAAzB,GACAz/B,KAAAqnC,MAAA,GAAAvF,GAAA9hC,KAAAkhC,QAAAzB,GAEAz/B,KAAAsnC,aAAA,KACAtnC,KAAA2V,eAqCA,QAAA4xB,GAAAvF,EAAAwF,GACAxF,EAAAO,IACAviC,KAAAsnC,aAAAE,EAAAnF,gBAAA,GAAA4E,WACAQ,EAAAxnB,KAAAjgB,KAAAwnC,IACKxF,GAAAS,GAAAC,KACL+E,EAAAxnB,KAAAjgB,KAAAwnC,GAIA,QAAAC,GAAAD,GACA,GAAAJ,GAAAI,EAAAnF,gBAAA,EAEA,IAAA+E,EAAAH,aAAAjnC,KAAAsnC,aAAA,CACA,GAAAI,IAAyBniC,EAAA6hC,EAAAhyB,QAAA5P,EAAA4hC,EAAA/xB,QACzBrV,MAAA2V,YAAA7K,KAAA48B,EACA,IAAAC,GAAA3nC,KAAA2V,YACAiyB,EAAA,WACA,GAAA3gC,GAAA0gC,EAAA/8B,QAAA88B,EACAzgC,IAAA,GACA0gC,EAAA9K,OAAA51B,EAAA,GAGAgM,YAAA20B,EAAAC,KAIA,QAAAC,GAAAN,GAEA,OADAjiC,GAAAiiC,EAAA/C,SAAArvB,QAAA5P,EAAAgiC,EAAA/C,SAAApvB,QACApO,EAAA,EAAmBA,EAAAjH,KAAA2V,YAAArM,OAA6BrC,IAAA,CAChD,GAAA20B,GAAA57B,KAAA2V,YAAA1O,GACA00B,EAAAtxB,KAAAuC,IAAArH,EAAAq2B,EAAAr2B,GAAAi2B,EAAAnxB,KAAAuC,IAAApH,EAAAo2B,EAAAp2B,EACA,IAAAm2B,GAAAoM,IAAAvM,GAAAuM,GACA,SAGA,SAsBA,QAAAC,GAAA9G,EAAAr1B,GACA7L,KAAAkhC,UACAlhC,KAAA88B,IAAAjxB,GAmGA,QAAAo8B,GAAAC,GAEA,GAAArI,EAAAqI,EAAAC,IACA,MAAAA,GAGA,IAAAC,GAAAvI,EAAAqI,EAAAG,IACAC,EAAAzI,EAAAqI,EAAAK,GAMA,OAAAH,IAAAE,EACAH,GAIAC,GAAAE,EACAF,EAAAC,GAAAE,GAIA1I,EAAAqI,EAAAM,IACAA,GAGAC,GA2DA,QAAAC,GAAArgC,GACArI,KAAAqI,QAAA42B,MAA4Bj/B,KAAAsnB,SAAAjf,OAE5BrI,KAAA4B,GAAA++B,IAEA3gC,KAAAkhC,QAAA,KAGAlhC,KAAAqI,QAAAg5B,OAAAjC,EAAAp/B,KAAAqI,QAAAg5B,QAAA,GAEArhC,KAAA8e,MAAA6pB,GAEA3oC,KAAA4oC,gBACA5oC,KAAA6oC,eAqOA,QAAAC,IAAAhqB,GACA,MAAAA,GAAAiqB,GACA,SACKjqB,EAAAkqB,GACL,MACKlqB,EAAAmqB,GACL,OACKnqB,EAAAoqB,GACL,QAEA,GAQA,QAAAC,IAAApE,GACA,MAAAA,IAAAO,GACA,OACKP,GAAAM,GACL,KACKN,GAAAI,GACL,OACKJ,GAAAK,GACL,QAEA,GASA,QAAAgE,IAAAC,EAAAC,GACA,GAAApI,GAAAoI,EAAApI,OACA,OAAAA,GACAA,EAAArU,IAAAwc,GAEAA,EAQA,QAAAE,MACAb,EAAAj1B,MAAAzT,KAAAokB,WA6DA,QAAAolB,MACAD,GAAA91B,MAAAzT,KAAAokB,WAEApkB,KAAAypC,GAAA,KACAzpC,KAAA0pC,GAAA,KA4EA,QAAAC,MACAJ,GAAA91B,MAAAzT,KAAAokB,WAsCA,QAAAwlB,MACAlB,EAAAj1B,MAAAzT,KAAAokB,WAEApkB,KAAA6pC,OAAA,KACA7pC,KAAA8pC,OAAA,KAmEA,QAAAC,MACAR,GAAA91B,MAAAzT,KAAAokB,WA8BA,QAAA4lB,MACAT,GAAA91B,MAAAzT,KAAAokB,WA2DA,QAAA6lB,MACAvB,EAAAj1B,MAAAzT,KAAAokB,WAIApkB,KAAAkqC,OAAA,EACAlqC,KAAAmqC,SAAA,EAEAnqC,KAAA6pC,OAAA,KACA7pC,KAAA8pC,OAAA,KACA9pC,KAAAoqC,MAAA,EAqGA,QAAAC,IAAA7iC,EAAAa,GAGA,MAFAA,SACAA,EAAAiiC,YAAAlL,EAAA/2B,EAAAiiC,YAAAD,GAAA/iB,SAAAijB,QACA,GAAAC,IAAAhjC,EAAAa,GAiIA,QAAAmiC,IAAAhjC,EAAAa,GACArI,KAAAqI,QAAA42B,MAA4BoL,GAAA/iB,SAAAjf,OAE5BrI,KAAAqI,QAAA84B,YAAAnhC,KAAAqI,QAAA84B,aAAA35B,EAEAxH,KAAAyqC,YACAzqC,KAAA2iC,WACA3iC,KAAAsqC,eACAtqC,KAAA0qC,eAEA1qC,KAAAwH,UACAxH,KAAAiiC,MAAAX,EAAAthC,MACAA,KAAA2qC,YAAA,GAAA3C,GAAAhoC,UAAAqI,QAAAsiC,aAEAC,GAAA5qC,MAAA,GAEAktB,EAAAltB,KAAAqI,QAAAiiC,YAAA,SAAAO,GACA,GAAAvB,GAAAtpC,KAAA8Y,IAAA,GAAA+xB,GAAA,GAAAA,EAAA,IACAA,GAAA,IAAAvB,EAAAwB,cAAAD,EAAA,IACAA,EAAA,IAAAvB,EAAAyB,eAAAF,EAAA,KACK7qC,MA4PL,QAAA4qC,IAAA1J,EAAApoB,GACA,GAAAtR,GAAA05B,EAAA15B,OACA,IAAAA,EAAAlG,MAAA,CAGA,GAAAk/B,EACAtT,GAAAgU,EAAA74B,QAAA2iC,SAAA,SAAAn/B,EAAAF,GACA60B,EAAAF,EAAA94B,EAAAlG,MAAAqK,GACAmN,GACAooB,EAAAwJ,YAAAlK,GAAAh5B,EAAAlG,MAAAk/B,GACAh5B,EAAAlG,MAAAk/B,GAAA30B,GAEArE,EAAAlG,MAAAk/B,GAAAU,EAAAwJ,YAAAlK,IAAA,KAGA1nB,IACAooB,EAAAwJ,iBASA,QAAAO,IAAAv0B,EAAA/W,GACA,GAAAurC,GAAAvjC,EAAA61B,YAAA,QACA0N,GAAAC,UAAAz0B,GAAA,MACAw0B,EAAAE,QAAAzrC,EACAA,EAAA+iB,OAAA6U,cAAA2T,GAngFA,GA+FAjM,IA/FAyB,IAAA,iCACA2K,GAAA1jC,EAAAuF,cAAA,OAEAiyB,GAAA,WAEA3tB,GAAAnH,KAAAmH,MACA5E,GAAAvC,KAAAuC,IACA22B,GAAAvV,KAAAuV,GA0FAtE,IADA,kBAAA5wB,QAAA4wB,OACA,SAAAvc,GACA,GAAAA,IAAAtU,GAAA,OAAAsU,EACA,SAAA4oB,WAAA,6CAIA,QADAx/B,GAAAuC,OAAAqU,GACA7R,EAAA,EAA2BA,EAAAuT,UAAA9a,OAA0BuH,IAAA,CACrD,GAAA8e,GAAAvL,UAAAvT,EACA,IAAA8e,IAAAvhB,GAAA,OAAAuhB,EACA,OAAA4b,KAAA5b,GACAA,EAAAhhB,eAAA48B,KACAz/B,EAAAy/B,GAAA5b,EAAA4b,IAKA,MAAAz/B,IAGAuC,OAAA4wB,MAWA,IAAA95B,IAAAq5B,EAAA,SAAAgN,EAAApsB,EAAA+S,GAGA,IAFA,GAAAx0B,GAAA0Q,OAAA1Q,KAAAyhB,GACAnY,EAAA,EACAA,EAAAtJ,EAAA2L,UACA6oB,MAAAqZ,EAAA7tC,EAAAsJ,MAAAmH,KACAo9B,EAAA7tC,EAAAsJ,IAAAmY,EAAAzhB,EAAAsJ,KAEAA,GAEA,OAAAukC,IACC,0BASDrZ,GAAAqM,EAAA,SAAAgN,EAAApsB,GACA,MAAAja,IAAAqmC,EAAApsB,GAAA,IACC,yBAiNDwhB,GAAA,EAeA6K,GAAA,wCAEA7J,GAAA,gBAAA/5B,GACA25B,GAAAlB,EAAAz4B,EAAA,kBAAAuG,EACAszB,GAAAE,IAAA6J,GAAAzjC,KAAAuG,UAAAC,WAOAy2B,GAAA,GAEA1C,GAAA,EACAyE,GAAA,EACAvE,GAAA,EACAC,GAAA,EAEAwC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GAEAoG,GAAAvG,GAAAC,GACAuG,GAAAtG,GAAAC,GACAsG,GAAAF,GAAAC,GAEApG,IAAA,SACAE,IAAA,oBA4BAxE,GAAAp4B,WAKA42B,QAAA,aAKA72B,KAAA,WACA5I,KAAA0lC,MAAAnG,EAAAv/B,KAAAwH,QAAAxH,KAAA0lC,KAAA1lC,KAAAohC,YACAphC,KAAAomC,UAAA7G,EAAAv/B,KAAA0iB,OAAA1iB,KAAAomC,SAAApmC,KAAAohC,YACAphC,KAAA4lC,OAAArG,EAAAsB,EAAA7gC,KAAAwH,SAAAxH,KAAA4lC,MAAA5lC,KAAAohC,aAMA3wB,QAAA,WACAzQ,KAAA0lC,MAAA/F,EAAA3/B,KAAAwH,QAAAxH,KAAA0lC,KAAA1lC,KAAAohC,YACAphC,KAAAomC,UAAAzG,EAAA3/B,KAAA0iB,OAAA1iB,KAAAomC,SAAApmC,KAAAohC,YACAphC,KAAA4lC,OAAAjG,EAAAkB,EAAA7gC,KAAAwH,SAAAxH,KAAA4lC,MAAA5lC,KAAAohC,aA4TA,IAAAyK,KACAC,UAAAvJ,GACAwJ,UAAA/E,GACAgF,QAAAvJ,IAGAkD,GAAA,YACAE,GAAA,mBAgBAthB,GAAAud,EAAAb,GAKAxB,QAAA,SAAAvqB,GACA,GAAA8sB,GAAA6J,GAAA32B,EAAAtW,KAGAojC,GAAAO,IAAA,IAAArtB,EAAA+2B,SACAjsC,KAAA8lC,SAAA,GAGA9D,EAAAgF,IAAA,IAAA9xB,EAAAg3B,QACAlK,EAAAS,IAIAziC,KAAA8lC,UAIA9D,EAAAS,KACAziC,KAAA8lC,SAAA,GAGA9lC,KAAAsI,SAAAtI,KAAAkhC,QAAAc,GACAG,UAAAjtB,GACAmtB,iBAAAntB,GACAi3B,YAvbA,QAwbA1H,SAAAvvB,OAKA,IAAAk3B,KACAC,YAAA9J,GACA+J,YAAAtF,GACAuF,UAAA9J,GACA+J,cAAA9J,GACA+J,WAAA/J,IAIAgK,IACAC,EAzcA,QA0cAC,EAzcA,MA0cAC,EAzcA,QA0cAC,EAzcA,UA4cA/G,GAAA,cACAC,GAAA,qCAGAn+B,GAAAklC,iBAAAllC,EAAAmlC,eACAjH,GAAA,gBACAC,GAAA,6CAiBAzhB,EAAAkd,EAAAR,GAKAxB,QAAA,SAAAvqB,GACA,GAAA+wB,GAAAjmC,KAAAimC,MACAgH,GAAA,EAEAC,EAAAh4B,EAAAtW,KAAA4K,cAAA6W,QAAA,SACA2hB,EAAAoK,GAAAc,GACAf,EAAAO,GAAAx3B,EAAAi3B,cAAAj3B,EAAAi3B,YAEAgB,EAnfA,SAmfAhB,EAGAiB,EAAArN,EAAAkG,EAAA/wB,EAAAm4B,UAAA,YAGArL,GAAAO,KAAA,IAAArtB,EAAA+2B,QAAAkB,GACAC,EAAA,IACAnH,EAAAn7B,KAAAoK,GACAk4B,EAAAnH,EAAA38B,OAAA,GAES04B,GAAAS,GAAAC,MACTuK,GAAA,GAIAG,EAAA,IAKAnH,EAAAmH,GAAAl4B,EAEAlV,KAAAsI,SAAAtI,KAAAkhC,QAAAc,GACAG,SAAA8D,EACA5D,iBAAAntB,GACAi3B,cACA1H,SAAAvvB,IAGA+3B,GAEAhH,EAAApJ,OAAAuQ,EAAA,MAKA,IAAAE,KACAC,WAAAhL,GACAiL,UAAAxG,GACAyG,SAAAhL,GACAiL,YAAAhL,IAGA2D,GAAA,aACAC,GAAA,2CAeA/hB,GAAA4hB,EAAAlF,GACAxB,QAAA,SAAAvqB,GACA,GAAAtW,GAAA0uC,GAAAp4B,EAAAtW,KAOA,IAJAA,IAAA2jC,KACAviC,KAAAumC,SAAA,GAGAvmC,KAAAumC,QAAA,CAIA,GAAApxB,GAAAqxB,EAAAvmB,KAAAjgB,KAAAkV,EAAAtW,EAGAA,IAAA6jC,GAAAC,KAAAvtB,EAAA,GAAA7L,OAAA6L,EAAA,GAAA7L,QAAA,IACAtJ,KAAAumC,SAAA,GAGAvmC,KAAAsI,SAAAtI,KAAAkhC,QAAAtiC,GACAujC,SAAAhtB,EAAA,GACAktB,gBAAAltB,EAAA,GACAg3B,YAtkBA,QAukBA1H,SAAAvvB,OAsBA,IAAAy4B,KACAJ,WAAAhL,GACAiL,UAAAxG,GACAyG,SAAAhL,GACAiL,YAAAhL,IAGAkE,GAAA,2CAcAriB,GAAAod,EAAAV,GACAxB,QAAA,SAAAvqB,GACA,GAAAtW,GAAA+uC,GAAAz4B,EAAAtW,MACAuW,EAAA2xB,EAAA7mB,KAAAjgB,KAAAkV,EAAAtW,EACAuW,IAIAnV,KAAAsI,SAAAtI,KAAAkhC,QAAAtiC,GACAujC,SAAAhtB,EAAA,GACAktB,gBAAAltB,EAAA,GACAg3B,YA7nBA,QA8nBA1H,SAAAvvB,MA4EA,IAAA2yB,IAAA,KACAE,GAAA,EAaAxjB,GAAAsd,EAAAZ,GAOAxB,QAAA,SAAAyB,EAAA0M,EAAAC,GACA,GAAAV,GAhuBA,SAguBAU,EAAA1B,YACA2B,EA/tBA,SA+tBAD,EAAA1B,WAEA,MAAA2B,GAAAD,EAAAE,oBAAAF,EAAAE,mBAAAC,kBAAA,CAKA,GAAAb,EACA5F,EAAAtnB,KAAAjgB,KAAA4tC,EAAAC,OACS,IAAAC,GAAAhG,EAAA7nB,KAAAjgB,KAAA6tC,GACT,MAGA7tC,MAAAsI,SAAA44B,EAAA0M,EAAAC,KAMAp9B,QAAA,WACAzQ,KAAAonC,MAAA32B,UACAzQ,KAAAqnC,MAAA52B,YA0CA,IAAAw9B,IAAA3N,EAAA+K,GAAA/pC,MAAA,eACA4sC,GAAAD,KAAA7/B,EAIAq6B,GAAA,OACAD,GAAA,eACAL,GAAA,OACAE,GAAA,QACAE,GAAA,QACA4F,GA4IA,WACA,IAAAD,GACA,QAEA,IAAAE,MACAC,EAAAxmC,EAAAymC,KAAAzmC,EAAAymC,IAAAC,QAOA,QANA,4DAAA/b,QAAA,SAAA1vB,GAIAsrC,EAAAtrC,IAAAurC,GAAAxmC,EAAAymC,IAAAC,SAAA,eAAAzrC,KAEAsrC,IA1IApG,GAAAn/B,WAKAi0B,IAAA,SAAAjxB,GAzBA,WA2BAA,IACAA,EAAA7L,KAAAwuC,WAGAN,IAAAluC,KAAAkhC,QAAA15B,QAAAlG,OAAA6sC,GAAAtiC,KACA7L,KAAAkhC,QAAA15B,QAAAlG,MAAA2sC,IAAApiC,GAEA7L,KAAAkoC,QAAAr8B,EAAArC,cAAAkB,QAMAsnB,OAAA,WACAhyB,KAAA88B,IAAA98B,KAAAkhC,QAAA74B,QAAAsiC,cAOA6D,QAAA,WACA,GAAAtG,KAMA,OALAhb,GAAAltB,KAAAkhC,QAAAoJ,YAAA,SAAAhB,GACApK,EAAAoK,EAAAjhC,QAAAg5B,QAAAiI,MACApB,IAAAnvB,OAAAuwB,EAAAmF,qBAGAxG,EAAAC,EAAA7+B,KAAA,OAOAqlC,gBAAA,SAAAzM,GACA,GAAAwC,GAAAxC,EAAAwC,SACAM,EAAA9C,EAAA6B,eAGA,IAAA9jC,KAAAkhC,QAAAyB,QAAAgM,UAEA,WADAlK,GAAAtuB,gBAIA,IAAA+xB,GAAAloC,KAAAkoC,QACA0G,EAAA/O,EAAAqI,EAAAC,MAAAgG,GAAAhG,IACAG,EAAAzI,EAAAqI,EAAAK,MAAA4F,GAAA5F,IACAH,EAAAvI,EAAAqI,EAAAG,MAAA8F,GAAA9F,GAEA,IAAAuG,EAAA,CAGA,GAAAC,GAAA,IAAA5M,EAAAE,SAAA74B,OACAwlC,EAAA7M,EAAA0B,SAAA,EACAoL,EAAA9M,EAAAuB,UAAA,GAEA,IAAAqL,GAAAC,GAAAC,EACA,OAIA,MAAA3G,IAAAE,MAAA,GAKAsG,GACAtG,GAAAvD,EAAA2G,IACAtD,GAAArD,EAAA4G,GACA3rC,KAAAgvC,WAAAvK,OAHA,IAWAuK,WAAA,SAAAvK,GACAzkC,KAAAkhC,QAAAyB,QAAAgM,WAAA,EACAlK,EAAAtuB,kBAiFA,IAAAwyB,IAAA,EACAO,GAAA,EACAD,GAAA,EACAD,GAAA,EACAiG,GAAAjG,GACAD,GAAA,EAyBAL,GAAA7/B,WAKAye,YAOAwV,IAAA,SAAAz0B,GAKA,MAJA42B,IAAAj/B,KAAAqI,WAGArI,KAAAkhC,SAAAlhC,KAAAkhC,QAAAyJ,YAAA3Y,SACAhyB,MAQA8qC,cAAA,SAAAzB,GACA,GAAAhL,EAAAgL,EAAA,gBAAArpC,MACA,MAAAA,KAGA,IAAA4oC,GAAA5oC,KAAA4oC,YAMA,OALAS,GAAAD,GAAAC,EAAArpC,MACA4oC,EAAAS,EAAAznC,MACAgnC,EAAAS,EAAAznC,IAAAynC,EACAA,EAAAyB,cAAA9qC,OAEAA,MAQAkvC,kBAAA,SAAA7F,GACA,MAAAhL,GAAAgL,EAAA,oBAAArpC,MACAA,MAGAqpC,EAAAD,GAAAC,EAAArpC,YACAA,MAAA4oC,aAAAS,EAAAznC,IACA5B,OAQA+qC,eAAA,SAAA1B,GACA,GAAAhL,EAAAgL,EAAA,iBAAArpC,MACA,MAAAA,KAGA,IAAA6oC,GAAA7oC,KAAA6oC,WAMA,OALAQ,GAAAD,GAAAC,EAAArpC,OACA,IAAA+/B,EAAA8I,EAAAQ,KACAR,EAAA/9B,KAAAu+B,GACAA,EAAA0B,eAAA/qC,OAEAA,MAQAmvC,mBAAA,SAAA9F,GACA,GAAAhL,EAAAgL,EAAA,qBAAArpC,MACA,MAAAA,KAGAqpC,GAAAD,GAAAC,EAAArpC,KACA,IAAA6Q,GAAAkvB,EAAA//B,KAAA6oC,YAAAQ,EAIA,OAHAx4B,IAAA,GACA7Q,KAAA6oC,YAAAhM,OAAAhsB,EAAA,GAEA7Q,MAOAovC,mBAAA,WACA,MAAApvC,MAAA6oC,YAAAv/B,OAAA,GAQA+lC,iBAAA,SAAAhG,GACA,QAAArpC,KAAA4oC,aAAAS,EAAAznC,KAQAihC,KAAA,SAAAZ,GAIA,QAAAY,GAAAnsB,GACA9V,EAAAsgC,QAAA2B,KAAAnsB,EAAAurB,GAJA,GAAArhC,GAAAZ,KACA8e,EAAA9e,KAAA8e,KAOAA,GAAAkqB,IACAnG,EAAAjiC,EAAAyH,QAAAqO,MAAAoyB,GAAAhqB,IAGA+jB,EAAAjiC,EAAAyH,QAAAqO,OAEAurB,EAAAqN,iBACAzM,EAAAZ,EAAAqN,iBAIAxwB,GAAAkqB,IACAnG,EAAAjiC,EAAAyH,QAAAqO,MAAAoyB,GAAAhqB,KAUAywB,QAAA,SAAAtN,GACA,GAAAjiC,KAAAwvC,UACA,MAAAxvC,MAAA6iC,KAAAZ,EAGAjiC,MAAA8e,MA7KA,IAoLA0wB,QAAA,WAEA,IADA,GAAAvoC,GAAA,EACAA,EAAAjH,KAAA6oC,YAAAv/B,QAAA,CACA,KAAAtJ,KAAA6oC,YAAA5hC,GAAA6X,OAvLA,GAuLA6pB,KACA,QAEA1hC,KAEA,UAOA67B,UAAA,SAAA+K,GAGA,GAAA4B,GAAAxQ,MAAsC4O,EAGtC,KAAA3O,EAAAl/B,KAAAqI,QAAAg5B,QAAArhC,KAAAyvC,IAGA,MAFAzvC,MAAAuQ,aACAvQ,KAAA8e,MA3MA,GAgNA9e,MAAA8e,OAAAmwB,GAAAlG,GAhNA,MAiNA/oC,KAAA8e,MAAA6pB,IAGA3oC,KAAA8e,MAAA9e,KAAA0vC,QAAAD,GAIAzvC,KAAA8e,OAAAoqB,GAAAD,GAAAD,GAAAD,KACA/oC,KAAAuvC,QAAAE,IAWAC,QAAA,SAAA7B,KAOAY,eAAA,aAOAl+B,MAAA,cA8DAgU,EAAAglB,GAAAb,GAKAphB,UAKA6a,SAAA,GASAwN,SAAA,SAAA1N,GACA,GAAA2N,GAAA5vC,KAAAqI,QAAA85B,QACA,YAAAyN,GAAA3N,EAAAE,SAAA74B,SAAAsmC,GASAF,QAAA,SAAAzN,GACA,GAAAnjB,GAAA9e,KAAA8e,MACAkjB,EAAAC,EAAAD,UAEA6N,EAAA/wB,GAAAoqB,GAAAD,IACA6G,EAAA9vC,KAAA2vC,SAAA1N,EAGA,OAAA4N,KAAA7N,EAAAU,KAAAoN,GACAhxB,EAAAiqB,GACS8G,GAAAC,EACT9N,EAAAS,GACA3jB,EAAAkqB,GACalqB,EAAAoqB,GAGbpqB,EAAAmqB,GAFAC,GA5VA,MAiXA3kB,EAAAilB,GAAAD,IAKAjiB,UACA5Q,MAAA,MACAq5B,UAAA,GACA5N,SAAA,EACA4C,UAAA6G,IAGA6C,eAAA,WACA,GAAA1J,GAAA/kC,KAAAqI,QAAA08B,UACAmD,IAOA,OANAnD,GAAA2G,IACAxD,EAAAp9B,KAAAy9B,IAEAxD,EAAA4G,IACAzD,EAAAp9B,KAAAu9B,IAEAH,GAGA8H,cAAA,SAAA/N,GACA,GAAA55B,GAAArI,KAAAqI,QACA4nC,GAAA,EACAtM,EAAA1B,EAAA0B,SACAoB,EAAA9C,EAAA8C,UACAx/B,EAAA08B,EAAA+B,OACAx+B,EAAAy8B,EAAA7rB,MAeA,OAZA2uB,GAAA18B,EAAA08B,YACA18B,EAAA08B,UAAA2G,IACA3G,EAAA,IAAAx/B,EAAA2/B,GAAA3/B,EAAA,EAAA4/B,GAAAC,GACA6K,EAAA1qC,GAAAvF,KAAAypC,GACA9F,EAAAt5B,KAAAuC,IAAAq1B,EAAA+B,UAEAe,EAAA,IAAAv/B,EAAA0/B,GAAA1/B,EAAA,EAAA6/B,GAAAC,GACA2K,EAAAzqC,GAAAxF,KAAA0pC,GACA/F,EAAAt5B,KAAAuC,IAAAq1B,EAAA7rB,UAGA6rB,EAAA8C,YACAkL,GAAAtM,EAAAt7B,EAAA0nC,WAAAhL,EAAA18B,EAAA08B,WAGA4K,SAAA,SAAA1N,GACA,MAAAsH,IAAA1gC,UAAA8mC,SAAA1vB,KAAAjgB,KAAAiiC,KACAjiC,KAAA8e,MAAAoqB,MAAAlpC,KAAA8e,MAAAoqB,KAAAlpC,KAAAgwC,cAAA/N,KAGAY,KAAA,SAAAZ,GAEAjiC,KAAAypC,GAAAxH,EAAA+B,OACAhkC,KAAA0pC,GAAAzH,EAAA7rB,MAEA,IAAA2uB,GAAAoE,GAAAlH,EAAA8C,UAEAA,KACA9C,EAAAqN,gBAAAtvC,KAAAqI,QAAAqO,MAAAquB,GAEA/kC,KAAAg/B,OAAA6D,KAAA5iB,KAAAjgB,KAAAiiC,MAcA1d,EAAAolB,GAAAJ,IAKAjiB,UACA5Q,MAAA,QACAq5B,UAAA,EACA5N,SAAA,GAGAsM,eAAA,WACA,OAAAtG,KAGAwH,SAAA,SAAA1N,GACA,MAAAjiC,MAAAg/B,OAAA2Q,SAAA1vB,KAAAjgB,KAAAiiC,KACA53B,KAAAuC,IAAAq1B,EAAArqB,MAAA,GAAA5X,KAAAqI,QAAA0nC,WAAA/vC,KAAA8e,MAAAoqB,KAGArG,KAAA,SAAAZ,GACA,OAAAA,EAAArqB,MAAA,CACA,GAAAs4B,GAAAjO,EAAArqB,MAAA,YACAqqB,GAAAqN,gBAAAtvC,KAAAqI,QAAAqO,MAAAw5B,EAEAlwC,KAAAg/B,OAAA6D,KAAA5iB,KAAAjgB,KAAAiiC,MAiBA1d,EAAAqlB,GAAAlB,GAKAphB,UACA5Q,MAAA,QACAyrB,SAAA,EACAgO,KAAA,IACAJ,UAAA,GAGAtB,eAAA,WACA,OAAAhG,KAGAiH,QAAA,SAAAzN,GACA,GAAA55B,GAAArI,KAAAqI,QACA+nC,EAAAnO,EAAAE,SAAA74B,SAAAjB,EAAA85B,SACAkO,EAAApO,EAAA0B,SAAAt7B,EAAA0nC,UACAO,EAAArO,EAAAuB,UAAAn7B,EAAA8nC,IAMA,IAJAnwC,KAAA8pC,OAAA7H,GAIAoO,IAAAD,GAAAnO,EAAAD,WAAAS,GAAAC,MAAA4N,EACAtwC,KAAAuQ,YACS,IAAA0xB,EAAAD,UAAAO,GACTviC,KAAAuQ,QACAvQ,KAAA6pC,OAAA5L,EAAA,WACAj+B,KAAA8e,MAAAmwB,GACAjvC,KAAAuvC,WACalnC,EAAA8nC,KAAAnwC,UACJ,IAAAiiC,EAAAD,UAAAS,GACT,MAAAwM,GAEA,OA7gBA,KAghBA1+B,MAAA,WACAgD,aAAAvT,KAAA6pC,SAGAhH,KAAA,SAAAZ,GACAjiC,KAAA8e,QAAAmwB,KAIAhN,KAAAD,UAAAS,GACAziC,KAAAkhC,QAAA2B,KAAA7iC,KAAAqI,QAAAqO,MAAA,KAAAurB,IAEAjiC,KAAA8pC,OAAAxG,UAAAC,KACAvjC,KAAAkhC,QAAA2B,KAAA7iC,KAAAqI,QAAAqO,MAAA1W,KAAA8pC,aAeAvlB,EAAAwlB,GAAAR,IAKAjiB,UACA5Q,MAAA,SACAq5B,UAAA,EACA5N,SAAA,GAGAsM,eAAA,WACA,OAAAtG,KAGAwH,SAAA,SAAA1N,GACA,MAAAjiC,MAAAg/B,OAAA2Q,SAAA1vB,KAAAjgB,KAAAiiC,KACA53B,KAAAuC,IAAAq1B,EAAAjO,UAAAh0B,KAAAqI,QAAA0nC,WAAA/vC,KAAA8e,MAAAoqB,OAcA3kB,EAAAylB,GAAAT,IAKAjiB,UACA5Q,MAAA,QACAq5B,UAAA,GACAnL,SAAA,GACAG,UAAA2G,GAAAC,GACAxJ,SAAA,GAGAsM,eAAA,WACA,MAAAjF,IAAA3gC,UAAA4lC,eAAAxuB,KAAAjgB,OAGA2vC,SAAA,SAAA1N,GACA,GACA2C,GADAG,EAAA/kC,KAAAqI,QAAA08B,SAWA,OARAA,IAAA2G,GAAAC,IACA/G,EAAA3C,EAAAgC,gBACSc,EAAA2G,GACT9G,EAAA3C,EAAAkC,iBACSY,EAAA4G,KACT/G,EAAA3C,EAAAmC,kBAGApkC,KAAAg/B,OAAA2Q,SAAA1vB,KAAAjgB,KAAAiiC,IACA8C,EAAA9C,EAAA6B,iBACA7B,EAAA0B,SAAA3jC,KAAAqI,QAAA0nC,WACA9N,EAAAsC,aAAAvkC,KAAAqI,QAAA85B,UACAv1B,GAAAg4B,GAAA5kC,KAAAqI,QAAAu8B,UAAA3C,EAAAD,UAAAS,IAGAI,KAAA,SAAAZ,GACA,GAAA8C,GAAAoE,GAAAlH,EAAA6B,gBACAiB,IACA/kC,KAAAkhC,QAAA2B,KAAA7iC,KAAAqI,QAAAqO,MAAAquB,EAAA9C,GAGAjiC,KAAAkhC,QAAA2B,KAAA7iC,KAAAqI,QAAAqO,MAAAurB,MA2BA1d,EAAA0lB,GAAAvB,GAKAphB,UACA5Q,MAAA,MACAyrB,SAAA,EACAoO,KAAA,EACAC,SAAA,IACAL,KAAA,IACAJ,UAAA,EACAU,aAAA,IAGAhC,eAAA,WACA,OAAAjG,KAGAkH,QAAA,SAAAzN,GACA,GAAA55B,GAAArI,KAAAqI,QAEA+nC,EAAAnO,EAAAE,SAAA74B,SAAAjB,EAAA85B,SACAkO,EAAApO,EAAA0B,SAAAt7B,EAAA0nC,UACAW,EAAAzO,EAAAuB,UAAAn7B,EAAA8nC,IAIA,IAFAnwC,KAAAuQ,QAEA0xB,EAAAD,UAAAO,IAAA,IAAAviC,KAAAoqC,MACA,MAAApqC,MAAA2wC,aAKA,IAAAN,GAAAK,GAAAN,EAAA,CACA,GAAAnO,EAAAD,WAAAS,GACA,MAAAziC,MAAA2wC,aAGA,IAAAC,IAAA5wC,KAAAkqC,OAAAjI,EAAAqB,UAAAtjC,KAAAkqC,MAAA7hC,EAAAmoC,SACAK,GAAA7wC,KAAAmqC,SAAAvG,EAAA5jC,KAAAmqC,QAAAlI,EAAApW,QAAAxjB,EAAAooC,YAEAzwC,MAAAkqC,MAAAjI,EAAAqB,UACAtjC,KAAAmqC,QAAAlI,EAAApW,OAEAglB,GAAAD,EAGA5wC,KAAAoqC,OAAA,EAFApqC,KAAAoqC,MAAA,EAKApqC,KAAA8pC,OAAA7H,CAKA,QADAjiC,KAAAoqC,MAAA/hC,EAAAkoC,KAIA,MAAAvwC,MAAAovC,sBAGApvC,KAAA6pC,OAAA5L,EAAA,WACAj+B,KAAA8e,MAAAmwB,GACAjvC,KAAAuvC,WACqBlnC,EAAAmoC,SAAAxwC,MACrBkpC,IANA+F,GAUA,MAttBA,KAytBA0B,YAAA,WAIA,MAHA3wC,MAAA6pC,OAAA5L,EAAA,WACAj+B,KAAA8e,MA3tBA,IA4tBS9e,KAAAqI,QAAAmoC,SAAAxwC,MA5tBT,IAguBAuQ,MAAA,WACAgD,aAAAvT,KAAA6pC,SAGAhH,KAAA,WACA7iC,KAAA8e,OAAAmwB,KACAjvC,KAAA8pC,OAAAgH,SAAA9wC,KAAAoqC,MACApqC,KAAAkhC,QAAA2B,KAAA7iC,KAAAqI,QAAAqO,MAAA1W,KAAA8pC,YAoBAO,GAAA0G,QAAA,QAMA1G,GAAA/iB,UAOA0pB,WAAA,EAQArG,YAl9BA,UAw9BAtJ,QAAA,EASAF,YAAA,KAOAI,WAAA,KAOAgJ,SAEAR,IAA4B1I,QAAA,KAC5BsI,IAA2BtI,QAAA,IAAc,YACzC2I,IAA2BjF,UAAA2G,MAC3BlC,IAAyBzE,UAAA2G,KAAgC,WACzDzB,KACAA,IAAyBvzB,MAAA,YAAA65B,KAAA,IAA4B,SACrD3G,KAQAoB,UAMAiG,WAAA,OAOAC,YAAA,OASAC,aAAA,OAOAC,eAAA,OAOAC,SAAA,OAQAC,kBAAA,iBAoCA9G,IAAA3hC,WAMAi0B,IAAA,SAAAz0B,GAaA,MAZA42B,IAAAj/B,KAAAqI,WAGAA,EAAAsiC,aACA3qC,KAAA2qC,YAAA3Y,SAEA3pB,EAAA84B,cAEAnhC,KAAAiiC,MAAAxxB,UACAzQ,KAAAiiC,MAAAvf,OAAAra,EAAA84B,YACAnhC,KAAAiiC,MAAAr5B,QAEA5I,MASA2G,KAAA,SAAA4qC,GACAvxC,KAAA2iC,QAAA6O,QAAAD,EA5DA,EADA,GAsEAzO,UAAA,SAAA+K,GACA,GAAAlL,GAAA3iC,KAAA2iC,OACA,KAAAA,EAAA6O,QAAA,CAKAxxC,KAAA2qC,YAAA+D,gBAAAb,EAEA,IAAAvE,GACAgB,EAAAtqC,KAAAsqC,YAKAmH,EAAA9O,EAAA8O,gBAIAA,QAAA3yB,MAAAmwB,MACAwC,EAAA9O,EAAA8O,cAAA,KAIA,KADA,GAAAxqC,GAAA,EACAA,EAAAqjC,EAAAhhC,QACAggC,EAAAgB,EAAArjC,GA9FA,IAsGA07B,EAAA6O,SACAC,GAAAnI,GAAAmI,IACAnI,EAAA+F,iBAAAoC,GAGAnI,EAAA/4B,QAFA+4B,EAAAxG,UAAA+K,IAOA4D,GAAAnI,EAAAxqB,OAAAoqB,GAAAD,GAAAD,MACAyI,EAAA9O,EAAA8O,cAAAnI,GAEAriC,MASA4lB,IAAA,SAAAyc,GACA,GAAAA,YAAAZ,GACA,MAAAY,EAIA,QADAgB,GAAAtqC,KAAAsqC,YACArjC,EAAA,EAAuBA,EAAAqjC,EAAAhhC,OAAwBrC,IAC/C,GAAAqjC,EAAArjC,GAAAoB,QAAAqO,OAAA4yB,EACA,MAAAgB,GAAArjC,EAGA,cASA6R,IAAA,SAAAwwB,GACA,GAAAjL,EAAAiL,EAAA,MAAAtpC,MACA,MAAAA,KAIA,IAAA0xC,GAAA1xC,KAAA6sB,IAAAyc,EAAAjhC,QAAAqO,MASA,OARAg7B,IACA1xC,KAAAiB,OAAAywC,GAGA1xC,KAAAsqC,YAAAx/B,KAAAw+B,GACAA,EAAApI,QAAAlhC,KAEAA,KAAA2qC,YAAA3Y,SACAsX,GAQAroC,OAAA,SAAAqoC,GACA,GAAAjL,EAAAiL,EAAA,SAAAtpC,MACA,MAAAA,KAMA,IAHAspC,EAAAtpC,KAAA6sB,IAAAyc,GAGA,CACA,GAAAgB,GAAAtqC,KAAAsqC,YACAz5B,EAAAkvB,EAAAuK,EAAAhB,IAEA,IAAAz4B,IACAy5B,EAAAzN,OAAAhsB,EAAA,GACA7Q,KAAA2qC,YAAA3Y,UAIA,MAAAhyB,OASA0D,GAAA,SAAAiuC,EAAAlS,GACA,GAAAkS,IAAAvjC,GAGAqxB,IAAArxB,EAAA,CAIA,GAAAq8B,GAAAzqC,KAAAyqC,QAKA,OAJAvd,GAAAwS,EAAAiS,GAAA,SAAAj7B,GACA+zB,EAAA/zB,GAAA+zB,EAAA/zB,OACA+zB,EAAA/zB,GAAA5L,KAAA20B,KAEAz/B,OASAyV,IAAA,SAAAk8B,EAAAlS,GACA,GAAAkS,IAAAvjC,EAAA,CAIA,GAAAq8B,GAAAzqC,KAAAyqC,QAQA,OAPAvd,GAAAwS,EAAAiS,GAAA,SAAAj7B,GACA+oB,EAGAgL,EAAA/zB,IAAA+zB,EAAA/zB,GAAAmmB,OAAAkD,EAAA0K,EAAA/zB,GAAA+oB,GAAA,SAFAgL,GAAA/zB,KAKA1W,OAQA6iC,KAAA,SAAAnsB,EAAA/W,GAEAK,KAAAqI,QAAA2oC,WACA/F,GAAAv0B,EAAA/W,EAIA,IAAA8qC,GAAAzqC,KAAAyqC,SAAA/zB,IAAA1W,KAAAyqC,SAAA/zB,GAAAgK,OACA,IAAA+pB,KAAAnhC,OAAA,CAIA3J,EAAAf,KAAA8X,EACA/W,EAAAwW,eAAA,WACAxW,EAAA8kC,SAAAtuB,iBAIA,KADA,GAAAlP,GAAA,EACAA,EAAAwjC,EAAAnhC,QACAmhC,EAAAxjC,GAAAtH,GACAsH,MAQAwJ,QAAA,WACAzQ,KAAAwH,SAAAojC,GAAA5qC,MAAA,GAEAA,KAAAyqC,YACAzqC,KAAA2iC,WACA3iC,KAAAiiC,MAAAxxB,UACAzQ,KAAAwH,QAAA,OAyCAy3B,GAAAoL,IACA9H,eACAyE,cACAvE,aACAC,gBAEAiG,kBACAO,eACAD,iBACAD,eACAiG,oBACAlG,mBACA6I,aAlrCA,GAorCA1M,kBACAC,kBACAC,mBACAC,gBACAC,kBACAoG,wBACAC,sBACAC,iBAEApB,WACAvJ,QACA+G,cAEArG,aACAG,aACAL,oBACAI,kBACAsE,mBAEAuC,aACAa,kBACAsI,IAAA5H,GACA6H,IAAAtI,GACAuI,MAAA/H,GACAgI,MAAArI,GACAzU,OAAA6U,GACAkI,MAAArI,GAEAlmC,GAAA67B,EACA9pB,IAAAkqB,EACAzS,OACAiF,SACAhtB,UACA85B,UACA1a,UACA6Z,SACAkC,kBAKA,KAAAz4B,IAAA,mBAAAjH,eACAypC,WAGA/iC,EAAA,WACA,MAAA+iC,KACKpqB,KAAAhb,EAAA5H,EAAA4H,EAAA9H,MAAAiR,IAAAjR,EAAA8H,QAAAqC,IAOJO,OAAAF","file":"static/js/8.05968b29d2e910000eab.js","sourcesContent":["webpackJsonp([8],{\n\n/***/ \"0Ykn\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/extends.js\nvar helpers_extends = __webpack_require__(\"Dd8w\");\nvar extends_default = /*#__PURE__*/__webpack_require__.n(helpers_extends);\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/core-js/object/keys.js\nvar keys = __webpack_require__(\"fZjL\");\nvar keys_default = /*#__PURE__*/__webpack_require__.n(keys);\n\n// EXTERNAL MODULE: ./node_modules/svg.js/dist/svg.js\nvar svg = __webpack_require__(\"or9x\");\nvar svg_default = /*#__PURE__*/__webpack_require__.n(svg);\n\n// EXTERNAL MODULE: ./src/components/People/sex.js\nvar sex = __webpack_require__(\"SN53\");\nvar sex_default = /*#__PURE__*/__webpack_require__.n(sex);\n\n// EXTERNAL MODULE: ./src/components/People/svg.panzoom.js\nvar svg_panzoom = __webpack_require__(\"cTPc\");\nvar svg_panzoom_default = /*#__PURE__*/__webpack_require__.n(svg_panzoom);\n\n// EXTERNAL MODULE: ./src/components/People/svg.content.js\nvar svg_content = __webpack_require__(\"0sgZ\");\nvar svg_content_default = /*#__PURE__*/__webpack_require__.n(svg_content);\n\n// EXTERNAL MODULE: ./node_modules/hammerjs/hammer.js\nvar hammer = __webpack_require__(\"rxKx\");\nvar hammer_default = /*#__PURE__*/__webpack_require__.n(hammer);\n\n// EXTERNAL MODULE: ./node_modules/vivus/dist/vivus.js\nvar vivus = __webpack_require__(\"Jn6l\");\nvar vivus_default = /*#__PURE__*/__webpack_require__.n(vivus);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vux-loader/src/script-loader.js!./node_modules/vux-loader/src/script-loader.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/People/people.vue\n\n\n//\n//\n//\n\n\n\n\n\n\n\n\n/* harmony default export */ var people = ({\n  props: {\n    sex: {\n      /**\r\n       * 性别\r\n       * true为男性，false为女性\r\n       */\n      type: Boolean,\n      default: true\n    },\n    face: {\n      /**\r\n       * 正反面\r\n       * true为正面，false为反面\r\n       */\n      type: Boolean,\n      default: true\n    },\n    lineColor: {\n      /**\r\n       * 线条颜色\r\n       * 0为男性，1为女性\r\n       */\n      type: Array,\n      default: function _default() {\n        return [\"#6BBEFD\", \"#FD9A8E\"];\n      }\n    },\n    vivus: {\n      /**\r\n       * 描边运行方式\r\n       * delayed:每个路径元素在同一时间绘制在一个小的延迟在开始。这是当前的默认动画。\r\n       * sync:每条线同步绘制。它们都在同一时间开始和结束。\r\n       * oneByOne:每个路径元素都是一个接一个地画出来的。这部动画给现场绘画留下了最好的印象。\r\n       */\n      type: String,\n      default: \"delayed\"\n    },\n    duration: {\n      /**\r\n       * 描边动画时间\r\n       */\n      type: Number,\n      default: 150\n    },\n    pathTimingFunction: {\n      /**\r\n       * 路径定时函数\r\n       * LINEAR EASE EASE_IN EASE_OUT EASE_OUT_BOUNCE\r\n       */\n      type: String,\n      default: \"LINEAR\"\n    },\n    animTimingFunction: {\n      /**\r\n       * 路径定时函数\r\n       * LINEAR EASE EASE_IN EASE_OUT EASE_OUT_BOUNCE\r\n       */\n      type: String,\n      default: \"LINEAR\"\n    },\n    ease: {\n      /**\r\n       * 人物还原动画过程\r\n       * <>: ease in and out\r\n       *  >: ease out\r\n       *  <: ease in\r\n       *  -: linear\r\n       *  =: external control\r\n       */\n      type: String,\n      default: \"-\"\n    },\n    delay: {\n      /**\r\n       * 人物还原动画时间\r\n       */\n      type: String,\n      default: \".3s\"\n    },\n    delayOpacity: {\n      /**\r\n       * 人物消失时间\r\n       */\n      type: String,\n      default: \".1s\"\n    },\n    clickOpacity: {\n      //点击过后的透明度\n      type: Number,\n      default: 0.7\n    },\n    bodyPosition: {\n      /**\r\n       * 点击身体某个部位\r\n       * 参数:val点击部位名称\r\n       *     正面\r\n       *     head:头部\r\n       *     neck:颈部\r\n       *     abdomen:腹部(包括胸部)\r\n       *     upperLimb:上肢\r\n       *     waist:腰部\r\n       *     genitals:男/女性生殖\r\n       *     theLegs:下肢\r\n       *     背面\r\n       *     wholeBody:全身\r\n       */\n      type: Function\n    },\n    isAnimation: {\n      /**\r\n       * 动画开关\r\n       */\n      type: Boolean,\n      default: true\n    },\n    initFill: {\n      type: String,\n      default: '#fff'\n    },\n    animateEnd: {\n      /**\r\n       * 动画执行完成回调函数\r\n       * 此回调只是描边动画回调，并不包括渐变动画\r\n       */\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      isAnimate: false,\n      sexData: sex_default.a,\n      svgFace: this.face,\n      svgSex: this.sex,\n      clickBuf: null, //缓存已被点击选中的path标签\n      isLabelClick: true\n    };\n  },\n  mounted: function mounted() {\n    this.svgRender();\n  },\n\n  methods: {\n    decodeType: function decodeType() {\n      var sexStr = this.svgSex ? \"man\" : \"woman\";\n      var faceStr = this.svgFace ? \"front\" : \"back\";\n\n      return [sexStr, faceStr];\n    },\n\n    //描边动画参数\n    timingProps: function timingProps() {\n      var timingProps = {\n        type: this.vivus,\n        duration: this.duration,\n        start: \"autostart\",\n        pathTimingFunction: vivus_default.a.LINEAR,\n        animTimingFunction: vivus_default.a.LINEAR\n      };\n\n      timingProps.pathTimingFunction = vivus_default.a[this.pathTimingFunction] || timingProps.pathTimingFunction;\n      timingProps.animTimingFunction = vivus_default.a[this.animTimingFunction] || timingProps.animTimingFunction;\n\n      return timingProps;\n    },\n    svgAgainInit: function svgAgainInit() {\n      var self = this;\n      this.isAnimate = false;\n      this.draw.animate({ delay: self.delayOpacity }).opacity(0).afterAll(function () {\n        self.draw.opacity(1);\n        self.draw.remove();\n        self.svgRender();\n      });\n    },\n    svgRender: function svgRender() {\n      var decode = this.decodeType();\n      this.draw = svg_default()(this.$refs.svginit);\n      this.draw.clear();\n      this.draw.style(\"color\", this.svgSex ? this.lineColor[0] : this.lineColor[1]);\n\n      //创建人体svg\n      this.createGroup(decode[0], decode[1]);\n\n      this.midden();\n\n      this.isLabelClick = false;\n\n      if (this.isAnimation) {\n        this.svgSwitchVivus();\n      } else {\n        this.svgSwitchNo();\n      }\n    },\n    svgSwitchVivus: function svgSwitchVivus() {\n      var prams = this.timingProps();\n      var self = this;\n      new vivus_default.a(this.draw.id(), prams, function () {\n        self.isAnimate = true;\n        self.isLabelClick = true;\n        //描边绘制成人物\n        var gLabel = self.faceRect.children();\n\n        self.animateEnd();\n\n        gLabel.map(function (label) {\n          var pathLabel = label.children();\n\n          pathLabel.map(function (rect) {\n            var dataAttr = rect.data(\"attrs\");\n            if (dataAttr.fill) {\n              rect.attr({\n                stroke: self.svgSex ? self.lineColor[0] : self.lineColor[1]\n              });\n\n              rect.animate({ ease: self.ease, delay: self.delay }).attr({ fill: dataAttr.fill, stroke: dataAttr.fill });\n            }\n          });\n        });\n      });\n    },\n    svgSwitchNo: function svgSwitchNo() {\n      this.isAnimate = true;\n      var self = this;\n      var gLabel = self.faceRect.children();\n\n      gLabel.map(function (label) {\n        var pathLabel = label.children();\n        pathLabel.map(function (rect) {\n          var dataAttr = rect.data(\"attrs\");\n          if (dataAttr.fill) {\n            rect.attr({ fill: dataAttr.fill, stroke: dataAttr.fill });\n          }\n        });\n      });\n\n      this.isLabelClick = true;\n    },\n\n    //设置svg宽高\n    midden: function midden() {\n      var clientRect = this.$refs.svginit.getBoundingClientRect();\n      this.draw.width(clientRect.width);\n      this.draw.height(clientRect.height);\n    },\n    createGroup: function createGroup(type, str) {\n      var data = this.sexData[type];\n\n      if (!data) {\n        return;\n      }\n\n      var fronts = data[str];\n      var self = this;\n\n      var faceRect = self.faceRect = self.draw.group();\n\n      var frontKeys = keys_default()(fronts);\n      frontKeys.map(function (val) {\n        self.wholeBody(fronts, val, faceRect);\n      });\n\n      var faceClient = faceRect.node.getBoundingClientRect();\n\n      this.draw.attr({\n        'preserveAspectRatio': 'xMidYMin meet',\n        'viewBox': '0 0 ' + faceClient.width + ' ' + faceClient.height\n      });\n    },\n\n    /**\r\n     * 创建一个部位\r\n     */\n    wholeBody: function wholeBody(obj, val, wood) {\n      var self = this;\n\n      var group = wood.group();\n      self.createPath(group, obj[val]);\n\n      group.node.addEventListener('touchstart', function () {\n        if (!self.isLabelClick) {\n          return;\n        }\n\n        if (self.clickOpacity) {\n          group.opacity(self.clickOpacity);\n\n          self.clickBuf = group;\n        }\n      });\n\n      //给每个部位绑定手势\n      var hammerGroup = new hammer_default.a(group.node);\n      hammerGroup.on('pressup', tapEnd);\n      hammerGroup.on('tap', tapEnd);\n\n      group.node.addEventListener('touchmove', function () {\n        self.clickBuf.opacity(1);\n      });\n\n      function tapEnd() {\n        if (!self.isLabelClick) {\n          return;\n        }\n\n        if (self.bodyPosition) {\n          self.bodyPosition(val, self.clickBuf);\n        }\n      }\n    },\n\n    /**\r\n     * 创建path标签\r\n     */\n    createPath: function createPath(group, arr) {\n      var self = this;\n      if (!arr && !group) {\n        return;\n      }\n\n      arr.map(function (obj) {\n        var path = group.path(obj.d);\n        if (obj.attr) {\n          path.data(\"attrs\", obj.attr);\n\n          var newData = extends_default()({}, obj.attr);\n          newData.fill = self.initFill;\n          newData.stroke = \"currentColor\";\n          path.attr(newData);\n        }\n      });\n    }\n  },\n  watch: {\n    face: function face(newVal, oldVal) {\n      if (this.isAnimate && newVal != this.svgFace) {\n        this.svgAgainInit();\n        this.svgFace = newVal;\n      }\n    },\n    sex: function sex(newVal, oldVal) {\n      if (this.isAnimate && newVal != this.svgSex) {\n        this.svgAgainInit();\n        this.svgSex = newVal;\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vux-loader/src/script-loader.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/People/people.vue\n\n\n//\n//\n//\n\n\n\n\n\n\n\n\n/* harmony default export */ var People_people = ({\n  props: {\n    sex: {\n      /**\r\n       * 性别\r\n       * true为男性，false为女性\r\n       */\n      type: Boolean,\n      default: true\n    },\n    face: {\n      /**\r\n       * 正反面\r\n       * true为正面，false为反面\r\n       */\n      type: Boolean,\n      default: true\n    },\n    lineColor: {\n      /**\r\n       * 线条颜色\r\n       * 0为男性，1为女性\r\n       */\n      type: Array,\n      default: function _default() {\n        return [\"#6BBEFD\", \"#FD9A8E\"];\n      }\n    },\n    vivus: {\n      /**\r\n       * 描边运行方式\r\n       * delayed:每个路径元素在同一时间绘制在一个小的延迟在开始。这是当前的默认动画。\r\n       * sync:每条线同步绘制。它们都在同一时间开始和结束。\r\n       * oneByOne:每个路径元素都是一个接一个地画出来的。这部动画给现场绘画留下了最好的印象。\r\n       */\n      type: String,\n      default: \"delayed\"\n    },\n    duration: {\n      /**\r\n       * 描边动画时间\r\n       */\n      type: Number,\n      default: 150\n    },\n    pathTimingFunction: {\n      /**\r\n       * 路径定时函数\r\n       * LINEAR EASE EASE_IN EASE_OUT EASE_OUT_BOUNCE\r\n       */\n      type: String,\n      default: \"LINEAR\"\n    },\n    animTimingFunction: {\n      /**\r\n       * 路径定时函数\r\n       * LINEAR EASE EASE_IN EASE_OUT EASE_OUT_BOUNCE\r\n       */\n      type: String,\n      default: \"LINEAR\"\n    },\n    ease: {\n      /**\r\n       * 人物还原动画过程\r\n       * <>: ease in and out\r\n       *  >: ease out\r\n       *  <: ease in\r\n       *  -: linear\r\n       *  =: external control\r\n       */\n      type: String,\n      default: \"-\"\n    },\n    delay: {\n      /**\r\n       * 人物还原动画时间\r\n       */\n      type: String,\n      default: \".3s\"\n    },\n    delayOpacity: {\n      /**\r\n       * 人物消失时间\r\n       */\n      type: String,\n      default: \".1s\"\n    },\n    clickOpacity: {\n      //点击过后的透明度\n      type: Number,\n      default: 0.7\n    },\n    bodyPosition: {\n      /**\r\n       * 点击身体某个部位\r\n       * 参数:val点击部位名称\r\n       *     正面\r\n       *     head:头部\r\n       *     neck:颈部\r\n       *     abdomen:腹部(包括胸部)\r\n       *     upperLimb:上肢\r\n       *     waist:腰部\r\n       *     genitals:男/女性生殖\r\n       *     theLegs:下肢\r\n       *     背面\r\n       *     wholeBody:全身\r\n       */\n      type: Function\n    },\n    isAnimation: {\n      /**\r\n       * 动画开关\r\n       */\n      type: Boolean,\n      default: true\n    },\n    initFill: {\n      type: String,\n      default: '#fff'\n    },\n    animateEnd: {\n      /**\r\n       * 动画执行完成回调函数\r\n       * 此回调只是描边动画回调，并不包括渐变动画\r\n       */\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      isAnimate: false,\n      sexData: sex_default.a,\n      svgFace: this.face,\n      svgSex: this.sex,\n      clickBuf: null, //缓存已被点击选中的path标签\n      isLabelClick: true\n    };\n  },\n  mounted: function mounted() {\n    this.svgRender();\n  },\n\n  methods: {\n    decodeType: function decodeType() {\n      var sexStr = this.svgSex ? \"man\" : \"woman\";\n      var faceStr = this.svgFace ? \"front\" : \"back\";\n\n      return [sexStr, faceStr];\n    },\n\n    //描边动画参数\n    timingProps: function timingProps() {\n      var timingProps = {\n        type: this.vivus,\n        duration: this.duration,\n        start: \"autostart\",\n        pathTimingFunction: vivus_default.a.LINEAR,\n        animTimingFunction: vivus_default.a.LINEAR\n      };\n\n      timingProps.pathTimingFunction = vivus_default.a[this.pathTimingFunction] || timingProps.pathTimingFunction;\n      timingProps.animTimingFunction = vivus_default.a[this.animTimingFunction] || timingProps.animTimingFunction;\n\n      return timingProps;\n    },\n    svgAgainInit: function svgAgainInit() {\n      var self = this;\n      this.isAnimate = false;\n      this.draw.animate({ delay: self.delayOpacity }).opacity(0).afterAll(function () {\n        self.draw.opacity(1);\n        self.draw.remove();\n        self.svgRender();\n      });\n    },\n    svgRender: function svgRender() {\n      var decode = this.decodeType();\n      this.draw = svg_default()(this.$refs.svginit);\n      this.draw.clear();\n      this.draw.style(\"color\", this.svgSex ? this.lineColor[0] : this.lineColor[1]);\n\n      //创建人体svg\n      this.createGroup(decode[0], decode[1]);\n\n      this.midden();\n\n      this.isLabelClick = false;\n\n      if (this.isAnimation) {\n        this.svgSwitchVivus();\n      } else {\n        this.svgSwitchNo();\n      }\n    },\n    svgSwitchVivus: function svgSwitchVivus() {\n      var prams = this.timingProps();\n      var self = this;\n      new vivus_default.a(this.draw.id(), prams, function () {\n        self.isAnimate = true;\n        self.isLabelClick = true;\n        //描边绘制成人物\n        var gLabel = self.faceRect.children();\n\n        self.animateEnd();\n\n        gLabel.map(function (label) {\n          var pathLabel = label.children();\n\n          pathLabel.map(function (rect) {\n            var dataAttr = rect.data(\"attrs\");\n            if (dataAttr.fill) {\n              rect.attr({\n                stroke: self.svgSex ? self.lineColor[0] : self.lineColor[1]\n              });\n\n              rect.animate({ ease: self.ease, delay: self.delay }).attr({ fill: dataAttr.fill, stroke: dataAttr.fill });\n            }\n          });\n        });\n      });\n    },\n    svgSwitchNo: function svgSwitchNo() {\n      this.isAnimate = true;\n      var self = this;\n      var gLabel = self.faceRect.children();\n\n      gLabel.map(function (label) {\n        var pathLabel = label.children();\n        pathLabel.map(function (rect) {\n          var dataAttr = rect.data(\"attrs\");\n          if (dataAttr.fill) {\n            rect.attr({ fill: dataAttr.fill, stroke: dataAttr.fill });\n          }\n        });\n      });\n\n      this.isLabelClick = true;\n    },\n\n    //设置svg宽高\n    midden: function midden() {\n      var clientRect = this.$refs.svginit.getBoundingClientRect();\n      this.draw.width(clientRect.width);\n      this.draw.height(clientRect.height);\n    },\n    createGroup: function createGroup(type, str) {\n      var data = this.sexData[type];\n\n      if (!data) {\n        return;\n      }\n\n      var fronts = data[str];\n      var self = this;\n\n      var faceRect = self.faceRect = self.draw.group();\n\n      var frontKeys = keys_default()(fronts);\n      frontKeys.map(function (val) {\n        self.wholeBody(fronts, val, faceRect);\n      });\n\n      var faceClient = faceRect.node.getBoundingClientRect();\n\n      this.draw.attr({\n        'preserveAspectRatio': 'xMidYMin meet',\n        'viewBox': '0 0 ' + faceClient.width + ' ' + faceClient.height\n      });\n    },\n\n    /**\r\n     * 创建一个部位\r\n     */\n    wholeBody: function wholeBody(obj, val, wood) {\n      var self = this;\n\n      var group = wood.group();\n      self.createPath(group, obj[val]);\n\n      group.node.addEventListener('touchstart', function () {\n        if (!self.isLabelClick) {\n          return;\n        }\n\n        if (self.clickOpacity) {\n          group.opacity(self.clickOpacity);\n\n          self.clickBuf = group;\n        }\n      });\n\n      //给每个部位绑定手势\n      var hammerGroup = new hammer_default.a(group.node);\n      hammerGroup.on('pressup', tapEnd);\n      hammerGroup.on('tap', tapEnd);\n\n      group.node.addEventListener('touchmove', function () {\n        self.clickBuf.opacity(1);\n      });\n\n      function tapEnd() {\n        if (!self.isLabelClick) {\n          return;\n        }\n\n        if (self.bodyPosition) {\n          self.bodyPosition(val, self.clickBuf);\n        }\n      }\n    },\n\n    /**\r\n     * 创建path标签\r\n     */\n    createPath: function createPath(group, arr) {\n      var self = this;\n      if (!arr && !group) {\n        return;\n      }\n\n      arr.map(function (obj) {\n        var path = group.path(obj.d);\n        if (obj.attr) {\n          path.data(\"attrs\", obj.attr);\n\n          var newData = extends_default()({}, obj.attr);\n          newData.fill = self.initFill;\n          newData.stroke = \"currentColor\";\n          path.attr(newData);\n        }\n      });\n    }\n  },\n  watch: {\n    face: function face(newVal, oldVal) {\n      if (this.isAnimate && newVal != this.svgFace) {\n        this.svgAgainInit();\n        this.svgFace = newVal;\n      }\n    },\n    sex: function sex(newVal, oldVal) {\n      if (this.isAnimate && newVal != this.svgSex) {\n        this.svgAgainInit();\n        this.svgSex = newVal;\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-29d43fb6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vux-loader/src/before-template-compiler-loader.js!./node_modules/vux-loader/src/template-loader.js!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/People/people.vue\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"svginit\",staticClass:\"sex\"})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ var components_People_people = (esExports);\n// CONCATENATED MODULE: ./src/components/People/people.vue\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"FJbZ\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-29d43fb6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  People_people,\n  components_People_people,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var src_components_People_people = __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"0sgZ\":\n/***/ (function(module, exports) {\n\n;\n(function () {\n\n    SVG.extend(SVG.G, {\n        /**\r\n         * svg画出来的图像位置\r\n         * 目前gPosition只支持两个层级的调用\r\n         * @param {*} str left right center top bottom \r\n         * @param {*} company 单位\r\n         */\n        gPosition: function gPosition(str, company) {\n            company = company || 0;\n            str = str || 'center';\n\n            //先让svg位置恢复到原来的位置\n            //不然定位会出问题\n            if (str === 'left' || str === 'right') {\n                this.x(0);\n            }\n\n            if (str === 'top' || str === 'bottom') {\n                this.y(0);\n            }\n\n            if (str === 'center') {\n                this.x(0);\n                this.y(0);\n            }\n\n            var rboxObj = this.rbox();\n            var drawRboxObj = this.doc().rbox();\n\n            if (str === 'left') {\n                var px = -rboxObj.x + company;\n                this.x(px);\n            }\n\n            if (str === 'right') {\n                var px = drawRboxObj.width - rboxObj.x2 + company;\n                this.x(px);\n            }\n\n            if (str === 'center') {\n                var pxX = (drawRboxObj.width - rboxObj.width) / 2 - rboxObj.x;\n                var pxY = (drawRboxObj.height - rboxObj.height) / 2 - rboxObj.y;\n\n                this.x(pxX);\n                this.y(pxY);\n            }\n\n            if (str === 'top') {\n                var px = -rboxObj.y + company;\n                this.y(px);\n            }\n\n            if (str === 'bottom') {\n                var px = drawRboxObj.height - rboxObj.y2 + company;\n                this.y(px);\n            }\n\n            return this;\n        },\n        gResize: function gResize() {\n            var rboxObj = this.rbox();\n            var drawRboxObj = this.doc().rbox();\n            console.log(rboxObj.height, drawRboxObj.height);\n            if (rboxObj.width >= drawRboxObj.width) {\n                var zoom = drawRboxObj.width / rboxObj.width;\n                this.doc().zoom(zoom);\n            }\n\n            if (rboxObj.height >= drawRboxObj.height) {\n                var zoom = drawRboxObj.height / rboxObj.height;\n                // this.doc().zoom(zoom);\n            }\n        },\n        /**\r\n         * 创造一个渐变\r\n         */\n        createLinearGradient: function createLinearGradient(aColor, bColor) {\n            aColor = aColor || '#A5CC82';\n            bColor = bColor || '#00467F';\n\n            var linear = this.gradient('linear', function (stop) {\n                stop.at(0, aColor);\n                stop.at(1, bColor);\n            });\n\n            linear.attr({\n                'x1': '0%',\n                'x2': '0%',\n                'y1': '0%',\n                'y2': '100%'\n            });\n\n            this.rect(20, 150).fill(linear);\n\n            return this;\n        }\n    });\n})();\n\n/***/ }),\n\n/***/ \"FJbZ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"SzyH\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"ae474e28\", content, true, {});\n\n/***/ }),\n\n/***/ \"G8X/\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"Ti6e\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"2b64472f\", content, true, {});\n\n/***/ }),\n\n/***/ \"Jn6l\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * vivus - JavaScript library to make drawing animation on SVG\n * @version v0.4.4\n * @link https://github.com/maxwellito/vivus\n * @license MIT\n */\n\n\n\n(function () {\n\n  'use strict';\n\n/**\n * Pathformer\n * Beta version\n *\n * Take any SVG version 1.1 and transform\n * child elements to 'path' elements\n *\n * This code is purely forked from\n * https://github.com/Waest/SVGPathConverter\n */\n\n/**\n * Class constructor\n *\n * @param {DOM|String} element Dom element of the SVG or id of it\n */\nfunction Pathformer(element) {\n  // Test params\n  if (typeof element === 'undefined') {\n    throw new Error('Pathformer [constructor]: \"element\" parameter is required');\n  }\n\n  // Set the element\n  if (element.constructor === String) {\n    element = document.getElementById(element);\n    if (!element) {\n      throw new Error('Pathformer [constructor]: \"element\" parameter is not related to an existing ID');\n    }\n  }\n  if (element instanceof window.SVGElement || \n      element instanceof window.SVGGElement ||\n      /^svg$/i.test(element.nodeName)) {\n    this.el = element;\n  } else {\n    throw new Error('Pathformer [constructor]: \"element\" parameter must be a string or a SVGelement');\n  }\n\n  // Start\n  this.scan(element);\n}\n\n/**\n * List of tags which can be transformed\n * to path elements\n *\n * @type {Array}\n */\nPathformer.prototype.TYPES = ['line', 'ellipse', 'circle', 'polygon', 'polyline', 'rect'];\n\n/**\n * List of attribute names which contain\n * data. This array list them to check if\n * they contain bad values, like percentage.\n *\n * @type {Array}\n */\nPathformer.prototype.ATTR_WATCH = ['cx', 'cy', 'points', 'r', 'rx', 'ry', 'x', 'x1', 'x2', 'y', 'y1', 'y2'];\n\n/**\n * Finds the elements compatible for transform\n * and apply the liked method\n *\n * @param  {object} options Object from the constructor\n */\nPathformer.prototype.scan = function (svg) {\n  var fn, element, pathData, pathDom,\n      elements = svg.querySelectorAll(this.TYPES.join(','));\n\n  for (var i = 0; i < elements.length; i++) {\n    element = elements[i];\n    fn = this[element.tagName.toLowerCase() + 'ToPath'];\n    pathData = fn(this.parseAttr(element.attributes));\n    pathDom = this.pathMaker(element, pathData);\n    element.parentNode.replaceChild(pathDom, element);\n  }\n};\n\n\n/**\n * Read `line` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element Line element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.lineToPath = function (element) {\n  var newElement = {},\n      x1 = element.x1 || 0,\n      y1 = element.y1 || 0,\n      x2 = element.x2 || 0,\n      y2 = element.y2 || 0;\n\n  newElement.d = 'M' + x1 + ',' + y1 + 'L' + x2 + ',' + y2;\n  return newElement;\n};\n\n/**\n * Read `rect` element to extract and transform\n * data, to make it ready for a `path` object.\n * The radius-border is not taken in charge yet.\n * (your help is more than welcomed)\n *\n * @param  {DOMelement} element Rect element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.rectToPath = function (element) {\n  var newElement = {},\n      x      = parseFloat(element.x)      || 0,\n      y      = parseFloat(element.y)      || 0,\n      width  = parseFloat(element.width)  || 0,\n      height = parseFloat(element.height) || 0;\n\n  if (element.rx || element.ry) {\n    var rx = parseInt(element.rx, 10) || -1,\n        ry = parseInt(element.ry, 10) || -1;\n    rx = Math.min(Math.max(rx < 0 ? ry : rx, 0), width/2);\n    ry = Math.min(Math.max(ry < 0 ? rx : ry, 0), height/2);\n\n    newElement.d = 'M ' + (x + rx) + ',' + y + ' ' +\n                   'L ' + (x + width - rx) + ',' + y + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + (x + width) + ',' + (y + ry) + ' ' +\n                   'L ' + (x + width) + ',' + (y + height - ry) + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + (x + width - rx) + ',' + (y + height) + ' ' +\n                   'L ' + (x + rx) + ',' + (y + height) + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + x + ',' + (y + height - ry) + ' ' +\n                   'L ' + x + ',' + (y + ry) + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + (x + rx) + ',' + y;\n  }\n  else {\n    newElement.d = 'M' + x + ' ' + y + ' ' +\n                   'L' + (x + width) + ' ' + y + ' ' +\n                   'L' + (x + width) + ' ' + (y + height) + ' ' +\n                   'L' + x + ' ' + (y + height) + ' Z';\n  }\n  return newElement;\n};\n\n/**\n * Read `polyline` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element Polyline element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.polylineToPath = function (element) {\n  var newElement = {},\n      points = element.points.trim().split(' '),\n      i, path;\n\n  // Reformatting if points are defined without commas\n  if (element.points.indexOf(',') === -1) {\n    var formattedPoints = [];\n    for (i = 0; i < points.length; i+=2) {\n      formattedPoints.push(points[i] + ',' + points[i+1]);\n    }\n    points = formattedPoints;\n  }\n\n  // Generate the path.d value\n  path = 'M' + points[0];\n  for(i = 1; i < points.length; i++) {\n    if (points[i].indexOf(',') !== -1) {\n      path += 'L' + points[i];\n    }\n  }\n  newElement.d = path;\n  return newElement;\n};\n\n/**\n * Read `polygon` element to extract and transform\n * data, to make it ready for a `path` object.\n * This method rely on polylineToPath, because the\n * logic is similar. The path created is just closed,\n * so it needs an 'Z' at the end.\n *\n * @param  {DOMelement} element Polygon element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.polygonToPath = function (element) {\n  var newElement = Pathformer.prototype.polylineToPath(element);\n\n  newElement.d += 'Z';\n  return newElement;\n};\n\n/**\n * Read `ellipse` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element ellipse element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.ellipseToPath = function (element) {\n  var newElement = {},\n      rx = parseFloat(element.rx) || 0,\n      ry = parseFloat(element.ry) || 0,\n      cx = parseFloat(element.cx) || 0,\n      cy = parseFloat(element.cy) || 0,\n      startX = cx - rx,\n      startY = cy,\n      endX = parseFloat(cx) + parseFloat(rx),\n      endY = cy;\n\n  newElement.d = 'M' + startX + ',' + startY +\n                 'A' + rx + ',' + ry + ' 0,1,1 ' + endX + ',' + endY +\n                 'A' + rx + ',' + ry + ' 0,1,1 ' + startX + ',' + endY;\n  return newElement;\n};\n\n/**\n * Read `circle` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element Circle element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.circleToPath = function (element) {\n  var newElement = {},\n      r  = parseFloat(element.r)  || 0,\n      cx = parseFloat(element.cx) || 0,\n      cy = parseFloat(element.cy) || 0,\n      startX = cx - r,\n      startY = cy,\n      endX = parseFloat(cx) + parseFloat(r),\n      endY = cy;\n      \n  newElement.d =  'M' + startX + ',' + startY +\n                  'A' + r + ',' + r + ' 0,1,1 ' + endX + ',' + endY +\n                  'A' + r + ',' + r + ' 0,1,1 ' + startX + ',' + endY;\n  return newElement;\n};\n\n/**\n * Create `path` elements form original element\n * and prepared objects\n *\n * @param  {DOMelement} element  Original element to transform\n * @param  {object} pathData     Path data (from `toPath` methods)\n * @return {DOMelement}          Path element\n */\nPathformer.prototype.pathMaker = function (element, pathData) {\n  var i, attr, pathTag = document.createElementNS('http://www.w3.org/2000/svg','path');\n  for(i = 0; i < element.attributes.length; i++) {\n    attr = element.attributes[i];\n    if (this.ATTR_WATCH.indexOf(attr.name) === -1) {\n      pathTag.setAttribute(attr.name, attr.value);\n    }\n  }\n  for(i in pathData) {\n    pathTag.setAttribute(i, pathData[i]);\n  }\n  return pathTag;\n};\n\n/**\n * Parse attributes of a DOM element to\n * get an object of attribute => value\n *\n * @param  {NamedNodeMap} attributes Attributes object from DOM element to parse\n * @return {object}                  Object of attributes\n */\nPathformer.prototype.parseAttr = function (element) {\n  var attr, output = {};\n  for (var i = 0; i < element.length; i++) {\n    attr = element[i];\n    // Check if no data attribute contains '%', or the transformation is impossible\n    if (this.ATTR_WATCH.indexOf(attr.name) !== -1 && attr.value.indexOf('%') !== -1) {\n      throw new Error('Pathformer [parseAttr]: a SVG shape got values in percentage. This cannot be transformed into \\'path\\' tags. Please use \\'viewBox\\'.');\n    }\n    output[attr.name] = attr.value;\n  }\n  return output;\n};\n\n  'use strict';\n\nvar setupEnv, requestAnimFrame, cancelAnimFrame, parsePositiveInt;\n\n/**\n * Vivus\n * Beta version\n *\n * Take any SVG and make the animation\n * to give give the impression of live drawing\n *\n * This in more than just inspired from codrops\n * At that point, it's a pure fork.\n */\n\n/**\n * Class constructor\n * option structure\n *   type: 'delayed'|'sync'|'oneByOne'|'script' (to know if the items must be drawn synchronously or not, default: delayed)\n *   duration: <int> (in frames)\n *   start: 'inViewport'|'manual'|'autostart' (start automatically the animation, default: inViewport)\n *   delay: <int> (delay between the drawing of first and last path)\n *   dashGap <integer> whitespace extra margin between dashes\n *   pathTimingFunction <function> timing animation function for each path element of the SVG\n *   animTimingFunction <function> timing animation function for the complete SVG\n *   forceRender <boolean> force the browser to re-render all updated path items\n *   selfDestroy <boolean> removes all extra styling on the SVG, and leaves it as original\n *\n * The attribute 'type' is by default on 'delayed'.\n *  - 'delayed'\n *    all paths are draw at the same time but with a\n *    little delay between them before start\n *  - 'sync'\n *    all path are start and finish at the same time\n *  - 'oneByOne'\n *    only one path is draw at the time\n *    the end of the first one will trigger the draw\n *    of the next one\n *\n * All these values can be overwritten individually\n * for each path item in the SVG\n * The value of frames will always take the advantage of\n * the duration value.\n * If you fail somewhere, an error will be thrown.\n * Good luck.\n *\n * @constructor\n * @this {Vivus}\n * @param {DOM|String}   element  Dom element of the SVG or id of it\n * @param {Object}       options  Options about the animation\n * @param {Function}     callback Callback for the end of the animation\n */\nfunction Vivus (element, options, callback) {\n\n  setupEnv();\n\n  // Setup\n  this.isReady = false;\n  this.setElement(element, options);\n  this.setOptions(options);\n  this.setCallback(callback);\n\n  if (this.isReady) {\n    this.init();\n  }\n}\n\n/**\n * Timing functions\n **************************************\n *\n * Default functions to help developers.\n * It always take a number as parameter (between 0 to 1) then\n * return a number (between 0 and 1)\n */\nVivus.LINEAR          = function (x) {return x;};\nVivus.EASE            = function (x) {return -Math.cos(x * Math.PI) / 2 + 0.5;};\nVivus.EASE_OUT        = function (x) {return 1 - Math.pow(1-x, 3);};\nVivus.EASE_IN         = function (x) {return Math.pow(x, 3);};\nVivus.EASE_OUT_BOUNCE = function (x) {\n  var base = -Math.cos(x * (0.5 * Math.PI)) + 1,\n    rate = Math.pow(base,1.5),\n    rateR = Math.pow(1 - x, 2),\n    progress = -Math.abs(Math.cos(rate * (2.5 * Math.PI) )) + 1;\n  return (1- rateR) + (progress * rateR);\n};\n\n\n/**\n * Setters\n **************************************\n */\n\n/**\n * Check and set the element in the instance\n * The method will not return anything, but will throw an\n * error if the parameter is invalid\n *\n * @param {DOM|String}   element  SVG Dom element or id of it\n */\nVivus.prototype.setElement = function (element, options) {\n  var onLoad, self;\n\n  // Basic check\n  if (typeof element === 'undefined') {\n    throw new Error('Vivus [constructor]: \"element\" parameter is required');\n  }\n\n  // Set the element\n  if (element.constructor === String) {\n    element = document.getElementById(element);\n    if (!element) {\n      throw new Error('Vivus [constructor]: \"element\" parameter is not related to an existing ID');\n    }\n  }\n  this.parentEl = element;\n\n  // Load the SVG with XMLHttpRequest and extract the SVG\n  if (options && options.file) {\n    var self = this;\n    onLoad = function (e) {\n      var domSandbox = document.createElement('div');\n      domSandbox.innerHTML = this.responseText;\n\n      var svgTag = domSandbox.querySelector('svg');\n      if (!svgTag) {\n        throw new Error('Vivus [load]: Cannot find the SVG in the loaded file : ' + options.file);\n      }\n\n      self.el = svgTag\n      self.el.setAttribute('width', '100%');\n      self.el.setAttribute('height', '100%');\n      self.parentEl.appendChild(self.el)\n      self.isReady = true;\n      self.init();\n      self = null;\n    }\n    \n    var oReq = new window.XMLHttpRequest();\n    oReq.addEventListener('load', onLoad);\n    oReq.open('GET', options.file);\n    oReq.send();\n    return;\n  }\n\n  switch (element.constructor) {\n  case window.SVGSVGElement:\n  case window.SVGElement:\n  case window.SVGGElement:\n    this.el = element;\n    this.isReady = true;\n    break;\n\n  case window.HTMLObjectElement:\n    self = this;\n    onLoad = function (e) {\n      if (self.isReady) {\n        return;\n      }\n      self.el = element.contentDocument && element.contentDocument.querySelector('svg');\n      if (!self.el && e) {\n        throw new Error('Vivus [constructor]: object loaded does not contain any SVG');\n      }\n      else if (self.el) {\n        if (element.getAttribute('built-by-vivus')) {\n          self.parentEl.insertBefore(self.el, element);\n          self.parentEl.removeChild(element);\n          self.el.setAttribute('width', '100%');\n          self.el.setAttribute('height', '100%');\n        }\n        self.isReady = true;\n        self.init();\n        self = null;\n      }\n    };\n\n    if (!onLoad()) {\n      element.addEventListener('load', onLoad);\n    }\n    break;\n\n  default:\n    throw new Error('Vivus [constructor]: \"element\" parameter is not valid (or miss the \"file\" attribute)');\n  }\n};\n\n/**\n * Set up user option to the instance\n * The method will not return anything, but will throw an\n * error if the parameter is invalid\n *\n * @param  {object} options Object from the constructor\n */\nVivus.prototype.setOptions = function (options) {\n  var allowedTypes = ['delayed', 'sync', 'async', 'nsync', 'oneByOne', 'scenario', 'scenario-sync'];\n  var allowedStarts =  ['inViewport', 'manual', 'autostart'];\n\n  // Basic check\n  if (options !== undefined && options.constructor !== Object) {\n    throw new Error('Vivus [constructor]: \"options\" parameter must be an object');\n  }\n  else {\n    options = options || {};\n  }\n\n  // Set the animation type\n  if (options.type && allowedTypes.indexOf(options.type) === -1) {\n    throw new Error('Vivus [constructor]: ' + options.type + ' is not an existing animation `type`');\n  }\n  else {\n    this.type = options.type || allowedTypes[0];\n  }\n\n  // Set the start type\n  if (options.start && allowedStarts.indexOf(options.start) === -1) {\n    throw new Error('Vivus [constructor]: ' + options.start + ' is not an existing `start` option');\n  }\n  else {\n    this.start = options.start || allowedStarts[0];\n  }\n\n  this.isIE         = (window.navigator.userAgent.indexOf('MSIE') !== -1 || window.navigator.userAgent.indexOf('Trident/') !== -1 || window.navigator.userAgent.indexOf('Edge/') !== -1 );\n  this.duration     = parsePositiveInt(options.duration, 120);\n  this.delay        = parsePositiveInt(options.delay, null);\n  this.dashGap      = parsePositiveInt(options.dashGap, 1);\n  this.forceRender  = options.hasOwnProperty('forceRender') ? !!options.forceRender : this.isIE;\n  this.reverseStack = !!options.reverseStack;\n  this.selfDestroy  = !!options.selfDestroy;\n  this.onReady      = options.onReady;\n  this.map          = [];\n  this.frameLength  = this.currentFrame = this.delayUnit = this.speed = this.handle = null;\n\n  this.ignoreInvisible = options.hasOwnProperty('ignoreInvisible') ? !!options.ignoreInvisible : false;\n\n  this.animTimingFunction = options.animTimingFunction || Vivus.LINEAR;\n  this.pathTimingFunction = options.pathTimingFunction || Vivus.LINEAR;\n\n  if (this.delay >= this.duration) {\n    throw new Error('Vivus [constructor]: delay must be shorter than duration');\n  }\n};\n\n/**\n * Set up callback to the instance\n * The method will not return enything, but will throw an\n * error if the parameter is invalid\n *\n * @param  {Function} callback Callback for the animation end\n */\nVivus.prototype.setCallback = function (callback) {\n  // Basic check\n  if (!!callback && callback.constructor !== Function) {\n    throw new Error('Vivus [constructor]: \"callback\" parameter must be a function');\n  }\n  this.callback = callback || function () {};\n};\n\n\n/**\n * Core\n **************************************\n */\n\n/**\n * Map the svg, path by path.\n * The method return nothing, it just fill the\n * `map` array. Each item in this array represent\n * a path element from the SVG, with informations for\n * the animation.\n *\n * ```\n * [\n *   {\n *     el: <DOMobj> the path element\n *     length: <number> length of the path line\n *     startAt: <number> time start of the path animation (in frames)\n *     duration: <number> path animation duration (in frames)\n *   },\n *   ...\n * ]\n * ```\n *\n */\nVivus.prototype.mapping = function () {\n  var i, paths, path, pAttrs, pathObj, totalLength, lengthMeter, timePoint;\n  timePoint = totalLength = lengthMeter = 0;\n  paths = this.el.querySelectorAll('path');\n\n  for (i = 0; i < paths.length; i++) {\n    path = paths[i];\n    if (this.isInvisible(path)) {\n      continue;\n    }\n    pathObj = {\n      el: path,\n      length: Math.ceil(path.getTotalLength())\n    };\n    // Test if the path length is correct\n    if (isNaN(pathObj.length)) {\n      if (window.console && console.warn) {\n        console.warn('Vivus [mapping]: cannot retrieve a path element length', path);\n      }\n      continue;\n    }\n    this.map.push(pathObj);\n    path.style.strokeDasharray  = pathObj.length + ' ' + (pathObj.length + this.dashGap * 2);\n    path.style.strokeDashoffset = pathObj.length + this.dashGap;\n    pathObj.length += this.dashGap;\n    totalLength += pathObj.length;\n\n    this.renderPath(i);\n  }\n\n  totalLength = totalLength === 0 ? 1 : totalLength;\n  this.delay = this.delay === null ? this.duration / 3 : this.delay;\n  this.delayUnit = this.delay / (paths.length > 1 ? paths.length - 1 : 1);\n\n  // Reverse stack if asked\n  if (this.reverseStack) {\n    this.map.reverse();\n  }\n\n  for (i = 0; i < this.map.length; i++) {\n    pathObj = this.map[i];\n\n    switch (this.type) {\n    case 'delayed':\n      pathObj.startAt = this.delayUnit * i;\n      pathObj.duration = this.duration - this.delay;\n      break;\n\n    case 'oneByOne':\n      pathObj.startAt = lengthMeter / totalLength * this.duration;\n      pathObj.duration = pathObj.length / totalLength * this.duration;\n      break;\n\n    case 'sync':\n    case 'async':\n    case 'nsync':\n      pathObj.startAt = 0;\n      pathObj.duration = this.duration;\n      break;\n\n    case 'scenario-sync':\n      path = pathObj.el;\n      pAttrs = this.parseAttr(path);\n      pathObj.startAt = timePoint + (parsePositiveInt(pAttrs['data-delay'], this.delayUnit) || 0);\n      pathObj.duration = parsePositiveInt(pAttrs['data-duration'], this.duration);\n      timePoint = pAttrs['data-async'] !== undefined ? pathObj.startAt : pathObj.startAt + pathObj.duration;\n      this.frameLength = Math.max(this.frameLength, (pathObj.startAt + pathObj.duration));\n      break;\n\n    case 'scenario':\n      path = pathObj.el;\n      pAttrs = this.parseAttr(path);\n      pathObj.startAt = parsePositiveInt(pAttrs['data-start'], this.delayUnit) || 0;\n      pathObj.duration = parsePositiveInt(pAttrs['data-duration'], this.duration);\n      this.frameLength = Math.max(this.frameLength, (pathObj.startAt + pathObj.duration));\n      break;\n    }\n    lengthMeter += pathObj.length;\n    this.frameLength = this.frameLength || this.duration;\n  }\n};\n\n/**\n * Interval method to draw the SVG from current\n * position of the animation. It update the value of\n * `currentFrame` and re-trace the SVG.\n *\n * It use this.handle to store the requestAnimationFrame\n * and clear it one the animation is stopped. So this\n * attribute can be used to know if the animation is\n * playing.\n *\n * Once the animation at the end, this method will\n * trigger the Vivus callback.\n *\n */\nVivus.prototype.drawer = function () {\n  var self = this;\n  this.currentFrame += this.speed;\n\n  if (this.currentFrame <= 0) {\n    this.stop();\n    this.reset();\n  } else if (this.currentFrame >= this.frameLength) {\n    this.stop();\n    this.currentFrame = this.frameLength;\n    this.trace();\n    if (this.selfDestroy) {\n      this.destroy();\n    }\n  } else {\n    this.trace();\n    this.handle = requestAnimFrame(function () {\n      self.drawer();\n    });\n    return;\n  }\n\n  this.callback(this);\n  if (this.instanceCallback) {\n    this.instanceCallback(this);\n    this.instanceCallback = null;\n  }\n};\n\n/**\n * Draw the SVG at the current instant from the\n * `currentFrame` value. Here is where most of the magic is.\n * The trick is to use the `strokeDashoffset` style property.\n *\n * For optimisation reasons, a new property called `progress`\n * is added in each item of `map`. This one contain the current\n * progress of the path element. Only if the new value is different\n * the new value will be applied to the DOM element. This\n * method save a lot of resources to re-render the SVG. And could\n * be improved if the animation couldn't be played forward.\n *\n */\nVivus.prototype.trace = function () {\n  var i, progress, path, currentFrame;\n  currentFrame = this.animTimingFunction(this.currentFrame / this.frameLength) * this.frameLength;\n  for (i = 0; i < this.map.length; i++) {\n    path = this.map[i];\n    progress = (currentFrame - path.startAt) / path.duration;\n    progress = this.pathTimingFunction(Math.max(0, Math.min(1, progress)));\n    if (path.progress !== progress) {\n      path.progress = progress;\n      path.el.style.strokeDashoffset = Math.floor(path.length * (1 - progress));\n      this.renderPath(i);\n    }\n  }\n};\n\n/**\n * Method forcing the browser to re-render a path element\n * from it's index in the map. Depending on the `forceRender`\n * value.\n * The trick is to replace the path element by it's clone.\n * This practice is not recommended because it's asking more\n * ressources, too much DOM manupulation..\n * but it's the only way to let the magic happen on IE.\n * By default, this fallback is only applied on IE.\n *\n * @param  {Number} index Path index\n */\nVivus.prototype.renderPath = function (index) {\n  if (this.forceRender && this.map && this.map[index]) {\n    var pathObj = this.map[index],\n        newPath = pathObj.el.cloneNode(true);\n    pathObj.el.parentNode.replaceChild(newPath, pathObj.el);\n    pathObj.el = newPath;\n  }\n};\n\n/**\n * When the SVG object is loaded and ready,\n * this method will continue the initialisation.\n *\n * This this mainly due to the case of passing an\n * object tag in the constructor. It will wait\n * the end of the loading to initialise.\n *\n */\nVivus.prototype.init = function () {\n  // Set object variables\n  this.frameLength = 0;\n  this.currentFrame = 0;\n  this.map = [];\n\n  // Start\n  new Pathformer(this.el);\n  this.mapping();\n  this.starter();\n\n  if (this.onReady) {\n    this.onReady(this);\n  }\n};\n\n/**\n * Trigger to start of the animation.\n * Depending on the `start` value, a different script\n * will be applied.\n *\n * If the `start` value is not valid, an error will be thrown.\n * Even if technically, this is impossible.\n *\n */\nVivus.prototype.starter = function () {\n  switch (this.start) {\n  case 'manual':\n    return;\n\n  case 'autostart':\n    this.play();\n    break;\n\n  case 'inViewport':\n    var self = this,\n    listener = function () {\n      if (self.isInViewport(self.parentEl, 1)) {\n        self.play();\n        window.removeEventListener('scroll', listener);\n      }\n    };\n    window.addEventListener('scroll', listener);\n    listener();\n    break;\n  }\n};\n\n\n/**\n * Controls\n **************************************\n */\n\n/**\n * Get the current status of the animation between\n * three different states: 'start', 'progress', 'end'.\n * @return {string} Instance status\n */\nVivus.prototype.getStatus = function () {\n  return this.currentFrame === 0 ? 'start' : this.currentFrame === this.frameLength ? 'end' : 'progress';\n};\n\n/**\n * Reset the instance to the initial state : undraw\n * Be careful, it just reset the animation, if you're\n * playing the animation, this won't stop it. But just\n * make it start from start.\n *\n */\nVivus.prototype.reset = function () {\n  return this.setFrameProgress(0);\n};\n\n/**\n * Set the instance to the final state : drawn\n * Be careful, it just set the animation, if you're\n * playing the animation on rewind, this won't stop it.\n * But just make it start from the end.\n *\n */\nVivus.prototype.finish = function () {\n  return this.setFrameProgress(1);\n};\n\n/**\n * Set the level of progress of the drawing.\n *\n * @param {number} progress Level of progress to set\n */\nVivus.prototype.setFrameProgress = function (progress) {\n  progress = Math.min(1, Math.max(0, progress));\n  this.currentFrame = Math.round(this.frameLength * progress);\n  this.trace();\n  return this;\n};\n\n/**\n * Play the animation at the desired speed.\n * Speed must be a valid number (no zero).\n * By default, the speed value is 1.\n * But a negative value is accepted to go forward.\n *\n * And works with float too.\n * But don't forget we are in JavaScript, se be nice\n * with him and give him a 1/2^x value.\n *\n * @param  {number} speed Animation speed [optional]\n */\nVivus.prototype.play = function (speed, callback) {\n  this.instanceCallback = null;\n\n  if (speed && typeof speed === 'function') {\n    this.instanceCallback = speed; // first parameter is actually the callback function\n    speed = null;\n  }\n  else if (speed && typeof speed !== 'number') {\n    throw new Error('Vivus [play]: invalid speed');\n  }\n  // if the first parameter wasn't the callback, check if the seconds was\n  if (callback && typeof(callback) === 'function' && !this.instanceCallback) {\n    this.instanceCallback = callback;\n  }\n\n\n  this.speed = speed || 1;\n  if (!this.handle) {\n    this.drawer();\n  }\n  return this;\n};\n\n/**\n * Stop the current animation, if on progress.\n * Should not trigger any error.\n *\n */\nVivus.prototype.stop = function () {\n  if (this.handle) {\n    cancelAnimFrame(this.handle);\n    this.handle = null;\n  }\n  return this;\n};\n\n/**\n * Destroy the instance.\n * Remove all bad styling attributes on all\n * path tags\n *\n */\nVivus.prototype.destroy = function () {\n  this.stop();\n  var i, path;\n  for (i = 0; i < this.map.length; i++) {\n    path = this.map[i];\n    path.el.style.strokeDashoffset = null;\n    path.el.style.strokeDasharray = null;\n    this.renderPath(i);\n  }\n};\n\n\n/**\n * Utils methods\n * include methods from Codrops\n **************************************\n */\n\n/**\n * Method to best guess if a path should added into\n * the animation or not.\n *\n * 1. Use the `data-vivus-ignore` attribute if set\n * 2. Check if the instance must ignore invisible paths\n * 3. Check if the path is visible\n *\n * For now the visibility checking is unstable.\n * It will be used for a beta phase.\n *\n * Other improvments are planned. Like detecting\n * is the path got a stroke or a valid opacity.\n */\nVivus.prototype.isInvisible = function (el) {\n  var rect,\n    ignoreAttr = el.getAttribute('data-ignore');\n\n  if (ignoreAttr !== null) {\n    return ignoreAttr !== 'false';\n  }\n\n  if (this.ignoreInvisible) {\n    rect = el.getBoundingClientRect();\n    return !rect.width && !rect.height;\n  }\n  else {\n    return false;\n  }\n};\n\n/**\n * Parse attributes of a DOM element to\n * get an object of {attributeName => attributeValue}\n *\n * @param  {object} element DOM element to parse\n * @return {object}         Object of attributes\n */\nVivus.prototype.parseAttr = function (element) {\n  var attr, output = {};\n  if (element && element.attributes) {\n    for (var i = 0; i < element.attributes.length; i++) {\n      attr = element.attributes[i];\n      output[attr.name] = attr.value;\n    }\n  }\n  return output;\n};\n\n/**\n * Reply if an element is in the page viewport\n *\n * @param  {object} el Element to observe\n * @param  {number} h  Percentage of height\n * @return {boolean}\n */\nVivus.prototype.isInViewport = function (el, h) {\n  var scrolled   = this.scrollY(),\n    viewed       = scrolled + this.getViewportH(),\n    elBCR        = el.getBoundingClientRect(),\n    elHeight     = elBCR.height,\n    elTop        = scrolled + elBCR.top,\n    elBottom     = elTop + elHeight;\n\n  // if 0, the element is considered in the viewport as soon as it enters.\n  // if 1, the element is considered in the viewport only when it's fully inside\n  // value in percentage (1 >= h >= 0)\n  h = h || 0;\n\n  return (elTop + elHeight * h) <= viewed && (elBottom) >= scrolled;\n};\n\n\n/**\n * Get the viewport height in pixels\n *\n * @return {integer} Viewport height\n */\nVivus.prototype.getViewportH = function () {\n  var client = this.docElem.clientHeight,\n    inner = window.innerHeight;\n\n  if (client < inner) {\n    return inner;\n  }\n  else {\n    return client;\n  }\n};\n\n/**\n * Get the page Y offset\n *\n * @return {integer} Page Y offset\n */\nVivus.prototype.scrollY = function () {\n  return window.pageYOffset || this.docElem.scrollTop;\n};\n\nsetupEnv = function () {\n\n  if (Vivus.prototype.docElem) {\n    return;\n  }\n\n  /**\n   * Alias for document element\n   *\n   * @type {DOMelement}\n   */\n  Vivus.prototype.docElem = window.document.documentElement;\n\n  /**\n   * Alias for `requestAnimationFrame` or\n   * `setTimeout` function for deprecated browsers.\n   *\n   */\n  requestAnimFrame = (function () {\n    return (\n      window.requestAnimationFrame       ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame    ||\n      window.oRequestAnimationFrame      ||\n      window.msRequestAnimationFrame     ||\n      function(/* function */ callback){\n        return window.setTimeout(callback, 1000 / 60);\n      }\n    );\n  })();\n\n  /**\n   * Alias for `cancelAnimationFrame` or\n   * `cancelTimeout` function for deprecated browsers.\n   *\n   */\n  cancelAnimFrame = (function () {\n    return (\n      window.cancelAnimationFrame       ||\n      window.webkitCancelAnimationFrame ||\n      window.mozCancelAnimationFrame    ||\n      window.oCancelAnimationFrame      ||\n      window.msCancelAnimationFrame     ||\n      function(id){\n        return window.clearTimeout(id);\n      }\n    );\n  })();\n};\n\n/**\n * Parse string to integer.\n * If the number is not positive or null\n * the method will return the default value\n * or 0 if undefined\n *\n * @param {string} value String to parse\n * @param {*} defaultValue Value to return if the result parsed is invalid\n * @return {number}\n *\n */\nparsePositiveInt = function (value, defaultValue) {\n  var output = parseInt(value, 10);\n  return (output >= 0) ? output : defaultValue;\n};\n\n\n  if (true) {\n    // AMD. Register as an anonymous module.\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return Vivus;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = Vivus;\n  } else {\n    // Browser globals\n    window.Vivus = Vivus;\n  }\n\n}());\n\n\n/***/ }),\n\n/***/ \"SN53\":\n/***/ (function(module, exports) {\n\nmodule.exports = {\n    //女性\n    woman: {\n        //正面\n        front: {\n            head: [//头部\n            {\n                d: 'M97.3246,57.208 C96.4416,60.84 94.7736,63.21 91.6956,63.678 C91.4176,64.573 91.1166,65.449 90.7966,66.313 C87.4586,75.28 81.8466,82.621 76.5386,87.019 C73.1426,89.835 69.8676,91.44 67.3976,91.496 C67.3506,91.5 67.3036,91.5 67.2616,91.5 C67.0536,91.5 66.8416,91.49 66.6266,91.47 C66.1336,91.424 65.6166,91.327 65.0836,91.176 C64.9856,91.15 64.8836,91.123 64.7836,91.09 C64.6576,91.053 64.5336,91.012 64.4036,90.966 C64.2906,90.93 64.1786,90.89 64.0656,90.845 C64.0276,90.832 63.9876,90.816 63.9446,90.799 C63.8386,90.759 63.7336,90.72 63.6276,90.671 C63.5046,90.622 63.3786,90.568 63.2556,90.515 C63.1846,90.482 63.1066,90.448 63.0316,90.412 C62.9256,90.365 62.8196,90.315 62.7116,90.262 C62.0666,89.945 61.4006,89.574 60.7226,89.144 C60.4536,88.977 60.1866,88.797 59.9166,88.609 C59.5096,88.333 59.1026,88.036 58.6886,87.715 C58.5496,87.608 58.4136,87.501 58.2756,87.392 C58.1386,87.285 58.0006,87.175 57.8666,87.062 C57.7606,86.974 57.6516,86.884 57.5456,86.791 C57.5146,86.767 57.4816,86.741 57.4506,86.713 L57.4486,86.711 C57.0346,86.36 56.6186,85.991 56.2006,85.599 C56.0736,85.479 55.9436,85.359 55.8156,85.235 C55.5046,84.938 55.1896,84.628 54.8826,84.31 C54.7656,84.197 54.6536,84.081 54.5406,83.96 C54.4026,83.817 54.2666,83.669 54.1286,83.523 C53.8536,83.229 53.5816,82.929 53.3076,82.62 C53.0426,82.318 52.7816,82.016 52.5176,81.7 C52.3746,81.527 52.2336,81.354 52.0936,81.181 C51.6906,80.686 51.2936,80.179 50.9036,79.654 C50.3816,78.958 49.8656,78.232 49.3656,77.486 C49.2496,77.315 49.1346,77.137 49.0226,76.965 C47.6266,74.832 46.3336,72.511 45.2016,70.035 C45.0196,69.635 44.8376,69.228 44.6656,68.82 C44.3786,68.15 44.1036,67.465 43.8426,66.771 C43.7536,66.538 43.6666,66.308 43.5846,66.074 C43.5116,65.871 43.4386,65.67 43.3706,65.466 C43.3066,65.289 43.2476,65.11 43.1886,64.933 C43.1246,64.748 43.0656,64.562 43.0046,64.375 C42.9236,64.125 42.8436,63.871 42.7676,63.616 C39.8996,63.04 38.3156,60.707 37.4696,57.208 C36.2596,52.241 37.4076,49.598 40.7076,50.107 L40.7076,50.037 C40.7076,47.462 40.8586,45.079 41.1466,42.881 C43.0356,28.48 50.8166,21.949 60.8586,20.15 C61.5326,20.026 62.2146,19.927 62.9086,19.846 C64.3226,19.686 65.7766,19.61 67.2616,19.61 L67.3976,19.61 C81.1056,19.653 92.3626,26.311 93.6836,46.035 C93.7696,47.312 93.8116,48.647 93.8116,50.037 L93.8116,50.157 C97.3176,49.462 98.5686,52.108 97.3246,57.208',\n                attr: {\n                    fill: '#FEDFC6'\n                }\n            }, {\n                d: 'M91.9081,23.4575 L91.9081,23.4535 C96.2811,4.4815 75.0371,-0.0775 65.7921,0.3245 C54.4371,0.8225 37.6021,8.8925 42.4141,24.5775 L42.4141,24.5795 C37.2761,30.5615 34.1641,38.3775 34.1641,46.9385 C34.1641,56.4045 37.9691,62.4205 44.1151,66.0625 C43.8271,65.2575 43.5561,64.4435 43.3061,63.6165 C40.4711,63.0415 38.9041,60.7195 38.0671,57.2375 C36.8691,52.2945 38.0071,49.6635 41.2701,50.1685 L41.2701,50.0995 L41.2701,50.0975 L41.2711,50.0985 C41.2711,50.0985 41.8551,41.9225 48.3001,37.2025 C71.0441,20.9635 73.9211,54.3195 85.4841,54.3195 C89.0061,54.3195 92.3201,53.0525 93.8081,50.2135 C97.2611,49.5375 98.4901,52.1705 97.2611,57.2375 C96.3891,60.8535 94.7401,63.2115 91.6961,63.6775 C91.4201,64.5675 91.1231,65.4405 90.8061,66.3005 C97.1871,62.6865 101.1641,56.6135 101.1641,46.9385 C101.1641,37.8295 97.6441,29.5595 91.9081,23.4575',\n                attr: {\n                    fill: '#9C7757'\n                }\n            }, {\n                d: 'M51.9999,33.5347 C51.9999,33.5347 52.1399,33.3567 52.4269,33.0407 C52.7159,32.7287 53.1389,32.2667 53.7219,31.7257 C54.3049,31.1807 55.0299,30.5367 55.9199,29.8637 C56.8099,29.1917 57.8559,28.4787 59.0749,27.8217 C60.2909,27.1617 61.6709,26.5257 63.2299,26.1047 C64.7789,25.6747 66.5009,25.4117 68.2929,25.5277 C70.0789,25.6357 71.9259,26.0787 73.6199,26.9077 L74.2529,27.2267 L74.5699,27.3887 C74.6719,27.4477 74.7699,27.5137 74.8699,27.5767 C75.2669,27.8327 75.6659,28.0887 76.0639,28.3477 C76.4359,28.6387 76.8069,28.9317 77.1779,29.2257 L77.4579,29.4467 C77.5469,29.5247 77.6289,29.6077 77.7169,29.6887 L78.2289,30.1767 C78.9339,30.8097 79.5129,31.5467 80.1309,32.2457 C80.4369,32.5997 80.6909,32.9877 80.9699,33.3567 C81.2339,33.7347 81.5289,34.0927 81.7669,34.4827 C82.0079,34.8697 82.2479,35.2557 82.4879,35.6387 C82.7249,36.0247 82.9649,36.4047 83.1619,36.8047 C83.3689,37.1987 83.5749,37.5887 83.7799,37.9777 C83.9829,38.3657 84.1939,38.7497 84.3639,39.1457 C84.5409,39.5367 84.7179,39.9277 84.8919,40.3107 C85.0639,40.6887 85.2479,41.0937 85.3959,41.4417 C85.5579,41.8167 85.7179,42.1867 85.8759,42.5527 C86.0429,42.8957 86.2069,43.2367 86.3689,43.5727 C86.5529,43.8987 86.7189,44.2307 86.9069,44.5407 C87.1009,44.8427 87.2769,45.1567 87.4809,45.4307 C87.8649,46.0127 88.3079,46.5007 88.7699,46.8927 C89.2339,47.2847 89.7439,47.5347 90.2479,47.5947 C90.7539,47.6617 91.2579,47.5287 91.6979,47.2967 C92.5839,46.8117 93.2209,46.0747 93.6909,45.4657 C94.1589,44.8427 94.4849,44.3127 94.6919,43.9447 C94.8999,43.5757 94.9999,43.3717 94.9999,43.3717 C94.9999,43.3717 94.9399,43.5917 94.7899,43.9907 C94.6349,44.3877 94.4039,44.9727 94.0019,45.6727 C93.5939,46.3597 93.0599,47.2227 92.0679,47.9127 C91.5749,48.2467 90.9229,48.5137 90.1919,48.4997 C89.4589,48.4927 88.7369,48.1837 88.1299,47.7587 C86.8989,46.8927 85.9739,45.6247 85.1489,44.2547 C84.9509,43.9007 84.7509,43.5437 84.5479,43.1807 C84.3689,42.8257 84.1849,42.4647 84.0019,42.0997 C83.6159,41.3537 83.2679,40.6387 82.8899,39.8857 C82.7129,39.5077 82.4969,39.1487 82.2879,38.7827 C82.0769,38.4157 81.8669,38.0477 81.6529,37.6787 C81.4509,37.3007 81.2079,36.9487 80.9709,36.5907 C80.7349,36.2307 80.5009,35.8677 80.2639,35.5047 C80.0319,35.1387 79.7499,34.8097 79.4949,34.4607 L79.1009,33.9397 C78.9709,33.7667 78.8479,33.5847 78.6979,33.4287 C78.1209,32.7847 77.5749,32.0997 76.9309,31.5277 L76.4689,31.0737 C76.3909,31.0007 76.3159,30.9207 76.2359,30.8507 L75.9859,30.6497 C75.6529,30.3797 75.3199,30.1087 74.9889,29.8417 C74.6339,29.6067 74.2819,29.3737 73.9289,29.1407 C73.8409,29.0827 73.7549,29.0227 73.6639,28.9687 L73.3859,28.8237 L72.8289,28.5347 C72.6429,28.4447 72.4659,28.3287 72.2709,28.2607 L71.6939,28.0327 L71.1229,27.7997 C70.9269,27.7427 70.7299,27.6867 70.5359,27.6307 C70.3389,27.5737 70.1459,27.5167 69.9509,27.4597 C69.7549,27.4037 69.5529,27.3837 69.3549,27.3437 C68.9589,27.2747 68.5679,27.1857 68.1699,27.1717 C66.5859,27.0267 65.0209,27.1477 63.5639,27.4597 C62.1059,27.7727 60.7579,28.2577 59.5439,28.7847 C58.3349,29.3257 57.2539,29.8987 56.3179,30.4547 C55.3909,31.0237 54.5959,31.5517 53.9569,32.0117 C52.6819,32.9337 51.9999,33.5347 51.9999,33.5347',\n                attr: {\n                    fill: '#8D6D55'\n                }\n            }, {\n                d: 'M64.9999,26.937 C64.9999,26.937 65.1449,26.871 65.4249,26.765 C65.7059,26.662 66.1199,26.51 66.6629,26.355 C67.2009,26.2 67.8629,26.02 68.6409,25.88 C69.4149,25.735 70.3009,25.603 71.2789,25.541 C72.2569,25.48 73.3289,25.477 74.4629,25.597 C75.5949,25.719 76.7889,25.958 77.9789,26.372 C79.1669,26.784 80.3489,27.377 81.4199,28.158 C82.4969,28.932 83.4469,29.895 84.2409,30.953 C85.0389,32.014 85.6299,33.187 86.1099,34.362 C86.2209,34.659 86.3319,34.955 86.4409,35.248 C86.5379,35.529 86.6359,35.809 86.7309,36.086 C86.8249,36.369 86.9219,36.647 87.0249,36.903 C87.1299,37.164 87.2189,37.428 87.3259,37.685 C87.4349,37.941 87.5439,38.193 87.6519,38.445 C87.7699,38.688 87.8869,38.929 88.0019,39.167 C88.1229,39.401 88.2559,39.618 88.3789,39.842 C88.5199,40.045 88.6519,40.258 88.7949,40.443 C89.0799,40.821 89.4079,41.113 89.7189,41.268 C90.0309,41.418 90.3299,41.415 90.6659,41.268 C90.9999,41.123 91.3099,40.852 91.5839,40.571 C91.8579,40.287 92.0899,39.974 92.3009,39.676 C92.7089,39.068 93.0279,38.498 93.2739,38.021 C93.5159,37.542 93.7029,37.16 93.8199,36.894 C93.9379,36.629 93.9999,36.487 93.9999,36.487 C93.9999,36.487 93.9789,36.641 93.9199,36.925 C93.8579,37.208 93.7729,37.625 93.6149,38.146 C93.4569,38.667 93.2509,39.301 92.9129,40.001 C92.7389,40.351 92.5449,40.723 92.2789,41.096 C92.0089,41.465 91.6819,41.852 91.1809,42.16 C91.0509,42.233 90.9259,42.313 90.7679,42.358 L90.5359,42.434 C90.4579,42.458 90.3709,42.461 90.2859,42.475 C90.2009,42.484 90.1149,42.494 90.0279,42.5 L89.7699,42.477 C89.6849,42.466 89.5919,42.463 89.5119,42.439 L89.2689,42.364 C88.6279,42.136 88.1389,41.721 87.7339,41.288 C87.5279,41.07 87.3539,40.835 87.1669,40.6 C87.0059,40.358 86.8329,40.115 86.6769,39.864 C86.5299,39.612 86.3769,39.356 86.2349,39.094 C86.1019,38.832 85.9679,38.564 85.8329,38.297 C85.5839,37.758 85.3219,37.18 85.1169,36.635 C85.0059,36.356 84.8959,36.075 84.7849,35.793 C84.6769,35.526 84.5679,35.261 84.4589,34.993 C83.9869,33.941 83.4579,32.894 82.7509,31.973 C82.0609,31.039 81.2439,30.206 80.3349,29.505 C79.4249,28.808 78.4219,28.247 77.3869,27.821 C75.3129,26.966 73.1479,26.647 71.2869,26.557 C69.4199,26.463 67.8379,26.579 66.7349,26.696 C66.1839,26.762 65.7479,26.813 65.4529,26.863 C65.1579,26.912 64.9999,26.937 64.9999,26.937',\n                attr: {\n                    fill: '#8D6D55'\n                }\n            }, {\n                d: 'M42.663,63.7183 C42.094,63.5673 41.566,63.3583 41.1,63.0633 C41.569,63.3073 42.069,63.5073 42.632,63.6203 C42.642,63.6533 42.653,63.6853 42.663,63.7183',\n                attr: {\n                    fill: '#F49F64'\n                }\n            }, {\n                d: 'M91.5009,63.8555 C91.5199,63.7965 91.5419,63.7405 91.5599,63.6815 C92.9229,63.4745 93.9969,62.8755 94.8609,61.9775 C93.9989,62.9675 92.9009,63.6175 91.5009,63.8555',\n                attr: {\n                    fill: '#F49F64'\n                }\n            }],\n            neck: [//颈部\n            {\n                d: 'M76.5385,4.0186 C73.1425,6.8356 69.8675,8.4396 67.3975,8.4966 C67.3505,8.4996 67.3045,8.4996 67.2615,8.4996 C67.0535,8.4996 66.8415,8.4896 66.6265,8.4706 C66.1335,8.4246 65.6175,8.3266 65.0835,8.1766 C64.9855,8.1506 64.8835,8.1226 64.7835,8.0906 C64.6585,8.0526 64.5345,8.0126 64.4035,7.9666 C64.2905,7.9296 64.1785,7.8896 64.0655,7.8456 C64.0275,7.8316 63.9875,7.8166 63.9445,7.7996 C63.8385,7.7586 63.7335,7.7196 63.6275,7.6716 C63.5045,7.6226 63.3785,7.5686 63.2555,7.5156 C63.1845,7.4826 63.1065,7.4486 63.0315,7.4126 C62.9255,7.3646 62.8195,7.3156 62.7115,7.2616 C62.0665,6.9446 61.4005,6.5746 60.7235,6.1436 C60.4545,5.9766 60.1865,5.7966 59.9165,5.6086 C59.5095,5.3326 59.1025,5.0366 58.6885,4.7156 C58.5495,4.6086 58.4135,4.5016 58.2755,4.3916 C58.1385,4.2846 58.0005,4.1756 57.8665,4.0616 C57.7605,3.9746 57.6515,3.8846 57.5455,3.7906 C57.5145,3.7666 57.4815,3.7406 57.4515,3.7136 L57.4485,3.7106 C57.0345,3.3596 56.6185,2.9906 56.2015,2.5996 C56.0735,2.4786 55.9435,2.3586 55.8155,2.2356 C55.7175,2.1416 55.6195,2.0386 55.5195,1.9426 C56.2455,4.1676 56.8515,7.0516 56.9995,9.4996 C61.9435,12.5016 65.7565,12.4996 67.4915,12.4996 C69.2435,12.4996 73.0565,12.5016 77.9995,9.4996 C78.1725,6.6576 78.9595,3.2266 79.8375,0.9276 C78.7395,2.0736 77.6325,3.1116 76.5385,4.0186',\n                attr: {\n                    fill: '#FFD8B9',\n                    transform: \"translate(0.000000, 83.000000)\"\n                }\n            }, {\n                d: 'M54.0741,19.8892 L81.1211,19.8892 C80.8961,19.4822 80.6981,19.0272 80.5001,18.5002 C79.0001,14.5002 78.0001,10.5002 78.0001,9.5002 C73.0561,12.5022 69.2431,12.4992 67.4911,12.5002 C65.7571,12.4992 61.9441,12.5022 57.0001,9.5002 C57.2741,14.4402 56.2851,17.8862 54.0741,19.8892',\n                attr: {\n                    fill: '#FEDFC6',\n                    transform: \"translate(0.000000, 83.000000)\"\n                }\n            }],\n            abdomen: [//腹部(包括胸部)\n            {\n                d: 'M81.1215,19.8882 L81.1215,19.8892 L54.0745,19.8892 C53.6005,20.3192 53.0895,20.7052 52.4995,21.0002 C49.8515,22.3242 44.1185,24.3492 38.5675,26.4072 L42.4995,50.0002 C46.8335,53.3332 50.6665,56.6662 53.9995,60.0002 C57.3335,63.3332 62.1665,68.6662 68.4995,76.0002 C72.8335,70.0002 76.6665,65.1662 79.9995,61.5002 C83.3335,57.8332 87.6665,53.5002 92.9995,48.5002 L95.4945,26.0552 C85.0475,22.9832 82.5395,22.4492 81.1215,19.8882',\n                attr: {\n                    fill: '#FEDFC6',\n                    transform: \"translate(0.000000, 83.000000)\"\n                }\n            }, {\n                d: 'M36.9999,167.5 C51.9999,166.5 62.1669,166 67.4999,166 C72.8329,166 83.1669,166.5 98.4999,167.5 C101.8329,158.833 102.4999,151.833 100.4999,146.5 C97.4999,138.5 94.4999,134 94.4999,132.5 C94.4999,131.5 95.3329,123.833 96.9999,109.5 L95.4999,109 L92.9999,131.5 C87.6669,136.5 83.3329,140.833 79.9999,144.5 C76.6669,148.167 72.8329,153 68.4999,159 C62.1669,151.667 57.3329,146.333 53.9999,143 C50.6669,139.667 46.8329,136.333 42.4999,133 L38.4999,109 L37.4999,109.5 C39.4999,124.833 40.3329,132.833 39.9999,133.5 C39.4999,134.5 32.4999,146 33.4999,154.5 C34.1669,160.167 35.3329,164.5 36.9999,167.5',\n                attr: {\n                    fill: '#FD9A8E'\n                }\n            }],\n            upperLimb: [//上肢\n            {\n                d: 'M26.4999,31.5 C24.0169,32.99 22.5209,34.975 21.5209,37.207 L33.5209,67.736 C34.3609,59.945 39.5709,51.358 39.9999,50.5 C40.3319,49.837 39.5099,41.929 37.5379,26.791 C32.9809,28.492 28.6879,30.188 26.4999,31.5',\n                attr: {\n                    fill: '#FEDFC6',\n                    transform: \"translate(0.000000, 83.000000)\"\n                }\n            }, {\n                d: 'M28.9999,111.5 C29.3329,106.167 29.4999,104.167 29.4999,105.5 L34.9999,71.5 L21.5209,37.207 C20.5079,39.468 20.0029,41.984 19.4999,44.5 C18.4999,49.5 14.9999,104 13.9999,106.5 C12.9999,109 9.4999,133 8.4999,140.5 C7.4999,148 4.9999,164 4.9999,165.5 C4.9999,167 3.4999,177 3.4999,180 C3.4999,182 3.1669,186.167 2.4999,192.5 C0.8339,199.5 -0.0001,203.167 -0.0001,203.5 C-0.0001,203.632 0.4999,204 1.4999,202.5 C0.4999,205 4.0299,210.103 5.4999,209 C6.8339,208 8.8329,200.833 11.4999,187.5 C12.1669,191.5 12.8329,193.333 13.4999,193 C14.4999,192.5 15.9999,178.5 15.4999,174 C15.1669,171 14.9999,166.167 14.9999,159.5 C19.9999,144.833 22.4999,136.667 22.4999,135 C22.4999,132.5 28.4999,119.5 28.9999,111.5',\n                attr: {\n                    fill: '#FEDFC6',\n                    transform: \"translate(0.000000, 83.000000)\"\n                }\n            }, {\n                d: 'M96.9999,26.5 C95.3329,40.833 94.4999,48.5 94.4999,49.5 C94.4999,51 97.4999,55.5 100.4999,63.5 C101.1039,65.111 101.4609,66.877 101.5779,68.793 L101.9999,67 L114.9999,38 C113.4999,35.5 110.4999,30.5 96.9999,26.5',\n                attr: {\n                    fill: '#FEDFC6',\n                    transform: \"translate(0.000000, 83.000000)\"\n                }\n            }, {\n                d: 'M130.4999,166.5 C129.4999,161.5 127.9999,155.5 127.9999,150 C127.9999,144.5 120.4999,102 119.9999,94 C119.4999,86 116.4999,40.5 114.9999,38 L101.9999,67 C101.9999,83.667 102.9999,95.833 104.9999,103.5 C106.9999,111.167 109.9999,123.667 113.9999,141 C117.6669,152 119.4999,157.667 119.4999,158 C119.4999,158.5 118.9999,180.5 118.9999,183.5 C118.9999,185.5 119.1669,189 119.4999,194 C121.4999,194.667 122.4999,194.167 122.4999,192.5 C122.4999,190.833 122.8329,189.833 123.4999,189.5 C125.4999,200.833 126.8329,206.667 127.4999,207 C128.4999,207.5 131.4999,210 132.9999,208 C133.9999,206.667 134.4999,204.667 134.4999,202 C132.4999,181.667 131.1669,169.833 130.4999,166.5',\n                attr: {\n                    fill: '#FEDFC6',\n                    transform: \"translate(0.000000, 83.000000)\"\n                }\n            }],\n            waist: [//腰部\n            {\n                d: 'M95.9164,193.9443 C95.9164,188.3493 96.7304,179.5003 98.3544,167.4073 C83.3354,166.4323 73.1834,165.9443 67.9164,165.9443 C62.6654,165.9443 52.7184,166.4303 38.0974,167.3993 L38.4164,168.9443 C40.0834,181.9443 40.4164,190.7773 39.4164,195.4443 C38.4374,200.0163 35.3714,210.2033 30.2314,225.9753 C42.4864,227.2863 56.2114,227.9443 71.4164,227.9443 C86.3314,227.9443 97.4504,227.3113 104.7954,226.0493 C103.4564,221.8813 102.1134,217.4623 101.4164,214.4443 C99.9164,207.9443 95.9164,202.4443 95.9164,193.9443',\n                attr: {\n                    fill: '#FEDFC6'\n                }\n            }, {\n                d: 'M67.9999,215 C68.5519,215 68.9999,213.881 68.9999,212.5 C68.9999,211.119 68.5519,210 67.9999,210 C67.4479,210 66.9999,211.119 66.9999,212.5 C66.9999,213.881 67.4479,215 67.9999,215',\n                attr: {\n                    fill: '#FCD2B0'\n                }\n            }],\n            genitals: [//男/女性生殖\n            {\n                d: 'M29.6596,226.0796 C41.9926,227.4126 55.8266,228.0796 71.1596,228.0796 C86.4926,228.0796 97.8266,227.4126 105.1596,226.0796 C106.1596,228.0796 106.8266,229.9126 107.1596,231.5796 C107.4926,233.2466 107.8266,235.0796 108.1596,237.0796 C101.1596,240.0796 95.1596,243.0796 90.1596,246.0796 C82.6596,250.5796 74.1596,256.5796 72.1596,257.5796 C70.8266,258.2466 68.4926,258.4126 65.1596,258.0796 C52.8266,250.2466 43.9926,245.0376 38.6596,242.4546 C33.3266,239.8716 29.6596,238.0796 27.6596,237.0796 C27.6596,235.0796 27.8266,233.2466 28.1596,231.5796 C28.4926,229.9126 28.9926,228.0796 29.6596,226.0796',\n                attr: {\n                    fill: '#FD9A8E'\n                }\n            }],\n            theLegs: [//下肢\n            {\n                d: 'M64.9999,175 C52.6669,167.167 43.8329,161.958 38.4999,159.375 C33.2949,156.854 29.6899,155.092 27.6599,154.08 C26.8879,159.515 26.4999,164.822 26.4999,170 C26.4999,182.5 39.4999,243 39.4999,244 C39.4999,245 40.4999,262 39.9999,272.5 C39.4999,283 42.4999,318 42.9999,321.5 C43.4999,325 47.9999,342.5 47.9999,348 L47.9999,363 C47.9999,369.667 47.6669,374 46.9999,376 C46.3329,378 45.1669,383.167 43.4999,391.5 C43.1669,392.833 43.1669,393.667 43.4999,394 C46.5979,397.098 49.4439,397.015 50.9999,397.5 C56.4979,399.214 60.7639,396.5 61.4999,396.5 C62.1669,396.5 62.4999,395.833 62.4999,394.5 L60.9999,356.5 C62.3329,318.833 63.1669,298.667 63.4999,296 C63.9999,292 63.9999,246.5 63.9999,243 C63.9999,240.729 64.6319,218.083 65.8949,175.076 C65.6029,175.053 65.3099,175.031 64.9999,175',\n                attr: {\n                    fill: '#FEDFC6',\n                    transform: 'translate(0.000000, 83.000000)'\n                }\n            }, {\n                d: 'M89.9999,163 C82.4999,167.5 73.9999,173.5 71.9999,174.5 C71.4769,174.762 70.7939,174.943 69.9629,175.051 C69.6549,192.397 69.4999,201.896 69.4999,203.5 C69.4999,205.167 69.8329,222.667 70.4999,256 L70.4999,263 L70.9999,289 L73.9999,337 L73.9999,361 C73.6669,370.667 73.4999,376.167 73.4999,377.5 C73.4999,378.833 73.3329,385.167 72.9999,396.5 C85.3329,396.5 91.6669,395.333 91.9999,393 C92.3329,390.667 90.9999,385 87.9999,376 C86.9999,370.667 86.6669,364.667 86.9999,358 C87.4999,348 89.9999,331 90.9999,325 C91.9999,319 94.4999,295.5 94.4999,283.5 C94.4999,271.5 94.9999,253 95.9999,248 C96.9999,243 104.4999,202 105.9999,196 C107.4999,190 108.9999,157 107.9999,154 C100.9999,157 94.9999,160 89.9999,163',\n                attr: {\n                    fill: '#FEDFC6',\n                    transform: 'translate(0.000000, 83.000000)'\n                }\n            }, {\n                d: 'M76.9999,347.9995 C76.6249,348.8045 76.6249,349.6955 76.9999,350.4995 C77.4349,351.3025 77.7699,352.1415 77.9999,352.9995 C77.9999,352.9995 76.0299,351.4935 75.9999,350.4995 C76.0229,349.6025 76.3719,348.7295 76.9999,347.9995 Z M87.9999,353.9995 C88.8009,353.3705 89.4229,352.5415 89.8039,351.5955 C90.2459,350.2275 89.8039,347.9885 89.8039,347.9885 L89.2019,347.9885 C89.1979,349.0205 88.9929,350.0405 88.6009,350.9945 C88.3249,351.5665 88.1229,352.1735 87.9999,352.7975 L87.9999,353.9995 Z',\n                attr: {\n                    fill: '#FCD2B0'\n                }\n            }, {\n                d: 'M58.827,344.9995 C59.389,346.2865 59.389,347.7135 58.827,348.9995 C58.175,350.2835 57.672,351.6255 57.327,352.9995 C57.327,352.9995 60.282,350.5895 60.327,348.9995 C60.292,347.5625 59.769,346.1685 58.827,344.9995 Z M47.327,352.9995 C45.994,351.9525 44.959,350.5725 44.327,348.9995 C43.591,346.7235 44.327,342.9995 44.327,342.9995 L45.327,342.9995 C45.335,344.7155 45.675,346.4125 46.327,347.9995 C46.787,348.9525 47.123,349.9615 47.327,350.9995 L47.327,352.9995 Z',\n                attr: {\n                    fill: '#FCD2B0'\n                }\n            }, {\n                d: 'M59.4999,476.9995 C60.8809,476.9995 61.9999,478.1195 61.9999,479.4995 L61.9999,480.4995 C61.9999,481.8805 60.8809,482.9995 59.4999,482.9995 C58.1199,482.9995 56.9999,481.8805 56.9999,480.4995 L56.9999,479.4995 C56.9999,478.1195 58.1199,476.9995 59.4999,476.9995',\n                attr: {\n                    fill: '#FFB895'\n                }\n            }, {\n                d: 'M54.4999,477.9995 C55.3289,477.9995 55.9999,478.6715 55.9999,479.4995 L55.9999,481.4995 C55.9999,482.3285 55.3289,482.9995 54.4999,482.9995 C53.6719,482.9995 52.9999,482.3285 52.9999,481.4995 L52.9999,479.4995 C52.9999,478.6715 53.6719,477.9995 54.4999,477.9995',\n                attr: {\n                    fill: '#FFB895'\n                }\n            }, {\n                d: 'M44.6019,475.2075 C45.1419,475.3225 45.4869,475.8535 45.3719,476.3945 L45.1639,477.3725 C45.0489,477.9125 44.5189,478.2575 43.9779,478.1425 C43.4379,478.0275 43.0929,477.4965 43.2079,476.9565 L43.4159,475.9785 C43.5309,475.4375 44.0619,475.0935 44.6019,475.2075',\n                attr: {\n                    fill: '#FFB895'\n                }\n            }, {\n                d: 'M46.682,477.2065 C47.268,477.3205 47.652,477.8895 47.538,478.4755 L47.331,479.5375 C47.217,480.1245 46.649,480.5075 46.062,480.3945 C45.475,480.2795 45.093,479.7115 45.206,479.1245 L45.413,478.0615 C45.527,477.4765 46.095,477.0925 46.682,477.2065',\n                attr: {\n                    fill: '#FFB895'\n                }\n            }, {\n                d: 'M50.5385,478.3374 C51.3455,478.5244 51.8495,479.3294 51.6625,480.1364 L51.4375,481.1104 C51.2515,481.9174 50.4455,482.4214 49.6385,482.2344 C48.8315,482.0484 48.3285,481.2424 48.5145,480.4364 L48.7395,479.4614 C48.9255,478.6544 49.7315,478.1504 50.5385,478.3374',\n                attr: {\n                    fill: '#FFB895'\n                }\n            }, {\n                d: 'M75.4999,482.9995 C76.8809,482.9995 77.9999,481.8805 77.9999,480.4995 L77.9999,479.4995 C77.9999,478.1195 76.8809,476.9995 75.4999,476.9995 C74.1199,476.9995 72.9999,478.1195 72.9999,479.4995 L72.9999,480.4995 C72.9999,481.8805 74.1199,482.9995 75.4999,482.9995',\n                attr: {\n                    fill: '#FFB895'\n                }\n            }, {\n                d: 'M80.4999,481.9995 C81.3289,481.9995 81.9999,481.3285 81.9999,480.4995 L81.9999,478.4995 C81.9999,477.6715 81.3289,476.9995 80.4999,476.9995 C79.6719,476.9995 78.9999,477.6715 78.9999,478.4995 L78.9999,480.4995 C78.9999,481.3285 79.6719,481.9995 80.4999,481.9995',\n                attr: {\n                    fill: '#FFB895'\n                }\n            }, {\n                d: 'M85.3612,481.2349 C86.1682,481.0479 86.6722,480.2429 86.4852,479.4359 L86.2602,478.4619 C86.0742,477.6549 85.2692,477.1509 84.4612,477.3379 C83.6542,477.5239 83.1512,478.3299 83.3372,479.1359 L83.5622,480.1109 C83.7492,480.9179 84.5542,481.4219 85.3612,481.2349',\n                attr: {\n                    fill: '#FFB895'\n                }\n            }, {\n                d: 'M91.6019,478.1421 C92.1419,478.0281 92.4869,477.4961 92.3719,476.9561 L92.1639,475.9781 C92.0489,475.4381 91.5189,475.0931 90.9779,475.2071 C90.4379,475.3231 90.0929,475.8541 90.2079,476.3941 L90.4159,477.3721 C90.5309,477.9131 91.0619,478.2571 91.6019,478.1421',\n                attr: {\n                    fill: '#FFB895'\n                }\n            }, {\n                d: 'M88.682,479.394 C89.268,479.28 89.652,478.711 89.538,478.124 L89.331,477.062 C89.217,476.476 88.649,476.092 88.062,476.206 C87.475,476.321 87.093,476.889 87.206,477.475 L87.413,478.538 C87.527,479.124 88.095,479.507 88.682,479.394',\n                attr: {\n                    fill: '#FFB895'\n                }\n            }]\n        },\n        //背面\n        back: {\n            wholeBody: [\n            //头部\n            {\n                d: 'M97.2155331,44.7956428 C96.3355934,48.410065 94.6676114,50.7731852 91.6024608,51.2386728 C91.3227018,52.1258565 91.024238,53.0033088 90.703003,53.8580544 C87.7744789,61.8224343 82.8754428,68.9182823 76.4613163,74.4871039 C73.0659849,77.2970597 69.7967078,78.8897735 67.331738,78.9473512 L66.5632139,78.9473512 C66.0386657,78.8962611 65.5206235,78.8013795 65.0123404,78.6586516 L64.7138765,78.5702576 L64.3357139,78.4502364 L64.0055331,78.3326481 L63.8754127,78.3326481 L63.5639367,78.2028954 L63.1955331,78.050436 L62.967009,77.9433901 L62.6457741,77.7941746 C61.9626416,77.4551958 61.2957741,77.0813459 60.6476114,76.6791127 C60.3776114,76.5177329 60.1206235,76.3401339 59.8506235,76.1503707 C59.5806235,75.9597965 59.0308645,75.5827028 58.6209849,75.2631869 L58.2111054,74.9339396 C58.0712259,74.8260827 57.9313464,74.7247134 57.8012259,74.6071251 L57.4840572,74.3378883 C57.4458343,74.3159926 57.4108645,74.290853 57.3824006,74.2592258 C56.962762,73.9105155 56.5528825,73.5399095 56.133244,73.1530845 L55.7558946,72.7922099 C55.4346596,72.4945898 55.1264367,72.1872382 54.8149608,71.8669113 L54.4750211,71.519012 C54.3351416,71.3795279 54.2050211,71.2303124 54.0651416,71.0819078 C53.9260753,70.9294484 53.5161958,70.4923442 53.2461958,70.1849926 C52.9794488,69.8743972 52.7183946,69.5865085 52.4581536,69.2661816 C52.3085151,69.0983141 52.1686355,68.9182823 52.0295693,68.7504148 C51.6286355,68.2622205 51.2285151,67.7521304 50.8414066,67.2266322 C50.3201114,66.5389431 49.8402922,65.8107064 49.3035452,65.075171 C49.1921295,64.8951392 49.0717681,64.7272717 48.9636054,64.5561604 C47.5249608,62.3511763 46.2473404,60.044823 45.1486355,57.6533194 C44.9672801,57.2445986 44.7859247,56.848853 44.6175813,56.4401322 C44.3288765,55.771906 44.0491175,55.084217 43.7888765,54.447618 C43.6994187,54.2197399 43.6205331,53.9878071 43.5278223,53.7501975 L43.3188163,53.1517134 L43.1407139,52.6132399 C43.0707741,52.435641 43.0195392,52.2458777 42.9495994,52.0561145 C42.8804729,51.8655403 42.7910151,51.5581887 42.7210753,51.3084148 C39.8527319,50.7318265 38.2733946,48.410065 37.4259849,44.9253954 C36.2183042,39.9453265 37.364991,37.3445968 40.6627319,37.8546869 L40.6627319,37.7849449 C40.6529729,35.399929 40.7993584,33.0173459 41.1010753,30.650982 C42.9878223,16.3108813 50.7617078,9.80702968 60.787491,8.01401025 C61.4576114,7.89398905 62.137491,7.7958636 62.7856536,7.71233534 C64.2283645,7.55501025 65.6800211,7.47229293 67.1316777,7.47553675 L67.2715572,7.47553675 C80.966738,7.47553675 92.2408645,14.1496887 93.5209247,33.7991057 C93.6095693,35.064194 93.6510452,36.4006463 93.6510452,37.7849449 L93.6510452,37.9025332 C97.1553524,37.2051127 98.4036958,39.8950473 97.1553524,44.9253954',\n                attr: {\n                    fill: '#FEDFC6'\n                }\n            }, {\n                d: 'M40.462509,35.6209951 C42.0410331,41.9975269 43.3723283,46.3126134 44.4588343,48.5711205 C49.6913042,59.525488 54.7643765,64.0579102 58.4394669,66.4972601 C61.3785633,68.5059933 64.8698584,69.5513131 68.4310934,69.4848148 C72.3444669,69.2658572 76.0585934,67.6788201 78.9171777,65.0051046 C80.9153404,63.0125905 83.8511837,60.0258466 89.4040753,49.5653502 C90.3978705,47.7123201 91.894256,43.0655534 93.8989247,35.6209951 C94.2323584,15.7023413 85.7411837,5.57433604 68.4310934,5.24508869 C51.1169367,4.91259753 41.7938042,15.0365481 40.462509,35.6209951',\n                attr: {\n                    fill: '#9C7757'\n                }\n            }, {\n                d: 'M58.9422199,32.2346131 L65.0123404,30.5810777 C65.0123404,34.6261166 65.383997,37.0054558 66.1118584,37.743424 C66.8421596,38.4813922 67.5919789,38.1107862 68.3287861,36.6478251 C70.031738,34.8418304 71.8778223,33.1753198 73.8524006,31.6677562 C76.0839669,30.2485866 78.4944488,29.1367686 81.0236657,28.3606855 C84.3401114,27.2642756 93.7087861,1.38024382 69.4185452,0.284644876 C53.2112259,-0.441159011 49.7199307,10.2123445 58.9422199,32.2346131',\n                attr: {\n                    fill: '#9C7757'\n                }\n            }, {\n                d: 'M81.0044729,29.377703 C78.4728163,30.153786 76.0582681,31.2656041 73.8218223,32.6847737 C71.8521235,34.1923373 70.0035994,35.8588479 68.2998343,37.6648426 C67.8297741,38.5990617 67.3605271,39.0775246 66.8904669,39.1188832 C67.5605873,39.1188832 68.7202861,38.1238426 70.3874548,36.1313284 C72.792244,35.1241235 75.1270934,33.9612154 77.3798042,32.643415 C79.0380271,31.5380846 77.6498042,32.485279 80.96625,31.3799486 C82.6342319,30.8220122 85.8482078,23.9702613 85.4993223,17.1558143 C85.2707982,23.2412136 82.5130572,28.8805882 81.0044729,29.377703 M64.9939608,31.5794433 L58.9425452,33.2329786 C55.8261596,25.8013956 54.1614307,19.6649062 53.9475452,14.8243214 C53.7198343,19.9308991 55.3845633,26.7323708 58.9425452,35.2254928 L65.0118524,33.5719574 C65.0346235,34.7470299 65.167997,35.9156147 65.4135994,37.0655475 C65.0923645,35.25712 64.9524849,33.4162542 64.9939608,31.5794433',\n                attr: {\n                    fill: '#8D6D55'\n                }\n            }, {\n                d: 'M132.852524,254.245939 C131.365898,242.37276 130.857614,233.380091 130.355837,230.840183 C129.24412,225.40598 128.411349,219.923119 127.858337,214.405388 C127.359813,208.927393 120.367464,166.596402 119.86894,158.629589 C119.370416,150.659533 116.374392,105.340987 114.875566,102.851358 C113.375928,100.360918 110.379904,95.3816597 96.8945422,91.3990643 C83.4124337,87.414036 81.9127952,87.414036 80.4164096,83.4290078 C79.3624337,80.0967975 78.5011988,76.7037657 77.8375843,73.2701862 C77.3797229,73.697559 76.9194217,74.1062799 76.4615602,74.4866173 C73.0654157,77.2965731 69.7969518,78.8900979 67.3319819,78.9468647 L66.5634578,78.9468647 C66.0389096,78.8957746 65.5208675,78.8008929 65.0125843,78.658165 L64.7141205,78.570582 L64.3359578,78.4505608 L64.0057771,78.3329724 L63.8756566,78.3329724 L63.5641807,78.2024088 L63.1957771,78.0499495 L62.9664398,77.9429035 L62.6452048,77.7944989 C61.9628855,77.4555201 61.2960181,77.0808594 60.6478554,76.6794371 C60.3778554,76.5172463 60.1200542,76.3404583 59.8500542,76.1498841 C59.5808675,75.9593099 59.0311084,75.5830272 58.6212289,75.2627004 L58.2113494,74.933453 C58.0706566,74.8255961 57.9315904,74.7242269 57.8014699,74.6066385 L57.4843012,74.3374018 C57.4460783,74.315506 57.4102952,74.2903664 57.3826446,74.2587392 L57.3216506,74.2076491 C56.4831867,80.8509848 54.8566807,84.7946544 52.4388795,86.0013541 C47.4446928,88.490983 31.4634578,93.4718629 26.4692711,96.4586067 C21.4750843,99.4453505 20.4780361,104.425419 19.4769217,109.405488 C18.4798735,114.384746 14.9820723,168.6692 13.9833976,171.158018 C12.9830964,173.647647 9.48936145,197.55214 8.4915,205.021838 C7.4911988,212.491536 4.99451205,228.429216 4.99451205,229.924616 C4.99451205,231.416771 3.49487349,241.375287 3.49487349,244.365275 C3.49487349,246.355356 3.16469277,250.505819 2.4961988,256.815041 C0.832283133,263.787624 0.000325301205,267.440161 0.000325301205,267.77022 C0.000325301205,267.899161 0.498036145,268.269767 1.4991506,266.774368 C0.498036145,269.264808 3.49487349,274.741181 6.49333735,272.748667 C8.4915,271.422757 10.4872229,264.61723 12.4853855,252.332898 C13.4856867,256.979665 14.4835482,258.972179 15.4805964,258.308008 C16.9802349,257.312156 15.9815602,242.871497 15.4805964,238.387732 C15.1504157,235.401799 14.9820723,230.585543 14.9820723,223.946262 C19.9754458,209.339358 22.4721325,201.204677 22.4721325,199.544654 C22.4721325,197.055025 28.4674337,184.1049 28.9659578,176.138087 C29.2985783,170.825527 29.4644819,168.833013 29.4644819,170.162978 L34.9596325,136.296725 L37.0163494,146.259296 C52.0265602,145.207488 62.163759,144.684423 67.4303855,144.684423 C72.697012,144.684423 83.0627349,145.175861 98.5243012,146.157927 L101.389392,134.725096 C101.723639,149.332001 102.88903,160.454236 104.887193,168.091801 C106.885355,175.726123 109.88138,188.175078 113.877705,205.43948 C117.537343,216.397902 119.370416,222.038898 119.370416,222.371389 C119.370416,222.871748 118.871892,244.783727 118.871892,247.771282 C118.871892,249.764607 119.036982,253.248465 119.370416,258.227723 C121.368578,258.892706 122.365627,258.395591 122.365627,256.735568 C122.375386,255.025266 122.712072,253.333616 123.363488,251.757121 C125.361651,264.037398 126.696199,270.512866 127.359813,271.177849 C128.360928,272.172078 131.356139,274.663329 132.852524,272.670815 C133.542163,271.744706 134.439994,268.776614 134.352163,265.201117 C134.253759,261.056331 133.09406,256.235209 132.852524,254.245939',\n                attr: {\n                    fill: '#FEDFC6'\n                }\n            }, {\n                d: 'M29.9756114,206.438088 C51.6162741,207.099827 65.6001596,207.432318 71.9256416,207.432318 C78.2503102,207.432318 89.2389849,207.764809 104.887599,208.427359 C106.215642,212.08314 107.054105,214.572769 107.384286,215.9003 C107.877117,218.36479 108.210551,220.860906 108.382148,223.369998 C97.3967259,236.316069 84.2447982,242.791537 68.9296175,242.791537 C53.6144367,242.791537 39.4646476,236.316069 26.4786235,223.369998 C26.8088042,219.714217 27.148744,216.89453 27.4789247,214.902016 C28.0701596,212.016641 28.9053705,209.183979 29.9756114,206.438088 Z M39.9639849,90.89903 C40.6275994,107.169201 41.1293765,116.380829 41.4595572,118.537966 C41.7938042,120.698348 42.2923283,125.427832 42.9591958,132.732906 C50.9079307,135.007633 59.1673283,136.018081 67.4299789,135.720461 C75.4226295,135.387159 83.7462741,134.72542 92.4025392,133.727947 C94.0672681,122.441088 95.0651295,114.140973 95.3985633,108.828413 C95.731997,103.516664 96.0621777,97.7069894 96.3956114,91.3993887 L97.89525,91.8973145 C97.5618163,102.521624 97.2283825,109.65883 96.8949488,113.311367 L95.8970873,133.230021 C96.3606416,134.61432 97.2316355,135.830751 98.3937741,136.717935 C99.3216958,137.348046 100.328503,137.852459 101.389798,138.21009 L98.8931114,146.176903 C83.2436837,145.182673 72.7575994,144.684747 67.4299789,144.684747 C62.1023584,144.684747 51.7813645,145.182673 36.4661837,146.176903 L34.9697982,138.21009 C37.1175994,136.73091 38.9791355,134.874636 40.462509,132.732906 C39.1312139,118.122758 38.4643464,109.823454 38.4643464,107.83094 C38.4643464,105.84167 38.299256,100.361242 37.9658223,91.3993887 L39.9639849,90.89903 Z',\n                attr: {\n                    fill: '#FD9A8E'\n                }\n            }, {\n                d: 'M38.9631145,177.053249 C38.0067289,181.510252 35.0586867,191.305767 30.125494,206.438169 C51.6799518,207.099908 65.6134157,207.432399 71.9250723,207.432399 C78.2375422,207.432399 89.1115482,207.76489 104.547904,208.42744 C103.118205,204.027203 101.640524,199.206081 100.890705,195.987404 C99.3918795,189.515991 95.3988072,184.035563 95.3988072,175.570825 C95.3988072,169.925774 96.2307651,160.961487 97.895494,148.679588 L98.5241386,146.167252 C83.0820904,145.17951 72.7196205,144.684828 67.4302229,144.684828 C62.1440783,144.684828 52.0101325,145.169779 37.0251325,146.138869 L37.9660663,150.659127 C39.636488,163.609252 39.9699217,172.406482 38.9631145,177.053249',\n                attr: {\n                    fill: '#FEDFC6'\n                }\n            }, {\n                d: 'M67.7720331,155.70318 C67.7720331,155.70318 68.2136295,169.190157 68.2770633,175.139316 C68.340497,181.088475 67.7720331,191.117544 67.7720331,191.117544 C67.7720331,191.117544 67.267003,179.859069 67.267003,175.139316 C67.267003,167.125468 67.7720331,155.70318 67.7720331,155.70318',\n                attr: {\n                    fill: '#FBCCA8'\n                }\n            }, {\n                d: 'M81.6286446,451.160507 C81.7994277,450.753408 82.3882229,446.179627 82.6443976,443.876518 C82.9005723,441.572597 83.4958735,437.443219 83.2331928,436.796078 C83.095753,436.456288 82.1027711,440.076387 81.6286446,443.47023 C81.2781325,445.972834 81.6286446,451.160507 81.6286446,451.160507',\n                attr: {\n                    fill: '#FBCCA8'\n                }\n            }, {\n                d: 'M79.3819518,451.160507 C79.3819518,451.160507 79.5210181,445.67197 79.3819518,444.875613 C79.2428855,444.077634 78.4288193,443.065564 78.4288193,443.065564',\n                attr: {\n                    fill: '#FBCCA8'\n                }\n            }, {\n                d: 'M55.1522982,452.171767 C55.1522982,452.171767 55.0132319,446.684041 55.1522982,445.886873 C55.2905512,445.088894 56.1054307,444.077634 56.1054307,444.077634',\n                attr: {\n                    fill: '#FBCCA8'\n                }\n            }, {\n                d: 'M53.2168373,451.160507 C53.3876205,450.753408 53.9764157,446.179627 54.2325904,443.876518 C54.4887651,441.572597 55.0840663,437.443219 54.8213855,436.796078 C54.6839458,436.456288 53.6909639,440.076387 53.2168373,443.47023 C52.8663253,445.972834 53.2168373,451.160507 53.2168373,451.160507',\n                attr: {\n                    fill: '#FBCCA8'\n                }\n            }, {\n                d: 'M54.5339819,315.57434 C54.5339819,315.57434 55.3781386,313.902153 55.5001265,313.492621 C55.6221145,313.082278 55.6253675,312.798444 55.5001265,312.105078 L56.4662711,313.492621 L54.5339819,315.57434 Z',\n                attr: {\n                    fill: '#FBCCA8'\n                }\n            }, {\n                d: 'M47.9874578,315.573529 C47.9874578,315.168863 46.2934518,313.219329 46.085259,312.740866 C45.8770663,312.261593 44.9434518,311.526868 44.9434518,311.526868 L44.9434518,313.145533 L47.9874578,315.573529 Z',\n                attr: {\n                    fill: '#FBCCA8'\n                }\n            }, {\n                d: 'M79.4454669,316.15328 C79.4454669,316.15328 78.6021235,314.480282 78.4801355,314.071561 C78.3573343,313.660407 78.3540813,313.376573 78.4801355,312.683208 L77.5131777,314.071561',\n                attr: {\n                    fill: '#FBCCA8'\n                }\n            }, {\n                d: 'M86.5463042,316.585681 C86.5463042,316.181015 88.2411235,314.23067 88.4493163,313.753018 C88.657509,313.273744 89.5903102,312.538209 89.5903102,312.538209 L89.5903102,314.157684 L86.5463042,316.585681 Z',\n                attr: {\n                    fill: '#FBCCA8'\n                }\n            },\n\n            //腿部\n            {\n                d: 'M65.7237741,242.689843 C51.8382922,241.854561 38.9311536,235.577776 26.9991054,223.8676 C26.6591657,227.411469 26.4786235,230.899382 26.4786235,234.324041 C26.4786235,246.772997 38.9628705,303.049965 39.4646476,308.028412 C40.189256,317.472783 40.3543464,326.949593 39.9639849,336.415048 C39.4646476,346.873112 42.9591958,380.238195 43.4585331,383.726108 C43.9570572,387.210778 48.4519066,405.140161 48.4519066,410.617345 C48.4519066,416.094529 48.9536837,427.052951 48.4519066,431.534283 C47.9533825,436.013994 45.8372982,447.46872 45.9552199,448.963308 C46.0568765,450.107564 44.4588343,455.439587 50.4500693,457.928405 C56.4445572,460.418034 59.9391054,457.928405 62.4357922,454.440492 C64.9332922,450.955822 63.4369066,443.984861 62.4357922,439.003981 C61.7721777,435.683935 61.2704006,429.373902 60.9369669,420.079557 C62.6041355,382.5632 63.601997,362.476679 63.9354307,359.821616 C64.4339548,355.836587 63.9354307,315.000995 63.9354307,308.028412 C63.9354307,303.641151 64.5299187,281.860547 65.7237741,242.689843',\n                attr: {\n                    fill: '#FEDFC6'\n                }\n            }, {\n                d: 'M69.8285873,242.772236 C69.5585873,257.8795 69.4284669,266.207187 69.4284669,267.67177 C69.4284669,269.330982 69.7619006,286.760818 70.4255151,319.962088 L70.4255151,326.934671 L70.9281054,352.827623 L73.9233163,400.635798 L73.9233163,424.540291 C73.5898825,434.170371 73.4247922,439.647554 73.4247922,440.975086 C73.4247922,441.722786 71.7348524,444.41191 71.4266295,446.952629 C70.9053343,451.174455 71.8552139,455.509005 73.4247922,456.414841 C79.4160271,459.89951 85.9090392,457.906996 88.4065392,454.919441 C90.0712681,452.926927 89.9053645,447.782235 87.9072018,439.48212 C86.8751837,433.565399 86.538497,427.546498 86.9069006,421.552736 C87.4086777,411.59341 89.9053645,394.6615 90.9032259,388.683957 C91.9010873,382.709659 94.3977741,359.303092 94.3977741,347.35044 C94.3977741,335.398599 94.8995512,316.993185 95.8974127,312.013927 C96.8944608,307.034669 104.388587,266.198266 105.884973,260.220724 C107.073136,255.478265 108.264551,233.80795 108.20437,223.569655 C97.4694307,236.129712 84.6769608,242.532194 69.8285873,242.772236',\n                attr: {\n                    fill: '#FEDFC6'\n                }\n            }]\n        }\n    },\n    //男性\n    man: {\n        front: {\n            head: [{\n                d: 'M84.6544,51.6085 C83.7004,55.5415 81.8984,58.1065 78.5754,58.6105 C75.3354,69.0725 69.1334,77.7755 63.1264,83.0925 L63.1234,83.0955 C59.1284,86.6295 55.2224,88.6695 52.3304,88.7355 C52.2794,88.7385 52.2294,88.7385 52.1824,88.7385 C49.2634,88.7385 45.4424,86.8525 41.5444,83.5165 C41.5364,83.5075 41.5254,83.5015 41.5194,83.4935 C35.3464,78.2115 28.9894,69.3065 25.7314,58.5485 C22.6324,57.9195 20.9234,55.3945 20.0054,51.6085 C19.6404,50.1045 19.4724,48.7985 19.5034,47.7055 C19.5074,47.5515 19.5144,47.4025 19.5284,47.2555 C19.5894,46.4775 19.7624,45.8275 20.0444,45.3085 C20.0914,45.2215 20.1414,45.1355 20.1984,45.0565 C20.2914,44.9175 20.3914,44.7895 20.5044,44.6765 C20.5404,44.6355 20.5804,44.5985 20.6154,44.5675 C20.6334,44.5525 20.6474,44.5375 20.6624,44.5265 C20.6924,44.4965 20.7204,44.4715 20.7534,44.4505 C20.9944,44.2545 21.2724,44.1095 21.5844,44.0115 C21.6314,43.9965 21.6764,43.9815 21.7234,43.9675 C21.7864,43.9525 21.8504,43.9335 21.9124,43.9225 C21.9704,43.9135 22.0284,43.9005 22.0864,43.8945 C22.1444,43.8835 22.2054,43.8765 22.2664,43.8725 C22.3294,43.8635 22.3894,43.8575 22.4504,43.8575 C22.5014,43.8545 22.5514,43.8505 22.6034,43.8505 C22.8844,43.8465 23.1864,43.8685 23.5064,43.9155 L23.5064,43.8395 C23.5064,41.0545 23.6694,38.4745 23.9784,36.0945 C26.0164,20.5015 34.4244,13.4255 45.2684,11.4785 C45.9944,11.3475 46.7314,11.2365 47.4814,11.1525 C48.2454,11.0665 49.0204,11.0045 49.8044,10.9595 C50.1954,10.9385 50.5894,10.9195 50.9864,10.9125 C51.3804,10.8975 51.7814,10.8935 52.1824,10.8935 C67.0594,10.8935 79.2914,18.0825 80.7254,39.5085 C80.8144,40.8935 80.8624,42.3375 80.8624,43.8395 L80.8624,43.9715 C81.0714,43.9265 81.2734,43.8985 81.4684,43.8805 C84.7894,43.5445 85.9224,46.3935 84.6544,51.6085',\n                attr: {\n                    fill: '#F8D2B5',\n                    transform: 'translate(21.000000, 0.261000)'\n\n                }\n            }, {\n                d: 'M57.6192,3.3785 C52.7492,-1.3105 55.4802,10.1025 33.9042,2.8125 C3.9332,-7.3175 -2.7238,21.9105 1.7732,41.9755 L1.7732,41.9765 C2.3922,47.2845 3.8062,55.3965 6.5432,53.4405 C4.5182,45.5525 4.8602,39.6135 6.7442,35.1525 C14.7492,21.3895 13.0182,45.5505 51.3362,27.9215 C57.4472,32.3785 60.7452,40.1445 57.3342,53.4405 C59.4882,54.9795 60.8212,50.2855 61.5952,45.6295 C61.6662,45.6185 61.7392,45.6095 61.8112,45.6035 C62.1232,44.3855 62.4182,43.1345 62.7052,41.8545 C65.4072,29.7265 66.0102,11.4565 57.6192,3.3785',\n                attr: {\n                    fill: '#81543F',\n                    transform: 'translate(41.000000, 0.000000)'\n\n                }\n            }],\n            neck: [{\n                d: 'M84.1358,3.0977 L84.1328,3.1007 C80.1378,6.6357 76.2318,8.6737 73.3398,8.7407 C73.2878,8.7437 73.2388,8.7437 73.1918,8.7437 C70.2728,8.7437 66.4508,6.8577 62.5538,3.5217 C62.5448,3.5137 62.5338,3.5067 62.5298,3.4977 C62.4818,3.4577 62.4348,3.4117 62.3868,3.3707 C62.9468,5.3807 63.3858,7.7127 63.5088,9.7437 C68.4528,12.7457 72.2658,12.7437 74.0008,12.7437 C75.7528,12.7437 79.5658,12.7457 84.5088,9.7437 C84.6898,6.7807 85.5358,3.1677 86.4588,0.8767 C85.6858,1.6697 84.9088,2.4127 84.1358,3.0977',\n                attr: {\n                    fill: '#F8D2B5',\n                    transform: 'translate(0.000000, 80.261000)'\n                }\n            }, {\n                d: 'M87.0001,18.2389 C85.6131,14.5409 84.6561,10.8489 84.5191,9.5209 C84.5141,9.5929 84.5041,9.6679 84.5001,9.7389 C79.5561,12.7409 75.7441,12.7379 73.9911,12.7389 C72.2581,12.7379 68.4481,12.7399 63.5091,9.7439 C63.7281,15.4439 62.2351,19.1209 59.0001,20.7389 L58.4201,21.0189 L88.5301,21.0189 C88.5441,21.0359 88.5621,21.0519 88.5761,21.0689 C87.8621,20.2439 87.4111,19.3359 87.0001,18.2389',\n                attr: {\n                    fill: '#F8D2B5',\n                    transform: 'translate(0.000000, 80.261000)'\n                }\n            }],\n            abdomen: [{\n                d: 'M83.0001,107.7389 C73.1201,104.8089 69.4101,103.2189 67.5301,101.0189 L37.4201,101.0189 C31.8701,103.5889 16.8201,108.3489 12.0001,111.2389 C9.7291,112.5989 4.3301,114.2389 0.1001,119.7789 L14.0001,158.2389 L16.4201,167.1789 L88.2101,167.1789 L90.0001,158.2389 L105.0001,120.7389 C103.5001,118.2389 96.5001,111.7389 83.0001,107.7389',\n                attr: {\n                    fill: '#F8D2B5',\n                    transform: 'translate(21.000000, 0.261000)'\n                }\n            }, {\n                d: 'M73.5001,64.7389 C72.1671,73.4059 70.2861,78.3089 67.8591,79.4489 C65.1681,80.7139 62.0371,81.9749 56.6591,81.7559 C53.7761,81.6389 48.3911,80.5889 40.5001,78.6059 C48.1121,81.2399 53.4321,82.6369 56.4601,82.7969 C65.8541,83.2949 70.0001,80.2389 73.5001,80.2389 C77.0001,80.2389 81.9161,83.6659 89.7471,83.2459 C97.3121,82.8409 107.7711,78.7999 108.4431,78.6059 C109.3611,78.3419 98.9381,81.8429 90.2241,82.1679 C85.9491,82.3269 81.9131,80.2029 80.0001,79.4489 C76.1241,77.9219 73.9581,73.0179 73.5001,64.7389',\n                attr: {\n                    fill: '#F3CBAC',\n                    transform: 'translate(0.000000, 80.261000)'\n                }\n            }],\n            upperLimb: [{\n                d: 'M0.0001,38.2389 C4.2931,51.9149 7.1261,62.2489 8.5001,69.2389 C9.9621,76.6789 8.1661,82.6669 9.0001,86.2389 C10.8801,94.2939 12.1821,95.9799 13.5001,99.7389 C18.1391,112.9629 21.7601,125.3249 22.0001,128.2389 C22.4931,134.2319 17.0001,141.7389 17.0001,143.7389 C17.0001,145.7389 17.0001,151.2389 16.5001,156.2389 C16.1671,159.5719 16.1671,162.2389 16.5001,164.2389 C18.8331,163.2389 20.1671,160.9059 20.5001,157.2389 C21.0001,151.7389 22.0001,148.7389 23.0001,149.2389 C24.0001,149.7389 24.0001,149.7389 24.5001,151.7389 C25.0001,153.7389 23.2851,159.8819 22.0001,162.2389 C19.0001,167.7389 19.0921,171.5339 19.5001,171.7389 C20.5001,172.2389 26.5001,164.7389 28.0001,162.7389 C28.6271,161.9029 30.9551,159.2929 32.5001,153.7389 C33.1121,151.5359 33.9451,147.3689 35.0001,141.2389 C34.0001,125.2389 33.1671,115.5719 32.5001,112.2389 C31.5001,107.2389 31.0001,95.7389 31.0001,87.2389 C31.0001,78.7389 24.5001,66.2389 23.5001,60.7389 C23.0001,57.9919 24.0001,44.7389 23.0001,33.2389 C22.7031,29.8279 20.5001,24.7389 20.5001,21.2389 C20.5001,8.8929 15.7731,2.0279 15.0001,0.7389',\n                attr: {\n                    fill: '#F8D2B5',\n                    transform: 'translate(111.000000, 120.261000)'\n                }\n            }, {\n                d: 'M18.0001,45.2389 C14.9631,52.6639 15.4531,67.8149 14.0001,73.2389 C11.4791,82.6479 13.9761,89.8749 11.5001,98.2389 C8.6251,107.9499 6.5001,110.2389 5.5001,115.7389 C4.5001,121.2389 4.5001,130.7389 3.5001,138.2389 C2.5001,145.7389 2.0001,161.7389 1.5001,165.2389 C1.0001,168.7389 0.0001,182.7389 0.0001,185.7389 C0.0001,186.3429 1.1811,193.6639 4.5001,199.7389 C8.1611,206.4389 15.0001,212.7389 16.5001,212.2389 C18.0001,211.7389 12.4811,202.5409 11.0001,195.7389 C10.0501,191.3759 11.9181,188.8039 12.5001,189.2389 C14.9621,191.0779 14.6411,198.5209 15.0001,199.2389 C16.0001,201.2389 18.0001,204.7389 19.0001,204.2389 C19.5061,203.9859 20.7101,194.6729 19.0001,186.2389 C17.3331,178.0159 11.5001,170.7389 13.0001,166.2389 C14.5001,161.7389 23.5001,134.2389 25.0001,130.2389 C26.5001,126.2389 25.0001,118.7389 26.5001,110.7389 C27.5001,105.4059 30.3331,94.5719 35.0001,78.2389 L21.1001,39.7789',\n                attr: {\n                    fill: '#F8D2B5',\n                    transform: 'translate(0.000000, 80.261000)'\n                }\n            }],\n            waist: [{\n                d: 'M88.2101,167.1788 L16.4201,167.1788 L19.0001,176.7388 C22.0001,187.7388 23.0001,195.5718 22.0001,200.2388 C21.0001,204.9058 20.3331,212.4058 20.0001,222.7388 C19.4701,223.9788 19.0001,225.2088 18.5201,226.4288 C18.6801,226.0288 18.8301,225.6288 19.0001,225.2388 C36.7931,226.8118 47.7531,227.5988 51.8801,227.5988 C56.0071,227.5988 66.9861,227.4828 84.8201,227.2488 C84.2451,225.7878 83.8031,224.2788 83.5001,222.7388 C82.8701,219.3988 83.5001,215.7388 83.5001,213.2388 C83.5001,205.5088 82.5001,201.7388 82.5001,193.2388 C82.5001,187.5718 84.1671,180.0718 87.5001,170.7388 L88.2101,167.1788 Z',\n                attr: {\n                    fill: '#F8D2B5',\n                    transform: 'translate(21.000000, 0.261000)'\n                }\n            }, {\n                d: 'M51.0001,209.2389 C51.0001,209.7909 52.1191,210.2389 53.5001,210.2389 C54.8811,210.2389 56.0001,209.7909 56.0001,209.2389 C56.0001,208.6869 54.8811,208.2389 53.5001,208.2389 C52.1191,208.2389 51.0001,208.6869 51.0001,209.2389',\n                attr: {\n                    fill: '#F3CBAC',\n                    transform: 'translate(21.000000, 0.261000)'\n                }\n            }, {\n                d: 'M50.5001,119.2389 C55.5001,124.5719 58.0001,128.4059 58.0001,130.7389 C58.0001,133.0719 57.8331,136.2389 57.5001,140.2389 C56.8331,133.2389 55.8331,128.9059 54.5001,127.2389 C53.1671,125.5719 51.8331,122.9059 50.5001,119.2389',\n                attr: {\n                    fill: '#F3CBAC',\n                    transform: 'translate(0.000000, 80.261000)'\n                }\n            }, {\n                d: 'M97.0001,117.7389 C92.0001,123.0719 89.5001,126.9059 89.5001,129.2389 C89.5001,131.5719 89.6671,134.7389 90.0001,138.7389 C90.6671,131.7389 91.6671,127.4059 93.0001,125.7389 C94.3331,124.0719 95.6671,121.4059 97.0001,117.7389',\n                attr: {\n                    fill: '#F3CBAC',\n                    transform: 'translate(0.000000, 80.261000)'\n                }\n            }],\n            genitals: [{\n                d: 'M19.0001,225.2384 C36.7931,226.8114 47.7531,227.5984 51.8801,227.5984 C56.0071,227.5984 67.2131,227.4784 85.5001,227.2384 C86.8401,230.1684 88.0091,233.1734 89.0001,236.2384 C89.7031,239.0324 90.2041,241.8734 90.5001,244.7384 C90.9931,247.6124 91.3261,253.4524 91.5001,262.2594 C84.4791,260.1984 78.2901,259.3754 72.9301,259.7894 C68.5831,260.1114 64.3581,261.3774 60.5501,263.4994 C57.0401,265.4994 56.2101,268.4484 51.8801,268.4484 C46.9301,268.4484 47.0301,264.1384 42.6001,262.2594 C35.6001,259.3184 28.3601,259.7894 24.6001,259.7894 C21.3401,259.7894 17.2931,261.0254 12.4601,263.4994 C12.9671,256.2594 13.6331,249.3394 14.4601,242.7384 C15.1491,236.7214 16.6781,230.8324 19.0001,225.2384',\n                attr: {\n                    fill: '#5FADE8',\n                    transform: 'translate(21.000000, 0.261000)'\n                }\n            }],\n            theLegs: [{\n                d: 'M43.5001,327.2384 C43.5001,320.7384 45.5001,316.2384 46.5001,305.7384 C47.0541,300.0054 47.7201,287.2354 48.5001,267.4284 C46.6001,266.0284 45.7001,263.5584 42.6301,262.2594 C35.6301,259.3184 28.3901,259.7894 24.6301,259.7894 C21.5001,259.7894 17.6301,260.9484 13.0201,263.2384 C12.1701,274.5794 11.3201,290.7094 13.0201,307.2384 C14.0201,316.8084 18.3001,326.6484 20.0201,335.2384 C22.1601,345.9384 21.0201,354.2384 21.5201,357.2384 C22.0201,360.2384 18.2101,370.9194 18.0201,389.7384 C17.8901,402.0794 24.0201,422.7384 24.5201,425.7384 C24.8541,427.7384 25.1871,433.4054 25.5201,442.7384 C25.1461,444.3784 24.9791,446.0574 25.0201,447.7384 C25.2901,450.5794 26.4501,452.9384 26.0201,454.2384 C25.5101,455.7784 18.1801,469.2384 19.0201,473.7384 C19.4901,476.2494 28.9201,478.1084 42.5201,476.2384 C44.1051,475.9024 45.5221,475.0164 46.5201,473.7384 C43.7461,463.5984 41.9131,456.5984 41.0201,452.7384 C39.7801,447.4084 40.3501,443.2094 40.0201,440.2384 C38.9911,431.2394 39.3281,422.1364 41.0201,413.2384 C43.0201,401.3884 44.9391,390.7494 44.5201,385.2384 C43.3101,369.4194 40.4601,360.9684 41.0201,358.7384 C42.5001,352.7384 43.5001,333.7384 43.5001,327.2384',\n                attr: {\n                    fill: '#F8D2B5',\n                    transform: 'translate(21.000000, 0.261000)'\n                }\n            }, {\n                d: 'M27.7413,363.3106 C28.6393,362.8316 29.3373,362.2016 29.7623,361.4826 C30.2593,360.4416 29.7623,358.7386 29.7623,358.7386 L29.0893,358.7386 C29.0843,359.5226 28.8543,360.2986 28.4153,361.0246 C28.1053,361.4606 27.8793,361.9216 27.7413,362.3966 L27.7413,363.3106 Z',\n                attr: {\n                    fill: '#F3CBAC',\n                    transform: 'translate(21.000000, 0.261000)'\n                }\n            }, {\n                d: 'M37.5108,359.6534 C37.1318,360.2414 37.1318,360.8934 37.5108,361.4824 C37.9498,362.0694 38.2888,362.6824 38.5218,363.3104 C38.5218,363.3104 36.5308,362.2094 36.4998,361.4824 C36.5238,360.8254 36.8758,360.1874 37.5108,359.6534',\n                attr: {\n                    fill: '#F3CBAC',\n                    transform: 'translate(21.000000, 0.261000)'\n                }\n            }, {\n                d: 'M91.1798,262.1788 C84.2998,260.1788 78.2168,259.3818 72.9298,259.7888 C68.5828,260.1118 64.3588,261.3768 60.5498,263.4988 C58.2008,264.8288 57.0498,266.5988 55.2408,267.6288 C55.2408,273.4488 55.2408,277.9988 55.4998,281.2388 C56.7698,301.2988 59.5708,315.5688 60.4998,324.7388 C61.2098,331.7388 60.7198,338.9888 60.9998,344.7388 C61.3608,352.2188 62.3798,357.4188 62.4998,358.7388 C63.4998,369.9288 59.4298,379.5588 59.9998,384.7388 C61.6598,399.8188 63.4508,410.2088 63.9998,416.2388 C64.9728,426.0588 64.8048,435.9578 63.4998,445.7388 C62.8328,451.4058 62.4998,454.9058 62.4998,456.2388 C62.4998,457.5728 61.4998,463.4058 59.4998,473.7388 C64.2498,475.3988 67.4198,476.2388 68.9998,476.2388 C77.4398,476.2388 85.7298,473.2388 85.4998,470.7388 C85.1668,467.0728 82.8328,461.0728 78.4998,452.7388 C78.4998,449.0728 78.6668,443.9058 78.9998,437.2388 C79.4998,427.2388 85.9998,400.7388 85.9998,392.7388 C85.9998,384.7388 82.9998,373.2388 82.9998,361.2388 C82.9998,349.2388 84.4998,334.2388 85.4998,329.2388 C85.9598,326.9188 88.8698,317.4788 90.9998,306.7388 C93.4598,294.3488 91.9998,278.7388 91.9998,275.2388 C91.9998,273.9488 91.6598,268.5788 91.1798,262.1788',\n                attr: {\n                    fill: '#F8D2B5',\n                    transform: 'translate(21.000000, 0.261000)'\n                }\n            }, {\n                d: 'M67.5001,363.7384 C67.1251,364.3824 67.1251,365.0954 67.5001,365.7384 C67.9351,366.3814 68.2701,367.0514 68.5001,367.7384 C68.5001,367.7384 66.5301,366.5334 66.5001,365.7384 C66.5221,365.0194 66.8721,364.3224 67.5001,363.7384',\n                attr: {\n                    fill: '#F3CBAC',\n                    transform: 'translate(21.000000, 0.261000)'\n                }\n            }, {\n                d: 'M77.5001,368.7384 C78.3011,368.2154 78.9241,367.5254 79.3041,366.7384 C79.7461,365.6004 79.3041,363.7384 79.3041,363.7384 L78.7021,363.7384 C78.6971,364.5954 78.4931,365.4454 78.1011,366.2384 C77.8241,366.7154 77.6221,367.2184 77.5001,367.7384 L77.5001,368.7384 Z',\n                attr: {\n                    fill: '#F3CBAC',\n                    transform: 'translate(21.000000, 0.261000)'\n                }\n            }]\n        },\n        back: {\n            wholeBody: [\n            //头部\n            {\n                d: 'M106.1544,51.8696 C105.2004,55.8026 103.3984,58.3676 100.0754,58.8706 C96.8354,69.3326 90.6334,78.0356 84.6264,83.3526 L84.6234,83.3556 C80.6284,86.8906 76.7214,88.9296 73.8304,88.9966 C73.7794,88.9986 73.7294,88.9986 73.6814,88.9986 C70.7634,88.9986 66.9424,87.1136 63.0444,83.7766 C63.0364,83.7686 63.0254,83.7626 63.0194,83.7536 C56.8464,78.4716 50.4894,69.5676 47.2304,58.8096 C44.1324,58.1806 42.4224,55.6556 41.5054,51.8696 C41.1394,50.3646 40.9724,49.0596 41.0034,47.9666 C41.0074,47.8126 41.0144,47.6636 41.0284,47.5166 C41.0894,46.7386 41.2624,46.0886 41.5444,45.5696 C41.5914,45.4816 41.6414,45.3966 41.6974,45.3176 C41.7914,45.1786 41.8914,45.0506 42.0044,44.9366 C42.0404,44.8956 42.0804,44.8596 42.1154,44.8276 C42.1334,44.8126 42.1474,44.7976 42.1624,44.7866 C42.1924,44.7576 42.2204,44.7326 42.2534,44.7106 C42.4944,44.5156 42.7724,44.3696 43.0844,44.2716 C43.1314,44.2566 43.1764,44.2426 43.2234,44.2286 C43.2864,44.2136 43.3504,44.1946 43.4124,44.1836 C43.4704,44.1736 43.5284,44.1616 43.5864,44.1546 C43.6434,44.1436 43.7054,44.1376 43.7664,44.1336 C43.8284,44.1246 43.8894,44.1186 43.9504,44.1186 C44.0014,44.1156 44.0514,44.1116 44.1034,44.1116 C44.3844,44.1066 44.6864,44.1286 45.0064,44.1766 L45.0064,44.1006 C45.0064,41.3146 45.1694,38.7356 45.4784,36.3556 C47.5164,20.7616 55.9244,13.6856 66.7684,11.7386 C67.4944,11.6076 68.2314,11.4976 68.9814,11.4126 C69.7454,11.3276 70.5204,11.2646 71.3044,11.2196 C71.6954,11.1996 72.0894,11.1806 72.4864,11.1736 C72.8794,11.1586 73.2804,11.1546 73.6814,11.1546 C88.5584,11.1546 100.7914,18.3426 102.2244,39.7696 C102.3134,41.1546 102.3624,42.5986 102.3624,44.1006 L102.3624,44.2326 C102.5714,44.1876 102.7734,44.1596 102.9684,44.1406 C106.2894,43.8046 107.4224,46.6546 106.1544,51.8696',\n                attr: {\n                    fill: '#F8D2B5'\n                }\n            }, {\n                d: 'M33.4044,2.6087 C3.4334,-7.5203 -3.2236,21.7077 1.2734,41.7717 C1.6214,44.7577 6.9134,60.3027 14.0004,71.0357 C19.5164,79.3907 26.1914,81.5357 32.0004,81.5357 C39.5004,81.5357 45.5024,76.9237 51.0004,68.0357 C56.4594,59.2097 60.7094,47.7457 61.0944,45.4257 C61.1664,45.4147 61.2394,45.4067 61.3114,45.3997 C61.6234,44.1817 61.9184,42.9307 62.2054,41.6507 C64.9074,29.5237 65.5094,11.2537 57.1194,3.1757 C52.2494,-1.5143 54.9804,9.8997 33.4044,2.6087',\n                attr: {\n                    fill: '#81543F',\n                    transform: 'translate(42.000000, 0.464000)'\n                }\n            }, {\n                d: 'M33.4044,2.6087 C3.4334,-7.5203 -3.2236,21.7077 1.2734,41.7717 C1.6214,44.7577 6.9134,60.3027 14.0004,71.0357 C19.5164,79.3907 26.1914,81.5357 32.0004,81.5357 C39.5004,81.5357 45.5024,76.9237 51.0004,68.0357 C56.4594,59.2097 60.7094,47.7457 61.0944,45.4257 C61.1664,45.4147 61.2394,45.4067 61.3114,45.3997 C61.6234,44.1817 61.9184,42.9307 62.2054,41.6507 C64.9074,29.5237 65.5094,11.2537 57.1194,3.1757 C52.2494,-1.5143 54.9804,9.8997 33.4044,2.6087',\n                attr: {\n                    fill: '#81543F',\n                    transform: 'translate(42.000000, 0.464000)'\n                }\n            }, {\n                d: 'M143.5002,150.0359 C142.5002,145.0359 142.0002,133.5359 142.0002,125.0359 C142.0002,116.5359 135.5002,104.0359 134.5002,98.5359 C134.0002,95.7859 135.0002,82.5359 134.0002,71.0359 C133.7002,67.6249 131.5002,62.5359 131.5002,59.0359 C131.5002,46.6849 126.7702,39.8259 126.0002,38.5359 C124.5002,36.0359 117.5002,29.5359 104.0002,25.5359 C90.5002,21.5359 88.5002,20.0359 87.0002,16.0359 C85.8862,13.0629 85.0472,5.1259 84.6892,0.8299 C84.6692,0.8489 84.6472,0.8699 84.6262,0.8889 L84.6232,0.8919 C80.6282,4.4269 76.7222,6.4659 73.8302,6.5329 C73.7792,6.5349 73.7292,6.5349 73.6822,6.5349 C70.8882,6.5349 67.2642,4.7899 63.5392,1.7149 C63.4852,11.4329 61.9752,17.0479 59.0002,18.5359 C54.0002,21.0359 38.0002,26.0359 33.0002,29.0359 C30.1092,30.7659 22.1492,32.8749 18.0002,43.0359 C15.0002,50.4659 15.4502,65.6159 14.0002,71.0359 C11.4792,80.4459 14.0002,87.6759 11.5002,96.0359 C8.6302,105.7449 6.5002,108.0359 5.5002,113.5359 C4.5002,119.0359 4.5002,128.5359 3.5002,136.0359 C2.5002,143.5359 2.0002,159.5359 1.5002,163.0359 C1.0002,166.5359 0.0002,180.5359 0.0002,183.5359 C0.7032,188.4219 2.2242,193.1549 4.5002,197.5359 C8.1602,204.2349 15.0002,210.5359 16.5002,210.0359 C18.0002,209.5359 12.5002,200.3359 11.0002,193.5359 C10.0002,189.1759 11.9202,186.6049 12.5002,187.0359 C14.9602,188.8759 14.6402,196.3149 15.0002,197.0359 C16.0002,199.0359 18.0002,202.5359 19.0002,202.0359 C19.5102,201.7859 20.7102,192.4659 19.0002,184.0359 C17.3302,175.8149 11.5002,168.5359 13.0002,164.0359 C14.5002,159.5359 23.5002,132.0359 25.0002,128.0359 C26.5002,124.0359 25.0002,116.5359 26.5002,108.5359 C27.5002,103.2019 30.3332,92.3689 35.0002,76.0359 L40.0002,94.5359 C40.8802,97.7659 41.5802,100.7159 42.1202,103.3949 L104.3002,103.3949 C105.3102,98.3399 106.7142,93.3709 108.5002,88.5359 L111.0002,76.0359 C115.2932,89.7159 118.1272,100.0489 119.5002,107.0359 C120.9602,114.4749 119.1702,120.4659 120.0002,124.0359 C121.8802,132.0849 123.1802,133.7759 124.5002,137.5359 C129.1402,150.7559 132.7602,163.1259 133.0002,166.0359 C133.4902,172.0359 128.0002,179.5359 128.0002,181.5359 C128.0002,183.5359 128.0002,189.0359 127.5002,194.0359 C127.1652,196.6909 127.1652,199.3799 127.5002,202.0359 C129.8302,201.0359 131.1702,198.7059 131.5002,195.0359 C132.0002,189.5359 133.0002,186.5359 134.0002,187.0359 C135.0002,187.5359 135.0002,187.5359 135.5002,189.5359 C136.0002,191.5359 134.2902,197.6759 133.0002,200.0359 C130.0002,205.5359 130.0902,209.3359 130.5002,209.5359 C131.5002,210.0359 137.5002,202.5359 139.0002,200.5359 C141.1372,197.8979 142.6732,194.8269 143.5002,191.5359 C144.1132,189.3359 144.9462,185.1689 146.0002,179.0359 C145.0002,163.0359 144.1672,153.3689 143.5002,150.0359',\n                attr: {\n                    fill: '#F8D2B5',\n                    transform: 'translate(0.000000, 82.464000)'\n                }\n            }, {\n                d: 'M74.9953,136.9995 C74.9953,136.9995 74.0003,157.6425 74.0003,172.1235 C74.0003,180.6535 74.9953,200.9995 74.9953,200.9995 C74.9953,200.9995 76.1143,182.8745 75.9903,172.1235 C75.8663,161.3735 74.9953,136.9995 74.9953,136.9995',\n                attr: {\n                    fill: '#F2C4A2'\n                }\n            }, {\n                d: 'M105.1398,225.5292 C104.8758,224.7002 104.6618,223.8542 104.4998,223.0002 C103.8698,219.6592 104.4998,215.9992 104.4998,213.4992 C104.4998,205.7692 103.4998,201.9992 103.4998,193.4992 C103.5338,190.9332 103.8008,188.3762 104.2998,185.8592 L42.1198,185.8592 C43.4128,192.3192 43.7058,197.1992 42.9998,200.4992 C41.9998,205.1662 41.3328,212.6662 40.9998,223.0002 C40.9198,223.1792 40.8598,223.3492 40.7808,223.5292 C57.6328,225.5292 68.1668,226.5292 72.3798,226.5292 C76.5928,226.5292 87.5138,226.1962 105.1398,225.5292',\n                attr: {\n                    fill: '#F8D2B5'\n                }\n            }, {\n                d: 'M74.9953,136.9995 C74.9953,136.9995 74.0003,157.6425 74.0003,172.1235 C74.0003,180.6535 74.9953,200.9995 74.9953,200.9995 C74.9953,200.9995 76.1143,182.8745 75.9903,172.1235 C75.8663,161.3735 74.9953,136.9995 74.9953,136.9995',\n                attr: {\n                    fill: '#F2C4A2'\n                }\n            }, {\n                d: 'M51.0002,198.8281 C58.2912,198.2991 62.8442,198.7681 64.6572,200.2371 C66.4712,201.7051 68.8262,203.8281 71.7262,206.6041 C65.8652,202.7171 61.8682,200.7661 59.7342,200.7541 C57.6002,200.7421 54.6882,200.0991 51.0002,198.8281',\n                attr: {\n                    fill: '#F4CDAE'\n                }\n            }, {\n                d: 'M94.6252,199.228 C87.3412,198.512 82.9182,199.021 81.3562,200.756 C79.7952,202.49 77.8002,204.955 75.3712,208.15 C80.5512,203.394 84.1932,200.843 86.3002,200.497 C88.4052,200.15 91.1812,199.727 94.6252,199.228',\n                attr: {\n                    fill: '#F4CDAE'\n                }\n            }, {\n                d: 'M40.5002,223.4999 C57.5202,225.4999 68.1462,226.4999 72.3802,226.4999 C76.6132,226.4999 87.8202,226.1659 106.0002,225.4999 C109.6672,231.4999 111.8332,237.1659 112.5002,242.4999 C113.2372,249.1399 113.5712,255.8179 113.5002,262.4999 C107.1402,265.8329 101.8072,267.4999 97.5002,267.4999 C86.6302,267.4999 78.8102,263.4999 72.5002,263.4999 C67.5002,263.4999 61.5002,268.6399 51.5002,267.4999 C47.4132,267.0399 41.2462,265.3729 33.0002,262.4999 C32.9302,256.8419 33.2802,251.1859 34.0502,245.5789 C35.0822,237.9379 37.2572,230.4949 40.5002,223.4999',\n                attr: {\n                    fill: '#5FADE8'\n                }\n            }, {\n                d: 'M64.5002,327.4999 C64.5002,320.9999 66.5002,316.4999 67.5002,305.9999 C68.0802,299.9199 68.7862,285.9199 69.6202,263.9999 C65.1602,265.2199 59.6802,268.4699 51.5002,267.5399 C47.5902,267.0999 41.7702,265.5399 34.0702,262.9089 C33.2102,274.2699 32.3002,290.6989 34.0002,307.5399 C35.0002,317.1089 39.2802,326.9489 41.0002,335.5399 C43.1402,346.2389 42.0002,354.5399 42.5002,357.5399 C43.0002,360.5399 39.1892,371.2199 39.0002,390.0399 C38.8702,402.3799 45.0002,423.0399 45.5002,426.0399 C46.0002,429.0399 46.8502,447.0399 47.0002,448.5399 C47.2702,451.3799 46.9302,459.7389 46.5002,461.0399 C45.9902,462.5789 34.0002,468.5399 35.0002,473.0399 C36.0002,477.5399 48.3992,478.4089 62.0002,476.5399 C62.6402,476.4489 66.5002,476.5399 67.0002,473.0399 C67.5002,469.5399 62.9102,456.9699 62.0002,453.0399 C60.7602,447.7099 61.3302,443.5099 61.0002,440.5399 C59.9712,431.5409 60.3082,422.4379 62.0002,413.5399 C64.0002,401.6889 65.9202,391.0499 65.5002,385.5399 C64.2902,369.7199 61.4392,361.2699 62.0002,359.0399 C63.5002,352.9999 64.5002,333.9999 64.5002,327.4999',\n                attr: {\n                    fill: '#F8D2B5'\n                }\n            }, {\n                d: 'M112.2296,263.1396 C106.4296,266.0296 101.5096,267.4996 97.5006,267.4996 C88.7006,267.4996 81.8996,264.8796 76.2806,263.8796 C76.1796,271.6726 76.2526,277.5456 76.5006,281.4996 C77.7696,301.5596 80.5706,315.8286 81.5006,324.9996 C82.2096,331.9996 81.7196,339.2496 82.0006,344.9996 C82.3596,352.4796 83.3796,357.6796 83.5006,358.9996 C84.5006,370.1896 80.4296,379.8196 81.0006,384.9996 C82.6606,400.0786 84.4506,410.4696 85.0006,416.4996 C85.9726,426.3196 85.8046,436.2186 84.5006,445.9996 C83.8336,451.6656 83.5006,455.1656 83.5006,456.4996 C83.5006,457.6996 79.2996,467.6296 81.0006,472.9996 C82.1396,476.5996 89.0496,476.4996 90.0006,476.4996 C98.4396,476.4996 113.5006,474.4996 111.0006,470.4996 C109.3336,467.8326 104.8336,464.6656 97.5006,460.9996 C98.8336,451.9996 99.6666,444.1656 100.0006,437.4996 C100.5006,427.4996 107.0006,400.9996 107.0006,392.9996 C107.0006,384.9996 104.0006,373.4996 104.0006,361.4996 C104.0006,349.4996 105.5006,334.4996 106.5006,329.4996 C106.9596,327.1796 109.8706,317.7396 112.0006,306.9996 C114.4596,294.6096 113.0006,278.9996 113.0006,275.4996 C113.0006,274.2596 112.6796,269.2296 112.2296,263.1396',\n                attr: {\n                    fill: '#F8D2B5'\n                }\n            }, {\n                d: 'M49.4826,363.5722 C48.5856,363.0932 47.8876,362.4622 47.4616,361.7432 C46.9656,360.7022 47.4616,359.0002 47.4616,359.0002 L48.1356,359.0002 C48.1406,359.7842 48.3706,360.5592 48.8096,361.2862 C49.1196,361.7212 49.3456,362.1822 49.4826,362.6572 L49.4826,363.5722 Z',\n                attr: {\n                    fill: '#F7CBA7'\n                }\n            }, {\n                d: 'M58.0109,359.914 C58.3899,360.502 58.3899,361.154 58.0109,361.743 C57.5709,362.33 57.2329,362.943 56.9999,363.572 C56.9999,363.572 58.9899,362.47 59.0209,361.743 C58.9979,361.086 58.6459,360.448 58.0109,359.914',\n                attr: {\n                    fill: '#F7CBA7'\n                }\n            }, {\n                d: 'M55.2755,470.2089 C55.3845,469.6479 54.5735,463.9979 54.1035,461.1719 C53.6345,458.3449 53.0005,453.2119 52.3555,452.5809 C52.0185,452.2509 51.8545,456.9799 52.3985,461.1899 C52.7985,464.2969 55.2755,470.2089 55.2755,470.2089',\n                attr: {\n                    fill: '#F2C5A1'\n                }\n            }, {\n                d: 'M58.0607,470.9999 C58.0607,470.9999 57.9237,464.2199 58.0607,463.2349 C58.1977,462.2489 58.9997,460.9999 58.9997,460.9999',\n                attr: {\n                    fill: '#F2C5A1'\n                }\n            }, {\n                d: 'M89.0002,363.9999 C88.6252,364.6429 88.6252,365.3559 89.0002,365.9999 C89.4352,366.6419 89.7702,367.3129 90.0002,367.9999 C90.0002,367.9999 88.0302,366.7939 88.0002,365.9999 C88.0222,365.2809 88.3722,364.5839 89.0002,363.9999',\n                attr: {\n                    fill: '#F7CBA7'\n                }\n            }, {\n                d: 'M99.0002,368.9999 C99.8012,368.4759 100.4242,367.7859 100.8042,366.9999 C101.2462,365.8609 100.8042,363.9999 100.8042,363.9999 L100.2022,363.9999 C100.1972,364.8569 99.9932,365.7059 99.6012,366.4999 C99.3242,366.9759 99.1222,367.4799 99.0002,367.9999 L99.0002,368.9999 Z',\n                attr: {\n                    fill: '#F7CBA7'\n                }\n            }, {\n                d: 'M89.6378,465.1181 C89.8788,465.0321 92.3808,463.7151 93.6348,463.0411 C94.8888,462.3671 97.1588,461.1941 97.4558,460.9171 C97.6138,460.7711 95.5478,461.6761 93.6858,462.6431 C92.3128,463.3571 89.6378,465.1181 89.6378,465.1181',\n                attr: {\n                    fill: '#F2C5A1'\n                }\n            }, {\n                d: 'M87.1017,465.9579 C87.1017,465.9579 86.8827,461.8939 86.6957,461.3159 C86.5077,460.7389 85.6427,460.0619 85.6427,460.0619',\n                attr: {\n                    fill: '#F2C5A1'\n                }\n            }]\n        }\n    }\n};\n\n/***/ }),\n\n/***/ \"SzyH\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.sex[data-v-29d43fb6] {\\r\\n  color: #fd9a8e;\\r\\n  height: 100%;\\r\\n  text-align: center;\\n}\\r\\n\", \"\", {\"version\":3,\"sources\":[\"F:/Doctor/CDCT_RCH_MOBILE/src/components/People/people.vue\"],\"names\":[],\"mappings\":\";AACA;EACE,eAAe;EACf,aAAa;EACb,mBAAmB;CACpB\",\"file\":\"people.vue\",\"sourcesContent\":[\"\\n.sex[data-v-29d43fb6] {\\r\\n  color: #fd9a8e;\\r\\n  height: 100%;\\r\\n  text-align: center;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"Ti6e\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar escape = __webpack_require__(\"kxFB\");\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.cdct_header .vux-header[data-v-07d6a9dc] {\\n  box-shadow: none;\\n}\\n.cdct_container[data-v-07d6a9dc] {\\n  height: 100%;\\n}\\n.tab_content[data-v-07d6a9dc] {\\n  position: relative;\\n}\\n.slideContent[data-v-07d6a9dc] {\\n  height: 100%;\\n}\\n.symptom[data-v-07d6a9dc] {\\n  height: 100%;\\n  width: 100vw;\\n  overflow: hidden;\\n}\\n.drugs[data-v-07d6a9dc] {\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden;\\n  margin-top: 1rem;\\n}\\n.drugs-box[data-v-07d6a9dc] {\\n  padding: 2.3rem 1.5rem;\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: flex;\\n  margin-bottom: 1rem;\\n  background-color: white;\\n  overflow: hidden;\\n}\\n.drugs-box .img[data-v-07d6a9dc] {\\n  width: 10rem;\\n  height: 8rem;\\n  margin-right: 1.5rem;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  background-position: center center;\\n  /* background-image: url(\\\"~viewImgs/drugsAndElse/test-1.png\\\"); */\\n  margin-top: 0.4rem;\\n}\\n.drugs-box .img img[data-v-07d6a9dc] {\\n  width: 100%;\\n  height: 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n}\\n.drugs-box .brief[data-v-07d6a9dc] {\\n  -webkit-box-flex: 1;\\n  -webkit-flex: 1;\\n          flex: 1;\\n}\\n.brief .title[data-v-07d6a9dc] {\\n  color: #333333;\\n}\\n.brief .text[data-v-07d6a9dc] {\\n  color: #666666;\\n  font-size: 1.4rem;\\n  margin-top: 0.6rem;\\n  line-height: 1.8rem;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n  -webkit-box-orient: vertical;\\n}\\n.brief .number[data-v-07d6a9dc] {\\n  margin-top: 0.6rem;\\n  color: #999999;\\n  font-size: 1.3rem;\\n}\\n.brief .number span[data-v-07d6a9dc] {\\n  display: inline-block;\\n  margin-left: 0.8rem;\\n  color: #3cb963;\\n}\\n.drugs-content[data-v-07d6a9dc] {\\n  padding: 1rem 1.5rem;\\n  background-color: white;\\n}\\n.con-text[data-v-07d6a9dc] {\\n  margin-bottom: 1.5rem;\\n}\\n.con-text > h3[data-v-07d6a9dc] {\\n  color: #333333;\\n  font-size: 1.6rem;\\n  margin-bottom: .5rem;\\n}\\n.con-text > p[data-v-07d6a9dc] {\\n  color: #666666;\\n  font-size: 1.4rem;\\n}\\n.con-brief[data-v-07d6a9dc] {\\n  color: #666666;\\n  font-size: 1.4rem;\\n  padding: 1.5rem 0 .5rem 0;\\n}\\n.error[data-v-07d6a9dc] {\\n  background-image: url(\" + escape(__webpack_require__(\"tMBN\")) + \");\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"F:/Doctor/CDCT_RCH_MOBILE/src/views/drugsAndElse/symptoms.vue\"],\"names\":[],\"mappings\":\";AACA;EACE,iBAAiB;CAClB;AACD;EACE,aAAa;CACd;AACD;EACE,mBAAmB;CACpB;AACD;EACE,aAAa;CACd;AACD;EACE,aAAa;EACb,aAAa;EACb,iBAAiB;CAClB;AACD;EACE,YAAY;EACZ,aAAa;EACb,iBAAiB;EACjB,iBAAiB;CAClB;AACD;EACE,uBAAuB;EACvB,qBAAqB;EACrB,sBAAsB;EACtB,cAAc;EACd,oBAAoB;EACpB,wBAAwB;EACxB,iBAAiB;CAClB;AACD;EACE,aAAa;EACb,aAAa;EACb,qBAAqB;EACrB,6BAA6B;EAC7B,uBAAuB;EACvB,mCAAmC;EACnC,iEAAiE;EACjE,mBAAmB;CACpB;AACD;EACE,YAAY;EACZ,aAAa;EACb,gBAAgB;EAChB,iBAAiB;CAClB;AACD;EACE,oBAAoB;EACpB,gBAAgB;UACR,QAAQ;CACjB;AACD;EACE,eAAe;CAChB;AACD;EACE,eAAe;EACf,kBAAkB;EAClB,mBAAmB;EACnB,oBAAoB;EACpB,iBAAiB;EACjB,wBAAwB;EACxB,qBAAqB;EACrB,sBAAsB;EACtB,6BAA6B;CAC9B;AACD;EACE,mBAAmB;EACnB,eAAe;EACf,kBAAkB;CACnB;AACD;EACE,sBAAsB;EACtB,oBAAoB;EACpB,eAAe;CAChB;AACD;EACE,qBAAqB;EACrB,wBAAwB;CACzB;AACD;EACE,sBAAsB;CACvB;AACD;EACE,eAAe;EACf,kBAAkB;EAClB,qBAAqB;CACtB;AACD;EACE,eAAe;EACf,kBAAkB;CACnB;AACD;EACE,eAAe;EACf,kBAAkB;EAClB,0BAA0B;CAC3B;AACD;EACE,gDAA8D;CAC/D\",\"file\":\"symptoms.vue\",\"sourcesContent\":[\"\\n.cdct_header .vux-header[data-v-07d6a9dc] {\\n  box-shadow: none;\\n}\\n.cdct_container[data-v-07d6a9dc] {\\n  height: 100%;\\n}\\n.tab_content[data-v-07d6a9dc] {\\n  position: relative;\\n}\\n.slideContent[data-v-07d6a9dc] {\\n  height: 100%;\\n}\\n.symptom[data-v-07d6a9dc] {\\n  height: 100%;\\n  width: 100vw;\\n  overflow: hidden;\\n}\\n.drugs[data-v-07d6a9dc] {\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden;\\n  margin-top: 1rem;\\n}\\n.drugs-box[data-v-07d6a9dc] {\\n  padding: 2.3rem 1.5rem;\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: flex;\\n  margin-bottom: 1rem;\\n  background-color: white;\\n  overflow: hidden;\\n}\\n.drugs-box .img[data-v-07d6a9dc] {\\n  width: 10rem;\\n  height: 8rem;\\n  margin-right: 1.5rem;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  background-position: center center;\\n  /* background-image: url(\\\"~viewImgs/drugsAndElse/test-1.png\\\"); */\\n  margin-top: 0.4rem;\\n}\\n.drugs-box .img img[data-v-07d6a9dc] {\\n  width: 100%;\\n  height: 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n}\\n.drugs-box .brief[data-v-07d6a9dc] {\\n  -webkit-box-flex: 1;\\n  -webkit-flex: 1;\\n          flex: 1;\\n}\\n.brief .title[data-v-07d6a9dc] {\\n  color: #333333;\\n}\\n.brief .text[data-v-07d6a9dc] {\\n  color: #666666;\\n  font-size: 1.4rem;\\n  margin-top: 0.6rem;\\n  line-height: 1.8rem;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n  -webkit-box-orient: vertical;\\n}\\n.brief .number[data-v-07d6a9dc] {\\n  margin-top: 0.6rem;\\n  color: #999999;\\n  font-size: 1.3rem;\\n}\\n.brief .number span[data-v-07d6a9dc] {\\n  display: inline-block;\\n  margin-left: 0.8rem;\\n  color: #3cb963;\\n}\\n.drugs-content[data-v-07d6a9dc] {\\n  padding: 1rem 1.5rem;\\n  background-color: white;\\n}\\n.con-text[data-v-07d6a9dc] {\\n  margin-bottom: 1.5rem;\\n}\\n.con-text > h3[data-v-07d6a9dc] {\\n  color: #333333;\\n  font-size: 1.6rem;\\n  margin-bottom: .5rem;\\n}\\n.con-text > p[data-v-07d6a9dc] {\\n  color: #666666;\\n  font-size: 1.4rem;\\n}\\n.con-brief[data-v-07d6a9dc] {\\n  color: #666666;\\n  font-size: 1.4rem;\\n  padding: 1.5rem 0 .5rem 0;\\n}\\n.error[data-v-07d6a9dc] {\\n  background-image: url('~viewImgs/chronicDisease/errorBg.png');\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"cTPc\":\n/***/ (function(module, exports) {\n\n/*!\r\n* svg.panzoom.js - A plugin for svg.js that enables panzoom for viewport elements\r\n* @version 1.1.1\r\n* https://github.com/svgdotjs/svg.panzoom.js#readme\r\n*\r\n* @copyright Ulrich-Matthias Schäfer\r\n* @license MIT\r\n*/;\n;(function () {\n      \"use strict\";\n\n      var normalizeEvent = function normalizeEvent(ev) {\n            if (!ev.touches) {\n                  ev.touches = [{ clientX: ev.clientX, clientY: ev.clientY }];\n            }\n\n            return ev.touches;\n      };\n\n      SVG.extend(SVG.Doc, SVG.Nested, {\n\n            panZoom: function panZoom(options) {\n                  this.off('.panZoom');\n\n                  // when called with false, disable panZoom\n                  if (options === false) return this;\n\n                  options = options || {};\n                  var zoomFactor = options.zoomFactor || 0.03;\n                  var zoomMin = options.zoomMin || Number.MIN_VALUE;\n                  var zoomMax = options.zoomMax || Number.MAX_VALUE;\n\n                  var lastP,\n                      lastTouches,\n                      zoomInProgress = false;\n\n                  var wheelZoom = function wheelZoom(ev) {\n                        ev.preventDefault();\n\n                        // touchpads can give ev.deltaY == 0, which skews the lvl calculation\n                        if (ev.deltaY == 0) return;\n\n                        var lvl = this.zoom() - zoomFactor * ev.deltaY / Math.abs(ev.deltaY),\n                            p = this.point(ev.clientX, ev.clientY);\n\n                        if (lvl > zoomMax) lvl = zoomMax;\n\n                        if (lvl < zoomMin) lvl = zoomMin;\n\n                        this.zoom(lvl, p);\n                  };\n\n                  var pinchZoomStart = function pinchZoomStart(ev) {\n                        lastTouches = normalizeEvent(ev);\n\n                        if (lastTouches.length < 2) return;\n                        ev.preventDefault();\n\n                        if (this.fire('pinchZoomStart', { event: ev }).event().defaultPrevented) return;\n\n                        this.off('touchstart.panZoom', pinchZoomStart);\n\n                        zoomInProgress = true;\n                        SVG.on(document, 'touchmove.panZoom', pinchZoom, this, { passive: false });\n                        SVG.on(document, 'touchend.panZoom', pinchZoomStop, this, { passive: false });\n                  };\n\n                  var pinchZoomStop = function pinchZoomStop(ev) {\n                        ev.preventDefault();\n                        zoomInProgress = false;\n\n                        this.fire('pinchZoomEnd', { event: ev });\n\n                        SVG.off(document, 'touchmove.panZoom', pinchZoom);\n                        SVG.off(document, 'touchend.panZoom', pinchZoomStop);\n                        this.on('touchstart.panZoom', pinchZoomStart);\n                  };\n\n                  var pinchZoom = function pinchZoom(ev) {\n                        ev.preventDefault();\n\n                        var currentTouches = normalizeEvent(ev),\n                            zoom = this.zoom();\n\n                        // Distance Formula\n                        var lastDelta = Math.sqrt(Math.pow(lastTouches[0].clientX - lastTouches[1].clientX, 2) + Math.pow(lastTouches[0].clientY - lastTouches[1].clientY, 2));\n\n                        var currentDelta = Math.sqrt(Math.pow(currentTouches[0].clientX - currentTouches[1].clientX, 2) + Math.pow(currentTouches[0].clientY - currentTouches[1].clientY, 2));\n\n                        var zoomAmount = lastDelta / currentDelta;\n\n                        if (zoom < zoomMin && zoomAmount > 1 || zoom > zoomMax && zoomAmount < 1) zoomAmount = 1;\n\n                        var currentFocus = {\n                              x: currentTouches[0].clientX + 0.5 * (currentTouches[1].clientX - currentTouches[0].clientX),\n                              y: currentTouches[0].clientY + 0.5 * (currentTouches[1].clientY - currentTouches[0].clientY)\n                        };\n\n                        var lastFocus = {\n                              x: lastTouches[0].clientX + 0.5 * (lastTouches[1].clientX - lastTouches[0].clientX),\n                              y: lastTouches[0].clientY + 0.5 * (lastTouches[1].clientY - lastTouches[0].clientY)\n                        };\n\n                        var p = this.point(currentFocus.x, currentFocus.y);\n                        var focusP = this.point(2 * currentFocus.x - lastFocus.x, 2 * currentFocus.y - lastFocus.y);\n                        var box = new SVG.Box(this.viewbox()).transform(new SVG.Matrix().translate(p.x, p.y).scale(zoomAmount, 0, 0).translate(-focusP.x, -focusP.y));\n\n                        this.viewbox(box);\n\n                        lastTouches = currentTouches;\n\n                        this.fire('zoom', { box: box, focus: focusP });\n                  };\n\n                  var panStart = function panStart(ev) {\n                        ev.preventDefault();\n\n                        this.off('mousedown.panZoom', panStart);\n\n                        lastTouches = normalizeEvent(ev);\n\n                        if (zoomInProgress) return;\n\n                        this.fire('panStart', { event: ev });\n\n                        lastP = { x: lastTouches[0].clientX, y: lastTouches[0].clientY };\n\n                        SVG.on(document, 'mousemove.panZoom', panning, this);\n                        SVG.on(document, 'mouseup.panZoom', panStop, this);\n                  };\n\n                  var panStop = function panStop(ev) {\n                        ev.preventDefault();\n\n                        this.fire('panEnd', { event: ev });\n\n                        SVG.off(document, 'mousemove.panZoom', panning);\n                        SVG.off(document, 'mouseup.panZoom', panStop);\n                        this.on('mousedown.panZoom', panStart);\n                  };\n\n                  var panning = function panning(ev) {\n                        ev.preventDefault();\n\n                        var currentTouches = normalizeEvent(ev);\n\n                        var currentP = { x: currentTouches[0].clientX, y: currentTouches[0].clientY },\n                            p1 = this.point(currentP.x, currentP.y),\n                            p2 = this.point(lastP.x, lastP.y),\n                            deltaP = [p2.x - p1.x, p2.y - p1.y],\n                            box = new SVG.Box(this.viewbox()).transform(new SVG.Matrix().translate(deltaP[0], deltaP[1]));\n\n                        this.viewbox(box);\n                        lastP = currentP;\n                  };\n\n                  this.on('wheel.panZoom', wheelZoom);\n                  this.on('touchstart.panZoom', pinchZoomStart, this, { passive: false });\n                  this.on('mousedown.panZoom', panStart, this);\n\n                  return this;\n            },\n\n            zoom: function zoom(level, point) {\n                  var style = window.getComputedStyle(this.node),\n                      width = parseFloat(style.getPropertyValue('width')),\n                      height = parseFloat(style.getPropertyValue('height')),\n                      v = this.viewbox(),\n                      zoomX = width / v.width,\n                      zoomY = height / v.height,\n                      zoom = Math.min(zoomX, zoomY);\n\n                  if (level == null) {\n                        return zoom;\n                  }\n\n                  var zoomAmount = zoom / level;\n                  if (zoomAmount === Infinity) zoomAmount = Number.MIN_VALUE;\n\n                  point = point || new SVG.Point(width / 2 / zoomX + v.x, height / 2 / zoomY + v.y);\n\n                  var box = new SVG.Box(v).transform(new SVG.Matrix().scale(zoomAmount, point.x, point.y));\n\n                  if (this.fire('zoom', { box: box, focus: point }).event().defaultPrevented) return this;\n\n                  return this.viewbox(box);\n            }\n      });\n\n      SVG.extend(SVG.FX, {\n            zoom: function zoom(level, point) {\n                  return this.add('zoom', [new SVG.Number(level)].concat(point || []));\n            }\n      });\n})();\n\n/***/ }),\n\n/***/ \"h2kR\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/core-js/object/keys.js\nvar keys = __webpack_require__(\"fZjL\");\nvar keys_default = /*#__PURE__*/__webpack_require__.n(keys);\n\n// EXTERNAL MODULE: ./node_modules/vux/src/components/x-header/index.vue + 3 modules\nvar x_header = __webpack_require__(\"ABCa\");\n\n// EXTERNAL MODULE: ./node_modules/vux/src/components/tab/tab.vue + 3 modules\nvar tab = __webpack_require__(\"odqc\");\n\n// EXTERNAL MODULE: ./node_modules/vux/src/components/tab/tab-item.vue + 3 modules\nvar tab_item = __webpack_require__(\"Znkm\");\n\n// EXTERNAL MODULE: ./node_modules/vux/src/components/inline-loading/index.vue + 3 modules\nvar inline_loading = __webpack_require__(\"jijt\");\n\n// EXTERNAL MODULE: ./src/components/Slide/slide.vue + 3 modules\nvar slide = __webpack_require__(\"IT6Q\");\n\n// EXTERNAL MODULE: ./src/components/tabs/tabs.vue + 7 modules\nvar tabs = __webpack_require__(\"u+1G\");\n\n// EXTERNAL MODULE: ./src/components/People/people.vue + 3 modules\nvar people = __webpack_require__(\"0Ykn\");\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vux-loader/src/script-loader.js!./node_modules/vux-loader/src/script-loader.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/views/drugsAndElse/symptoms.vue\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var symptoms = ({\n  components: {\n    XHeader: x_header[\"a\" /* default */],\n    Tab: tab[\"a\" /* default */],\n    TabItem: tab_item[\"a\" /* default */],\n    InlineLoading: inline_loading[\"a\" /* default */],\n    slide: slide[\"a\" /* default */],\n    SvgProple: people[\"a\" /* default */],\n    Tabs: tabs[\"a\" /* default */]\n  },\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    // 用于做缓存\n\n    if (to.name == 'drugsDetails') {\n\n      localStorage.setItem('lastcodeduge_Y', this.$route.params.code || window.localStorage.lastcodeduge_Y);\n    } else {\n      localStorage.removeItem('lastcodeduge_Y');\n    }\n    next();\n  },\n  data: function data() {\n    return {\n      tabIndex: 0,\n      defalutText: '--',\n      locationName: '',\n      pageIndex: 1,\n      pageSize: 15,\n      dataobj: {},\n      list: []\n    };\n  },\n  mounted: function mounted() {\n    this.locationName = this.$route.params.name;\n    this.initdata();\n  },\n\n  methods: {\n    initdata: function initdata() {\n      var _this = this;\n\n      this.$ajax.post(this.$root.host, {\n        'MSH.1': 'diseasepool',\n        'MSH.2': 'getDisease',\n        'cbm': this.$route.params.code || window.localStorage.lastcodeduge_Y,\n        'token': this.$root.loginInfo.token\n      }).then(function (data) {\n        console.log(data);\n        if (typeof data != 'undefined' && keys_default()(data).length > 0) {\n          //判断是否空对象\n\n          _this.dataobj = data;\n        } else {\n          _this.dataobj = {};\n        }\n      });\n    },\n    initdrugdata: function initdrugdata() {\n      var _this2 = this;\n\n      this.$ajax.post(this.$root.host, {\n        'MSH.1': 'diseasepool',\n        'MSH.2': 'listDrug',\n        \"pageIndex\": this.pageIndex,\n        \"pageSize\": this.pageSize,\n        'cbm': this.$route.params.code || window.localStorage.lastcodeduge_Y,\n        'token': this.$root.loginInfo.token\n      }).then(function (data) {\n        console.log(data);\n        _this2.$refs.scroll.finishPullUp();\n        _this2.$refs.scroll.finishPullDown();\n        if (typeof data != 'undefined') {\n          //判断是否空对象\n          if (typeof data.rows != 'undefined' && data.rows.length > 0) {\n\n            if (_this2.pageIndex == 1) {\n              _this2.list = data.rows;\n            } else {\n              _this2.list = _this2.list.concat(data.rows);\n            }\n          } else {\n            _this2.judge();\n          }\n        } else {\n          _this2.judge();\n        }\n      });\n    },\n    judge: function judge() {\n      //无数据判断\n      if (this.pageIndex > 1) {\n        this.$vux.toast.text('没有更多了', 'bottom');\n      } else {\n        this.list = [];\n      }\n    },\n    pullingDown: function pullingDown() {\n      this.pageIndex = 1;\n      this.initdrugdata();\n    },\n    pullingUp: function pullingUp() {\n      this.pageIndex++;\n      this.initdrugdata();\n    },\n    todrugDetail: function todrugDetail(code) {\n      this.$router.push({\n        name: 'drugsDetails',\n        params: {\n          code: code\n        }\n      });\n    }\n  },\n  watch: {\n    tabIndex: function tabIndex(index) {\n      this.$refs.slide.goToPage(index);\n      if (this.list.length == 0 && index == 1) {\n        this.initdrugdata();\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vux-loader/src/script-loader.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/views/drugsAndElse/symptoms.vue\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var drugsAndElse_symptoms = ({\n  components: {\n    XHeader: x_header[\"a\" /* default */],\n    Tab: tab[\"a\" /* default */],\n    TabItem: tab_item[\"a\" /* default */],\n    InlineLoading: inline_loading[\"a\" /* default */],\n    slide: slide[\"a\" /* default */],\n    SvgProple: people[\"a\" /* default */],\n    Tabs: tabs[\"a\" /* default */]\n  },\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    // 用于做缓存\n\n    if (to.name == 'drugsDetails') {\n\n      localStorage.setItem('lastcodeduge_Y', this.$route.params.code || window.localStorage.lastcodeduge_Y);\n    } else {\n      localStorage.removeItem('lastcodeduge_Y');\n    }\n    next();\n  },\n  data: function data() {\n    return {\n      tabIndex: 0,\n      defalutText: '--',\n      locationName: '',\n      pageIndex: 1,\n      pageSize: 15,\n      dataobj: {},\n      list: []\n    };\n  },\n  mounted: function mounted() {\n    this.locationName = this.$route.params.name;\n    this.initdata();\n  },\n\n  methods: {\n    initdata: function initdata() {\n      var _this = this;\n\n      this.$ajax.post(this.$root.host, {\n        'MSH.1': 'diseasepool',\n        'MSH.2': 'getDisease',\n        'cbm': this.$route.params.code || window.localStorage.lastcodeduge_Y,\n        'token': this.$root.loginInfo.token\n      }).then(function (data) {\n        console.log(data);\n        if (typeof data != 'undefined' && keys_default()(data).length > 0) {\n          //判断是否空对象\n\n          _this.dataobj = data;\n        } else {\n          _this.dataobj = {};\n        }\n      });\n    },\n    initdrugdata: function initdrugdata() {\n      var _this2 = this;\n\n      this.$ajax.post(this.$root.host, {\n        'MSH.1': 'diseasepool',\n        'MSH.2': 'listDrug',\n        \"pageIndex\": this.pageIndex,\n        \"pageSize\": this.pageSize,\n        'cbm': this.$route.params.code || window.localStorage.lastcodeduge_Y,\n        'token': this.$root.loginInfo.token\n      }).then(function (data) {\n        console.log(data);\n        _this2.$refs.scroll.finishPullUp();\n        _this2.$refs.scroll.finishPullDown();\n        if (typeof data != 'undefined') {\n          //判断是否空对象\n          if (typeof data.rows != 'undefined' && data.rows.length > 0) {\n\n            if (_this2.pageIndex == 1) {\n              _this2.list = data.rows;\n            } else {\n              _this2.list = _this2.list.concat(data.rows);\n            }\n          } else {\n            _this2.judge();\n          }\n        } else {\n          _this2.judge();\n        }\n      });\n    },\n    judge: function judge() {\n      //无数据判断\n      if (this.pageIndex > 1) {\n        this.$vux.toast.text('没有更多了', 'bottom');\n      } else {\n        this.list = [];\n      }\n    },\n    pullingDown: function pullingDown() {\n      this.pageIndex = 1;\n      this.initdrugdata();\n    },\n    pullingUp: function pullingUp() {\n      this.pageIndex++;\n      this.initdrugdata();\n    },\n    todrugDetail: function todrugDetail(code) {\n      this.$router.push({\n        name: 'drugsDetails',\n        params: {\n          code: code\n        }\n      });\n    }\n  },\n  watch: {\n    tabIndex: function tabIndex(index) {\n      this.$refs.slide.goToPage(index);\n      if (this.list.length == 0 && index == 1) {\n        this.initdrugdata();\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-07d6a9dc\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vux-loader/src/before-template-compiler-loader.js!./node_modules/vux-loader/src/template-loader.js!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/drugsAndElse/symptoms.vue\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cdct_container\"},[_c('div',{staticClass:\"cdct_header vux-1px-b\"},[_c('XHeader',{attrs:{\"left-options\":{backText: '',preventGoBack: true}},on:{\"on-click-back\":function($event){_vm.$router.goBack()}}},[_vm._v(_vm._s(_vm.locationName))])],1),_vm._v(\" \"),_c('tab',{attrs:{\"active-colo\":\"#3CB963\",\"default-color\":\"#333\",\"custom-bar-width\":\"80px\",\"line-width\":2,\"bar-active-color\":\"#3CB963\"},model:{value:(_vm.tabIndex),callback:function ($$v) {_vm.tabIndex=$$v},expression:\"tabIndex\"}},[_c('tab-item',[_vm._v(\"概述\")]),_vm._v(\" \"),_c('tab-item',[_vm._v(\"药品\")])],1),_vm._v(\" \"),_c('slide',{ref:\"slide\",staticStyle:{\"width\":\"100%\",\"height\":\"calc(100% - 56px)\"},attrs:{\"currentPageIndex\":_vm.tabIndex},on:{\"update:currentPageIndex\":function($event){_vm.tabIndex=$event}}},[_c('scroll',{staticClass:\"tab_content\",attrs:{\"padTop\":false}},[_c('div',{staticClass:\"drugs-content\"},[_c('div',{staticClass:\"con-brief\",domProps:{\"innerHTML\":_vm._s(_vm.dataobj.CJBGS)}}),_vm._v(\" \"),_c('div',{staticClass:\"con-text\"},[_c('h3',[_vm._v(\"【症状描述】\")]),_vm._v(\" \"),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.dataobj.CZZMS)}})]),_vm._v(\" \"),_c('div',{staticClass:\"con-text\"},[_c('h3',[_vm._v(\"【病因】\")]),_vm._v(\" \"),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.dataobj.CBY)}})]),_vm._v(\" \"),_c('div',{staticClass:\"con-text\"},[_c('h3',[_vm._v(\"【并发症】\")]),_vm._v(\" \"),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.dataobj.CBFZ)}})]),_vm._v(\" \"),_c('div',{staticClass:\"con-text\"},[_c('h3',[_vm._v(\"【诊断与鉴别诊断】\")]),_vm._v(\" \"),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.dataobj.CZDYJB)}})]),_vm._v(\" \"),_c('div',{staticClass:\"con-text\"},[_c('h3',[_vm._v(\"【治疗】\")]),_vm._v(\" \"),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.dataobj.CZL)}})]),_vm._v(\" \"),_c('div',{staticClass:\"con-text\"},[_c('h3',[_vm._v(\"【预防保健】\")]),_vm._v(\" \"),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.dataobj.CYFBJ)}})])])]),_vm._v(\" \"),_c('scroll',{ref:\"scroll\",staticClass:\"tab_content\",attrs:{\"padTop\":false,\"data\":_vm.list,\"pullDownRefresh\":true,\"isloading\":_vm.$store.state.CONTROL_LOADDING},on:{\"pullingDown\":_vm.pullingDown,\"pullingUp\":_vm.pullingUp}},[_c('div',{staticClass:\"drugs\"},_vm._l((_vm.list),function(obj,index){return _c('div',{key:index,staticClass:\"drugs-box\",on:{\"click\":function($event){_vm.todrugDetail(obj.CBM)}}},[_c('div',{staticClass:\"img\"},[_c('img',{attrs:{\"src\":obj.CYPXT?obj.CYPXT:'muyou',\"alt\":\"\",\"onerror\":_vm.$root.defaultImg}})]),_vm._v(\" \"),_c('div',{staticClass:\"brief\"},[_c('span',{staticClass:\"title\",domProps:{\"innerHTML\":_vm._s(obj.CYPMC)}}),_vm._v(\" \"),_c('p',{staticClass:\"text\",domProps:{\"innerHTML\":_vm._s(obj.CYPJJ)}}),_vm._v(\" \"),_c('div',{staticClass:\"number\"},[_vm._v(\"参考价\"),_c('span',[_vm._v(\"￥\")]),_c('span',{domProps:{\"innerHTML\":_vm._s(obj.CZDCKJG)}})])])])})),_vm._v(\" \"),(_vm.list.length==0)?_c('div',{staticClass:\"error\"},[_vm._v(\"暂无数据\")]):_vm._e()])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ var views_drugsAndElse_symptoms = (esExports);\n// CONCATENATED MODULE: ./src/views/drugsAndElse/symptoms.vue\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"G8X/\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-07d6a9dc\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  drugsAndElse_symptoms,\n  views_drugsAndElse_symptoms,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var src_views_drugsAndElse_symptoms = __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"or9x\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.6.6\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Thu Aug 30 2018 11:37:58 GMT+0200 (GMT+02:00)\n*/;\n(function(root, factory) {\r\n  /* istanbul ignore next */\r\n  if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){\r\n      return factory(root, root.document)\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\r\n  } else {\r\n    root.SVG = factory(root, root.document)\r\n  }\r\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\r\n\r\n// Find global reference - uses 'this' by default when available,\r\n// falls back to 'window' otherwise (for bundlers like Webpack)\r\nvar globalRef = (typeof this !== \"undefined\") ? this : window;\r\n\r\n// The main wrapping element\r\nvar SVG = globalRef.SVG = function(element) {\r\n  if (SVG.supported) {\r\n    element = new SVG.Doc(element)\r\n\r\n    if(!SVG.parser.draw)\r\n      SVG.prepare()\r\n\r\n    return element\r\n  }\r\n}\r\n\r\n// Default namespaces\r\nSVG.ns    = 'http://www.w3.org/2000/svg'\r\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\r\nSVG.xlink = 'http://www.w3.org/1999/xlink'\r\nSVG.svgjs = 'http://svgjs.com/svgjs'\r\n\r\n// Svg support test\r\nSVG.supported = (function() {\r\n  return !! document.createElementNS &&\r\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\r\n})()\r\n\r\n// Don't bother to continue if SVG is not supported\r\nif (!SVG.supported) return false\r\n\r\n// Element id sequence\r\nSVG.did  = 1000\r\n\r\n// Get next named element id\r\nSVG.eid = function(name) {\r\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\r\n}\r\n\r\n// Method for element creation\r\nSVG.create = function(name) {\r\n  // create element\r\n  var element = document.createElementNS(this.ns, name)\r\n\r\n  // apply unique id\r\n  element.setAttribute('id', this.eid(name))\r\n\r\n  return element\r\n}\r\n\r\n// Method for extending objects\r\nSVG.extend = function() {\r\n  var modules, methods, key, i\r\n\r\n  // Get list of modules\r\n  modules = [].slice.call(arguments)\r\n\r\n  // Get object with extensions\r\n  methods = modules.pop()\r\n\r\n  for (i = modules.length - 1; i >= 0; i--)\r\n    if (modules[i])\r\n      for (key in methods)\r\n        modules[i].prototype[key] = methods[key]\r\n\r\n  // Make sure SVG.Set inherits any newly added methods\r\n  if (SVG.Set && SVG.Set.inherit)\r\n    SVG.Set.inherit()\r\n}\r\n\r\n// Invent new element\r\nSVG.invent = function(config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create == 'function' ?\r\n    config.create :\r\n    function() {\r\n      this.constructor.call(this, SVG.create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit)\r\n    initializer.prototype = new config.inherit\r\n\r\n  // Extend with methods\r\n  if (config.extend)\r\n    SVG.extend(initializer, config.extend)\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct)\r\n    SVG.extend(config.parent || SVG.Container, config.construct)\r\n\r\n  return initializer\r\n}\r\n\r\n// Adopt existing svg elements\r\nSVG.adopt = function(node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance) return node.instance\r\n\r\n  // initialize variables\r\n  var element\r\n\r\n  // adopt with element-specific settings\r\n  if (node.nodeName == 'svg')\r\n    element = node.parentNode instanceof window.SVGElement ? new SVG.Nested : new SVG.Doc\r\n  else if (node.nodeName == 'linearGradient')\r\n    element = new SVG.Gradient('linear')\r\n  else if (node.nodeName == 'radialGradient')\r\n    element = new SVG.Gradient('radial')\r\n  else if (SVG[capitalize(node.nodeName)])\r\n    element = new SVG[capitalize(node.nodeName)]\r\n  else\r\n    element = new SVG.Element(node)\r\n\r\n  // ensure references\r\n  element.type  = node.nodeName\r\n  element.node  = node\r\n  node.instance = element\r\n\r\n  // SVG.Class specific preparations\r\n  if (element instanceof SVG.Doc)\r\n    element.namespace().defs()\r\n\r\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n\r\n  return element\r\n}\r\n\r\n// Initialize parsing element\r\nSVG.prepare = function() {\r\n  // Select document body and create invisible svg element\r\n  var body = document.getElementsByTagName('body')[0]\r\n    , draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0)\r\n\r\n  // Create parser object\r\n  SVG.parser = {\r\n    body: body || document.documentElement\r\n  , draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').node\r\n  , poly: draw.polyline().node\r\n  , path: draw.path().node\r\n  , native: SVG.create('svg')\r\n  }\r\n}\r\n\r\nSVG.parser = {\r\n  native: SVG.create('svg')\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  if(!SVG.parser.draw)\r\n    SVG.prepare()\r\n}, false)\r\n\n// Storage for regular expressions\r\nSVG.regex = {\r\n  // Parse unit value\r\n  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n  // Parse hex value\r\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n  // Parse rgb value\r\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n  // Parse reference id\r\n, reference:        /#([a-z0-9\\-_]+)/i\r\n\r\n  // splits a transformation chain\r\n, transforms:       /\\)\\s*,?\\s*/\r\n\r\n  // Whitespace\r\n, whitespace:       /\\s/g\r\n\r\n  // Test hex value\r\n, isHex:            /^#[a-f0-9]{3,6}$/i\r\n\r\n  // Test rgb value\r\n, isRgb:            /^rgb\\(/\r\n\r\n  // Test css declaration\r\n, isCss:            /[^:]+:[^;]+;?/\r\n\r\n  // Test for blank string\r\n, isBlank:          /^(\\s+)?$/\r\n\r\n  // Test for numeric string\r\n, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n  // Test for percent value\r\n, isPercent:        /^-?[\\d\\.]+%$/\r\n\r\n  // Test for image url\r\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n  // split at whitespace and comma\r\n, delimiter:        /[\\s,]+/\r\n\r\n  // The following regex are used to parse the d attribute of a path\r\n\r\n  // Matches all hyphens which are not after an exponent\r\n, hyphen:           /([^e])\\-/gi\r\n\r\n  // Replaces and tests for all path letters\r\n, pathLetters:      /[MLHVCSQTAZ]/gi\r\n\r\n  // yes we need this one, too\r\n, isPathLetter:     /[MLHVCSQTAZ]/i\r\n\r\n  // matches 0.154.23.45\r\n, numbersWithDots:  /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\r\n  // matches .\r\n, dots:             /\\./g\r\n}\r\n\nSVG.utils = {\r\n  // Map function\r\n  map: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      result.push(block(array[i]))\r\n\r\n    return result\r\n  }\r\n\r\n  // Filter function\r\n, filter: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      if (block(array[i]))\r\n        result.push(array[i])\r\n\r\n    return result\r\n  }\r\n\r\n  // Degrees to radians\r\n, radians: function(d) {\r\n    return d % 360 * Math.PI / 180\r\n  }\r\n\r\n  // Radians to degrees\r\n, degrees: function(r) {\r\n    return r * 180 / Math.PI % 360\r\n  }\r\n\r\n, filterSVGElements: function(nodes) {\r\n    return this.filter( nodes, function(el) { return el instanceof window.SVGElement })\r\n  }\r\n\r\n}\n\r\nSVG.defaults = {\r\n  // Default attribute values\r\n  attrs: {\r\n    // fill and stroke\r\n    'fill-opacity':     1\r\n  , 'stroke-opacity':   1\r\n  , 'stroke-width':     0\r\n  , 'stroke-linejoin':  'miter'\r\n  , 'stroke-linecap':   'butt'\r\n  , fill:               '#000000'\r\n  , stroke:             '#000000'\r\n  , opacity:            1\r\n    // position\r\n  , x:                  0\r\n  , y:                  0\r\n  , cx:                 0\r\n  , cy:                 0\r\n    // size\r\n  , width:              0\r\n  , height:             0\r\n    // radius\r\n  , r:                  0\r\n  , rx:                 0\r\n  , ry:                 0\r\n    // gradient\r\n  , offset:             0\r\n  , 'stop-opacity':     1\r\n  , 'stop-color':       '#000000'\r\n    // text\r\n  , 'font-size':        16\r\n  , 'font-family':      'Helvetica, Arial, sans-serif'\r\n  , 'text-anchor':      'start'\r\n  }\r\n\r\n}\n// Module for color convertions\r\nSVG.Color = function(color) {\r\n  var match\r\n\r\n  // initialize defaults\r\n  this.r = 0\r\n  this.g = 0\r\n  this.b = 0\r\n\r\n  if(!color) return\r\n\r\n  // parse color\r\n  if (typeof color === 'string') {\r\n    if (SVG.regex.isRgb.test(color)) {\r\n      // get rgb values\r\n      match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1])\r\n      this.g = parseInt(match[2])\r\n      this.b = parseInt(match[3])\r\n\r\n    } else if (SVG.regex.isHex.test(color)) {\r\n      // get hex values\r\n      match = SVG.regex.hex.exec(fullHex(color))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1], 16)\r\n      this.g = parseInt(match[2], 16)\r\n      this.b = parseInt(match[3], 16)\r\n\r\n    }\r\n\r\n  } else if (typeof color === 'object') {\r\n    this.r = color.r\r\n    this.g = color.g\r\n    this.b = color.b\r\n\r\n  }\r\n\r\n}\r\n\r\nSVG.extend(SVG.Color, {\r\n  // Default to hex conversion\r\n  toString: function() {\r\n    return this.toHex()\r\n  }\r\n  // Build hex value\r\n, toHex: function() {\r\n    return '#'\r\n      + compToHex(this.r)\r\n      + compToHex(this.g)\r\n      + compToHex(this.b)\r\n  }\r\n  // Build rgb value\r\n, toRgb: function() {\r\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\r\n  }\r\n  // Calculate true brightness\r\n, brightness: function() {\r\n    return (this.r / 255 * 0.30)\r\n         + (this.g / 255 * 0.59)\r\n         + (this.b / 255 * 0.11)\r\n  }\r\n  // Make color morphable\r\n, morph: function(color) {\r\n    this.destination = new SVG.Color(color)\r\n\r\n    return this\r\n  }\r\n  // Get morphed color at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // normalise pos\r\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\r\n    // generate morphed color\r\n    return new SVG.Color({\r\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\r\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\r\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\r\n    })\r\n  }\r\n\r\n})\r\n\r\n// Testers\r\n\r\n// Test if given value is a color string\r\nSVG.Color.test = function(color) {\r\n  color += ''\r\n  return SVG.regex.isHex.test(color)\r\n      || SVG.regex.isRgb.test(color)\r\n}\r\n\r\n// Test if given value is a rgb object\r\nSVG.Color.isRgb = function(color) {\r\n  return color && typeof color.r == 'number'\r\n               && typeof color.g == 'number'\r\n               && typeof color.b == 'number'\r\n}\r\n\r\n// Test if given value is a color\r\nSVG.Color.isColor = function(color) {\r\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\r\n}\n// Module for array conversion\r\nSVG.Array = function(array, fallback) {\r\n  array = (array || []).valueOf()\r\n\r\n  // if array is empty and fallback is provided, use fallback\r\n  if (array.length == 0 && fallback)\r\n    array = fallback.valueOf()\r\n\r\n  // parse array\r\n  this.value = this.parse(array)\r\n}\r\n\r\nSVG.extend(SVG.Array, {\r\n  // Make array morphable\r\n  morph: function(array) {\r\n    this.destination = this.parse(array)\r\n\r\n    // normalize length of arrays\r\n    if (this.value.length != this.destination.length) {\r\n      var lastValue       = this.value[this.value.length - 1]\r\n        , lastDestination = this.destination[this.destination.length - 1]\r\n\r\n      while(this.value.length > this.destination.length)\r\n        this.destination.push(lastDestination)\r\n      while(this.value.length < this.destination.length)\r\n        this.value.push(lastValue)\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Clean up any duplicate points\r\n, settle: function() {\r\n    // find all unique values\r\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\r\n      if (seen.indexOf(this.value[i]) == -1)\r\n        seen.push(this.value[i])\r\n\r\n    // set new value\r\n    return this.value = seen\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed array\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\r\n\r\n    return new SVG.Array(array)\r\n  }\r\n  // Convert array to string\r\n, toString: function() {\r\n    return this.value.join(' ')\r\n  }\r\n  // Real value\r\n, valueOf: function() {\r\n    return this.value\r\n  }\r\n  // Parse whitespace separated string\r\n, parse: function(array) {\r\n    array = array.valueOf()\r\n\r\n    // if already is an array, no need to parse it\r\n    if (Array.isArray(array)) return array\r\n\r\n    return this.split(array)\r\n  }\r\n  // Strip unnecessary whitespace\r\n, split: function(string) {\r\n    return string.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n  }\r\n  // Reverse array\r\n, reverse: function() {\r\n    this.value.reverse()\r\n\r\n    return this\r\n  }\r\n, clone: function() {\r\n    var clone = new this.constructor()\r\n    clone.value = array_clone(this.value)\r\n    return clone\r\n  }\r\n})\n// Poly points array\r\nSVG.PointArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [[0,0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PointArray.prototype = new SVG.Array\r\nSVG.PointArray.prototype.constructor = SVG.PointArray\r\n\r\nSVG.extend(SVG.PointArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i].join(','))\r\n\r\n    return array.join(' ')\r\n  }\r\n  // Convert array to line object\r\n, toLine: function() {\r\n    return {\r\n      x1: this.value[0][0]\r\n    , y1: this.value[0][1]\r\n    , x2: this.value[1][0]\r\n    , y2: this.value[1][1]\r\n    }\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push([\r\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\r\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\r\n      ])\r\n\r\n    return new SVG.PointArray(array)\r\n  }\r\n  // Parse point string and flat array\r\n, parse: function(array) {\r\n    var points = []\r\n\r\n    array = array.valueOf()\r\n\r\n    // if it is an array\r\n    if (Array.isArray(array)) {\r\n      // and it is not flat, there is no need to parse it\r\n      if(Array.isArray(array[0])) {\r\n        // make sure to use a clone\r\n        return array.map(function (el) { return el.slice() })\r\n      } else if (array[0].x != null){\r\n        // allow point objects to be passed\r\n        return array.map(function (el) { return [el.x, el.y] })\r\n      }\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples and parse points as floats\r\n    for(var i = 0, len = array.length; i < len; i = i + 2)\r\n      points.push([ array[i], array[i+1] ])\r\n\r\n    return points\r\n  }\r\n  // Move point string\r\n, move: function(x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y))\r\n      for (var i = this.value.length - 1; i >= 0; i--)\r\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\r\n\r\n    return this\r\n  }\r\n  // Resize poly string\r\n, size: function(width, height) {\r\n    var i, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      if(box.width) this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\r\n      if(box.height) this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get bounding box of points\r\n, bbox: function() {\r\n    SVG.parser.poly.setAttribute('points', this.toString())\r\n\r\n    return SVG.parser.poly.getBBox()\r\n  }\r\n})\r\n\nvar pathHandlers = {\r\n  M: function(c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return ['M', p.x, p.y]\r\n  },\r\n  L: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['L', c[0], c[1]]\r\n  },\r\n  H: function(c, p) {\r\n    p.x = c[0]\r\n    return ['H', c[0]]\r\n  },\r\n  V: function(c, p) {\r\n    p.y = c[0]\r\n    return ['V', c[0]]\r\n  },\r\n  C: function(c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\r\n  },\r\n  S: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['S', c[0], c[1], c[2], c[3]]\r\n  },\r\n  Q: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['Q', c[0], c[1], c[2], c[3]]\r\n  },\r\n  T: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['T', c[0], c[1]]\r\n  },\r\n  Z: function(c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return ['Z']\r\n  },\r\n  A: function(c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\r\n  }\r\n}\r\n\r\nvar mlhvqtcsa = 'mlhvqtcsaz'.split('')\r\n\r\nfor(var i = 0, il = mlhvqtcsa.length; i < il; ++i){\r\n  pathHandlers[mlhvqtcsa[i]] = (function(i){\r\n    return function(c, p, p0) {\r\n      if(i == 'H') c[0] = c[0] + p.x\r\n      else if(i == 'V') c[0] = c[0] + p.y\r\n      else if(i == 'A'){\r\n        c[5] = c[5] + p.x,\r\n        c[6] = c[6] + p.y\r\n      }\r\n      else\r\n        for(var j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j%2 ? p.y : p.x)\r\n        }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsa[i].toUpperCase())\r\n}\r\n\r\n// Path points array\r\nSVG.PathArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [['M', 0, 0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PathArray.prototype = new SVG.Array\r\nSVG.PathArray.prototype.constructor = SVG.PathArray\r\n\r\nSVG.extend(SVG.PathArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    return arrayToString(this.value)\r\n  }\r\n  // Move path string\r\n, move: function(x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\r\n        l = this.value[i][0]\r\n\r\n        if (l == 'M' || l == 'L' || l == 'T')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n\r\n        } else if (l == 'H')  {\r\n          this.value[i][1] += x\r\n\r\n        } else if (l == 'V')  {\r\n          this.value[i][1] += y\r\n\r\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n          this.value[i][3] += x\r\n          this.value[i][4] += y\r\n\r\n          if (l == 'C')  {\r\n            this.value[i][5] += x\r\n            this.value[i][6] += y\r\n          }\r\n\r\n        } else if (l == 'A')  {\r\n          this.value[i][6] += x\r\n          this.value[i][7] += y\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Resize path string\r\n, size: function(width, height) {\r\n    // get bounding box of current situation\r\n    var i, l, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      l = this.value[i][0]\r\n\r\n      if (l == 'M' || l == 'L' || l == 'T')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'H')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\r\n      } else if (l == 'V')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l == 'C')  {\r\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\r\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n\r\n      } else if (l == 'A')  {\r\n        // resize radii\r\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\r\n        this.value[i][2] = (this.value[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Test if the passed path array use the same path data commands as this path array\r\n, equalCommands: function(pathArray) {\r\n    var i, il, equalCommands\r\n\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    equalCommands = this.value.length === pathArray.value.length\r\n    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\r\n      equalCommands = this.value[i][0] === pathArray.value[i][0]\r\n    }\r\n\r\n    return equalCommands\r\n  }\r\n  // Make path array morphable\r\n, morph: function(pathArray) {\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    if(this.equalCommands(pathArray)) {\r\n      this.destination = pathArray\r\n    } else {\r\n      this.destination = null\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get morphed path array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    var sourceArray = this.value\r\n      , destinationArray = this.destination.value\r\n      , array = [], pathArray = new SVG.PathArray()\r\n      , i, il, j, jl\r\n\r\n    // Animate has specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n      array[i] = [sourceArray[i][0]]\r\n      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n      }\r\n      // For the two flags of the elliptical arc command, the SVG spec say:\r\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n      // Elliptical arc command as an array followed by corresponding indexes:\r\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n      //   0    1   2        3                 4             5      6  7\r\n      if(array[i][0] === 'A') {\r\n        array[i][4] = +(array[i][4] != 0)\r\n        array[i][5] = +(array[i][5] != 0)\r\n      }\r\n    }\r\n\r\n    // Directly modify the value of a path array, this is done this way for performance\r\n    pathArray.value = array\r\n    return pathArray\r\n  }\r\n  // Absolutize and parse path to array\r\n, parse: function(array) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof SVG.PathArray) return array.valueOf()\r\n\r\n    // prepare for parsing\r\n    var i, x0, y0, s, seg, arr\r\n      , x = 0\r\n      , y = 0\r\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7, 'Z':0 }\r\n\r\n    if(typeof array == 'string'){\r\n\r\n      array = array\r\n        .replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(SVG.regex.hyphen, '$1 -')      // add space before hyphen\r\n        .trim()                                 // trim\r\n        .split(SVG.regex.delimiter)   // split into array\r\n\r\n    }else{\r\n      array = array.reduce(function(prev, curr){\r\n        return [].concat.call(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n    var arr = []\r\n      , p = new SVG.Point()\r\n      , p0 = new SVG.Point()\r\n      , index = 0\r\n      , len = array.length\r\n\r\n    do{\r\n      // Test if we have a path letter\r\n      if(SVG.regex.isPathLetter.test(array[index])){\r\n        s = array[index]\r\n        ++index\r\n      // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      }else if(s == 'M'){\r\n        s = 'L'\r\n      }else if(s == 'm'){\r\n        s = 'l'\r\n      }\r\n\r\n      arr.push(pathHandlers[s].call(null,\r\n          array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n          p, p0\r\n        )\r\n      )\r\n\r\n    }while(len > index)\r\n\r\n    return arr\r\n\r\n  }\r\n  // Get bounding box of path\r\n, bbox: function() {\r\n    SVG.parser.path.setAttribute('d', this.toString())\r\n\r\n    return SVG.parser.path.getBBox()\r\n  }\r\n\r\n})\r\n\n// Module for unit convertions\r\nSVG.Number = SVG.invent({\r\n  // Initialize\r\n  create: function(value, unit) {\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit  = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(SVG.regex.numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] == '%')\r\n          this.value /= 100\r\n        else if (unit[5] == 's')\r\n          this.value *= 1000\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n\r\n    } else {\r\n      if (value instanceof SVG.Number) {\r\n        this.value = value.valueOf()\r\n        this.unit  = value.unit\r\n      }\r\n    }\r\n\r\n  }\r\n  // Add methods\r\n, extend: {\r\n    // Stringalize\r\n    toString: function() {\r\n      return (\r\n        this.unit == '%' ?\r\n          ~~(this.value * 1e8) / 1e6:\r\n        this.unit == 's' ?\r\n          this.value / 1e3 :\r\n          this.value\r\n      ) + this.unit\r\n    }\r\n  , toJSON: function() {\r\n      return this.toString()\r\n    }\r\n  , // Convert to primitive\r\n    valueOf: function() {\r\n      return this.value\r\n    }\r\n    // Add number\r\n  , plus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this + number, this.unit || number.unit)\r\n    }\r\n    // Subtract number\r\n  , minus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this - number, this.unit || number.unit)\r\n    }\r\n    // Multiply number\r\n  , times: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this * number, this.unit || number.unit)\r\n    }\r\n    // Divide number\r\n  , divide: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this / number, this.unit || number.unit)\r\n    }\r\n    // Convert to different unit\r\n  , to: function(unit) {\r\n      var number = new SVG.Number(this)\r\n\r\n      if (typeof unit === 'string')\r\n        number.unit = unit\r\n\r\n      return number\r\n    }\r\n    // Make number morphable\r\n  , morph: function(number) {\r\n      this.destination = new SVG.Number(number)\r\n\r\n      if(number.relative) {\r\n        this.destination.value += this.value\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Get morphed number at given position\r\n  , at: function(pos) {\r\n      // Make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // Generate new morphed number\r\n      return new SVG.Number(this.destination)\r\n          .minus(this)\r\n          .times(pos)\r\n          .plus(this)\r\n    }\r\n\r\n  }\r\n})\r\n\n\r\nSVG.Element = SVG.invent({\r\n  // Initialize node\r\n  create: function(node) {\r\n    // make stroke value accessible dynamically\r\n    this._stroke = SVG.defaults.attrs.stroke\r\n    this._event = null\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    if (this.node = node) {\r\n      this.type = node.nodeName\r\n      this.node.instance = this\r\n\r\n      // store current attribute value\r\n      this._stroke = node.getAttribute('stroke') || this._stroke\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return this.attr('y', y)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\r\n    }\r\n    // Move element to given x and y values\r\n  , move: function(x, y) {\r\n      return this.x(x).y(y)\r\n    }\r\n    // Move element by its center\r\n  , center: function(x, y) {\r\n      return this.cx(x).cy(y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return this.attr('width', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('height', height)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .width(new SVG.Number(p.width))\r\n        .height(new SVG.Number(p.height))\r\n    }\r\n    // Clone element\r\n  , clone: function(parent) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(this.node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) parent.add(clone)\r\n      else this.after(clone)\r\n\r\n      return clone\r\n    }\r\n    // Remove element\r\n  , remove: function() {\r\n      if (this.parent())\r\n        this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n    // Replace element\r\n  , replace: function(element) {\r\n      this.after(element).remove()\r\n\r\n      return element\r\n    }\r\n    // Add element to given container and return self\r\n  , addTo: function(parent) {\r\n      return parent.put(this)\r\n    }\r\n    // Add element to given container and return container\r\n  , putIn: function(parent) {\r\n      return parent.add(this)\r\n    }\r\n    // Get / set id\r\n  , id: function(id) {\r\n      return this.attr('id', id)\r\n    }\r\n    // Checks whether the given point inside the bounding box of the element\r\n  , inside: function(x, y) {\r\n      var box = this.bbox()\r\n\r\n      return x > box.x\r\n          && y > box.y\r\n          && x < box.x + box.width\r\n          && y < box.y + box.height\r\n    }\r\n    // Show element\r\n  , show: function() {\r\n      return this.style('display', '')\r\n    }\r\n    // Hide element\r\n  , hide: function() {\r\n      return this.style('display', 'none')\r\n    }\r\n    // Is element visible?\r\n  , visible: function() {\r\n      return this.style('display') != 'none'\r\n    }\r\n    // Return id on string conversion\r\n  , toString: function() {\r\n      return this.attr('id')\r\n    }\r\n    // Return array of classes on the node\r\n  , classes: function() {\r\n      var attr = this.attr('class')\r\n\r\n      return attr == null ? [] : attr.trim().split(SVG.regex.delimiter)\r\n    }\r\n    // Return true if class exists on the node, false otherwise\r\n  , hasClass: function(name) {\r\n      return this.classes().indexOf(name) != -1\r\n    }\r\n    // Add class to the node\r\n  , addClass: function(name) {\r\n      if (!this.hasClass(name)) {\r\n        var array = this.classes()\r\n        array.push(name)\r\n        this.attr('class', array.join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove class from the node\r\n  , removeClass: function(name) {\r\n      if (this.hasClass(name)) {\r\n        this.attr('class', this.classes().filter(function(c) {\r\n          return c != name\r\n        }).join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Toggle the presence of a class on the node\r\n  , toggleClass: function(name) {\r\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n    }\r\n    // Get referenced element form attribute value\r\n  , reference: function(attr) {\r\n      return SVG.get(this.attr(attr))\r\n    }\r\n    // Returns the parent element instance\r\n  , parent: function(type) {\r\n      var parent = this\r\n\r\n      // check for parent\r\n      if(!parent.node.parentNode) return null\r\n\r\n      // get parent element\r\n      parent = SVG.adopt(parent.node.parentNode)\r\n\r\n      if(!type) return parent\r\n\r\n      // loop trough ancestors if type is given\r\n      while(parent && parent.node instanceof window.SVGElement){\r\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n        if(!parent.node.parentNode || parent.node.parentNode.nodeName == '#document') return null // #759, #720\r\n        parent = SVG.adopt(parent.node.parentNode)\r\n      }\r\n    }\r\n    // Get parent document\r\n  , doc: function() {\r\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\r\n    }\r\n    // return array of all ancestors of given type up to the root svg\r\n  , parents: function(type) {\r\n      var parents = [], parent = this\r\n\r\n      do{\r\n        parent = parent.parent(type)\r\n        if(!parent || !parent.node) break\r\n\r\n        parents.push(parent)\r\n      } while(parent.parent)\r\n\r\n      return parents\r\n    }\r\n    // matches the element vs a css selector\r\n  , matches: function(selector){\r\n      return matches(this.node, selector)\r\n    }\r\n    // Returns the svg node to call native svg methods on it\r\n  , native: function() {\r\n      return this.node\r\n    }\r\n    // Import raw svg\r\n  , svg: function(svg) {\r\n      // create temporary holder\r\n      var well = document.createElement('svg')\r\n\r\n      // act as a setter if svg is given\r\n      if (svg && this instanceof SVG.Parent) {\r\n        // dump raw svg\r\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<([\\w:-]+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\r\n        // transplant nodes\r\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n          this.node.appendChild(well.firstChild.firstChild)\r\n\r\n      // otherwise act as a getter\r\n      } else {\r\n        // create a wrapping svg element in case of partial content\r\n        well.appendChild(svg = document.createElement('svg'))\r\n\r\n        // write svgjs data to the dom\r\n        this.writeDataToDom()\r\n\r\n        // insert a copy of this node\r\n        svg.appendChild(this.node.cloneNode(true))\r\n\r\n        // return target element\r\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\r\n      }\r\n\r\n      return this\r\n    }\r\n  // write svgjs data to the dom\r\n  , writeDataToDom: function() {\r\n\r\n      // dump variables recursively\r\n      if(this.each || this.lines){\r\n        var fn = this.each ? this : this.lines();\r\n        fn.each(function(){\r\n          this.writeDataToDom()\r\n        })\r\n      }\r\n\r\n      // remove previously set data\r\n      this.node.removeAttribute('svgjs:data')\r\n\r\n      if(Object.keys(this.dom).length)\r\n        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n\r\n      return this\r\n    }\r\n  // set given data to the elements data property\r\n  , setData: function(o){\r\n      this.dom = o\r\n      return this\r\n    }\r\n  , is: function(obj){\r\n      return is(this, obj)\r\n    }\r\n  }\r\n})\r\n\nSVG.easing = {\r\n  '-': function(pos){return pos}\r\n, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\r\n, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\r\n, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\r\n}\r\n\r\nSVG.morph = function(pos){\r\n  return function(from, to) {\r\n    return new SVG.MorphObj(from, to).at(pos)\r\n  }\r\n}\r\n\r\nSVG.Situation = SVG.invent({\r\n\r\n  create: function(o){\r\n    this.init = false\r\n    this.reversed = false\r\n    this.reversing = false\r\n\r\n    this.duration = new SVG.Number(o.duration).valueOf()\r\n    this.delay = new SVG.Number(o.delay).valueOf()\r\n\r\n    this.start = +new Date() + this.delay\r\n    this.finish = this.start + this.duration\r\n    this.ease = o.ease\r\n\r\n    // this.loop is incremented from 0 to this.loops\r\n    // it is also incremented when in an infinite loop (when this.loops is true)\r\n    this.loop = 0\r\n    this.loops = false\r\n\r\n    this.animations = {\r\n      // functionToCall: [list of morphable objects]\r\n      // e.g. move: [SVG.Number, SVG.Number]\r\n    }\r\n\r\n    this.attrs = {\r\n      // holds all attributes which are not represented from a function svg.js provides\r\n      // e.g. someAttr: SVG.Number\r\n    }\r\n\r\n    this.styles = {\r\n      // holds all styles which should be animated\r\n      // e.g. fill-color: SVG.Color\r\n    }\r\n\r\n    this.transforms = [\r\n      // holds all transformations as transformation objects\r\n      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\r\n    ]\r\n\r\n    this.once = {\r\n      // functions to fire at a specific position\r\n      // e.g. \"0.5\": function foo(){}\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\n\r\nSVG.FX = SVG.invent({\r\n\r\n  create: function(element) {\r\n    this._target = element\r\n    this.situations = []\r\n    this.active = false\r\n    this.situation = null\r\n    this.paused = false\r\n    this.lastPos = 0\r\n    this.pos = 0\r\n    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\r\n    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\r\n    this.absPos = 0\r\n    this._speed = 1\r\n  }\r\n\r\n, extend: {\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n     * @param ease function || string Function which should be used for easing or easing keyword\r\n     * @param delay Number indicating the delay before the animation starts\r\n     * @return target || this\r\n     */\r\n    animate: function(o, ease, delay){\r\n\r\n      if(typeof o == 'object'){\r\n        ease = o.ease\r\n        delay = o.delay\r\n        o = o.duration\r\n      }\r\n\r\n      var situation = new SVG.Situation({\r\n        duration: o || 1000,\r\n        delay: delay || 0,\r\n        ease: SVG.easing[ease || '-'] || ease\r\n      })\r\n\r\n      this.queue(situation)\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * sets a delay before the next element of the queue is called\r\n     * @param delay Duration of delay in milliseconds\r\n     * @return this.target()\r\n     */\r\n  , delay: function(delay){\r\n      // The delay is performed by an empty situation with its duration\r\n      // attribute set to the duration of the delay\r\n      var situation = new SVG.Situation({\r\n        duration: delay,\r\n        delay: 0,\r\n        ease: SVG.easing['-']\r\n      })\r\n\r\n      return this.queue(situation)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param null || target SVG.Element which should be set as new target\r\n     * @return target || this\r\n     */\r\n  , target: function(target){\r\n      if(target && target instanceof SVG.Element){\r\n        this._target = target\r\n        return this\r\n      }\r\n\r\n      return this._target\r\n    }\r\n\r\n    // returns the absolute position at a given time\r\n  , timeToAbsPos: function(timestamp){\r\n      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\r\n    }\r\n\r\n    // returns the timestamp from a given absolute positon\r\n  , absPosToTime: function(absPos){\r\n      return this.situation.duration/this._speed * absPos + this.situation.start\r\n    }\r\n\r\n    // starts the animationloop\r\n  , startAnimFrame: function(){\r\n      this.stopAnimFrame()\r\n      this.animationFrame = window.requestAnimationFrame(function(){ this.step() }.bind(this))\r\n    }\r\n\r\n    // cancels the animationframe\r\n  , stopAnimFrame: function(){\r\n      window.cancelAnimationFrame(this.animationFrame)\r\n    }\r\n\r\n    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\r\n  , start: function(){\r\n      // dont start if already started\r\n      if(!this.active && this.situation){\r\n        this.active = true\r\n        this.startCurrent()\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // start the current situation\r\n  , startCurrent: function(){\r\n      this.situation.start = +new Date + this.situation.delay/this._speed\r\n      this.situation.finish = this.situation.start + this.situation.duration/this._speed\r\n      return this.initAnimations().step()\r\n    }\r\n\r\n    /**\r\n     * adds a function / Situation to the animation queue\r\n     * @param fn function / situation to add\r\n     * @return this\r\n     */\r\n  , queue: function(fn){\r\n      if(typeof fn == 'function' || fn instanceof SVG.Situation)\r\n        this.situations.push(fn)\r\n\r\n      if(!this.situation) this.situation = this.situations.shift()\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * pulls next element from the queue and execute it\r\n     * @return this\r\n     */\r\n  , dequeue: function(){\r\n      // stop current animation\r\n      this.stop()\r\n\r\n      // get next animation from queue\r\n      this.situation = this.situations.shift()\r\n\r\n      if(this.situation){\r\n        if(this.situation instanceof SVG.Situation) {\r\n          this.start()\r\n        } else {\r\n          // If it is not a SVG.Situation, then it is a function, we execute it\r\n          this.situation.call(this)\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // updates all animations to the current state of the element\r\n    // this is important when one property could be changed from another property\r\n  , initAnimations: function() {\r\n      var i, j, source\r\n      var s = this.situation\r\n\r\n      if(s.init) return this\r\n\r\n      for(i in s.animations){\r\n        source = this.target()[i]()\r\n\r\n        if(!Array.isArray(source)) {\r\n          source = [source]\r\n        }\r\n\r\n        if(!Array.isArray(s.animations[i])) {\r\n          s.animations[i] = [s.animations[i]]\r\n        }\r\n\r\n        //if(s.animations[i].length > source.length) {\r\n        //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\r\n        //}\r\n\r\n        for(j = source.length; j--;) {\r\n          // The condition is because some methods return a normal number instead\r\n          // of a SVG.Number\r\n          if(s.animations[i][j] instanceof SVG.Number)\r\n            source[j] = new SVG.Number(source[j])\r\n\r\n          s.animations[i][j] = source[j].morph(s.animations[i][j])\r\n        }\r\n      }\r\n\r\n      for(i in s.attrs){\r\n        s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i])\r\n      }\r\n\r\n      for(i in s.styles){\r\n        s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i])\r\n      }\r\n\r\n      s.initialTransformation = this.target().matrixify()\r\n\r\n      s.init = true\r\n      return this\r\n    }\r\n  , clearQueue: function(){\r\n      this.situations = []\r\n      return this\r\n    }\r\n  , clearCurrent: function(){\r\n      this.situation = null\r\n      return this\r\n    }\r\n    /** stops the animation immediately\r\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n     * @return this\r\n     */\r\n  , stop: function(jumpToEnd, clearQueue){\r\n      var active = this.active\r\n      this.active = false\r\n\r\n      if(clearQueue){\r\n        this.clearQueue()\r\n      }\r\n\r\n      if(jumpToEnd && this.situation){\r\n        // initialize the situation if it was not\r\n        !active && this.startCurrent()\r\n        this.atEnd()\r\n      }\r\n\r\n      this.stopAnimFrame()\r\n\r\n      return this.clearCurrent()\r\n    }\r\n\r\n    /** resets the element to the state where the current element has started\r\n     * @return this\r\n     */\r\n  , reset: function(){\r\n      if(this.situation){\r\n        var temp = this.situation\r\n        this.stop()\r\n        this.situation = temp\r\n        this.atStart()\r\n      }\r\n      return this\r\n    }\r\n\r\n    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\r\n  , finish: function(){\r\n\r\n      this.stop(true, false)\r\n\r\n      while(this.dequeue().situation && this.stop(true, false));\r\n\r\n      this.clearQueue().clearCurrent()\r\n\r\n      return this\r\n    }\r\n\r\n    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\r\n  , atStart: function() {\r\n      return this.at(0, true)\r\n    }\r\n\r\n    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\r\n  , atEnd: function() {\r\n      if (this.situation.loops === true) {\r\n        // If in a infinite loop, we end the current iteration\r\n        this.situation.loops = this.situation.loop + 1\r\n      }\r\n\r\n      if(typeof this.situation.loops == 'number') {\r\n        // If performing a finite number of loops, we go after all the loops\r\n        return this.at(this.situation.loops, true)\r\n      } else {\r\n        // If no loops, we just go at the end\r\n        return this.at(1, true)\r\n      }\r\n    }\r\n\r\n    // set the internal animation pointer to the specified position and updates the visualisation\r\n    // if isAbsPos is true, pos is treated as an absolute position\r\n  , at: function(pos, isAbsPos){\r\n      var durDivSpd = this.situation.duration/this._speed\r\n\r\n      this.absPos = pos\r\n      // If pos is not an absolute position, we convert it into one\r\n      if (!isAbsPos) {\r\n        if (this.situation.reversed) this.absPos = 1 - this.absPos\r\n        this.absPos += this.situation.loop\r\n      }\r\n\r\n      this.situation.start = +new Date - this.absPos * durDivSpd\r\n      this.situation.finish = this.situation.start + durDivSpd\r\n\r\n      return this.step(true)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the speed of the animations\r\n     * @param speed null || Number The new speed of the animations\r\n     * @return Number || this\r\n     */\r\n  , speed: function(speed){\r\n      if (speed === 0) return this.pause()\r\n\r\n      if (speed) {\r\n        this._speed = speed\r\n        // We use an absolute position here so that speed can affect the delay before the animation\r\n        return this.at(this.absPos, true)\r\n      } else return this._speed\r\n    }\r\n\r\n    // Make loopable\r\n  , loop: function(times, reverse) {\r\n      var c = this.last()\r\n\r\n      // store total loops\r\n      c.loops = (times != null) ? times : true\r\n      c.loop = 0\r\n\r\n      if(reverse) c.reversing = true\r\n      return this\r\n    }\r\n\r\n    // pauses the animation\r\n  , pause: function(){\r\n      this.paused = true\r\n      this.stopAnimFrame()\r\n\r\n      return this\r\n    }\r\n\r\n    // unpause the animation\r\n  , play: function(){\r\n      if(!this.paused) return this\r\n      this.paused = false\r\n      // We use an absolute position here so that the delay before the animation can be paused\r\n      return this.at(this.absPos, true)\r\n    }\r\n\r\n    /**\r\n     * toggle or set the direction of the animation\r\n     * true sets direction to backwards while false sets it to forwards\r\n     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n     * @return this\r\n     */\r\n  , reverse: function(reversed){\r\n      var c = this.last()\r\n\r\n      if(typeof reversed == 'undefined') c.reversed = !c.reversed\r\n      else c.reversed = reversed\r\n\r\n      return this\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a float from 0-1 indicating the progress of the current animation\r\n     * @param eased Boolean indicating whether the returned position should be eased or not\r\n     * @return number\r\n     */\r\n  , progress: function(easeIt){\r\n      return easeIt ? this.situation.ease(this.pos) : this.pos\r\n    }\r\n\r\n    /**\r\n     * adds a callback function which is called when the current animation is finished\r\n     * @param fn Function which should be executed as callback\r\n     * @return number\r\n     */\r\n  , after: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function wrapper(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, c)\r\n              this.off('finished.fx', wrapper) // prevent memory leak\r\n            }\r\n          }\r\n\r\n      this.target().on('finished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // adds a callback which is called whenever one animation step is performed\r\n  , during: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\r\n            }\r\n          }\r\n\r\n      // see above\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.after(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls after ALL animations in the queue are finished\r\n  , afterAll: function(fn){\r\n      var wrapper = function wrapper(e){\r\n            fn.call(this)\r\n            this.off('allfinished.fx', wrapper)\r\n          }\r\n\r\n      // see above\r\n      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls on every animation step for all animations\r\n  , duringAll: function(fn){\r\n      var wrapper = function(e){\r\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\r\n          }\r\n\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.afterAll(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n  , last: function(){\r\n      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\r\n    }\r\n\r\n    // adds one property to the animations\r\n  , add: function(method, args, type){\r\n      this.last()[type || 'animations'][method] = args\r\n      return this._callStart()\r\n    }\r\n\r\n    /** perform one step of the animation\r\n     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n     *  @return this\r\n     */\r\n  , step: function(ignoreTime){\r\n\r\n      // convert current time to an absolute position\r\n      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\r\n\r\n      // This part convert an absolute position to a position\r\n      if(this.situation.loops !== false) {\r\n        var absPos, absPosInt, lastLoop\r\n\r\n        // If the absolute position is below 0, we just treat it as if it was 0\r\n        absPos = Math.max(this.absPos, 0)\r\n        absPosInt = Math.floor(absPos)\r\n\r\n        if(this.situation.loops === true || absPosInt < this.situation.loops) {\r\n          this.pos = absPos - absPosInt\r\n          lastLoop = this.situation.loop\r\n          this.situation.loop = absPosInt\r\n        } else {\r\n          this.absPos = this.situation.loops\r\n          this.pos = 1\r\n          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\r\n          lastLoop = this.situation.loop - 1\r\n          this.situation.loop = this.situation.loops\r\n        }\r\n\r\n        if(this.situation.reversing) {\r\n          // Toggle reversed if an odd number of loops as occured since the last call of step\r\n          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\r\n        }\r\n\r\n      } else {\r\n        // If there are no loop, the absolute position must not be above 1\r\n        this.absPos = Math.min(this.absPos, 1)\r\n        this.pos = this.absPos\r\n      }\r\n\r\n      // while the absolute position can be below 0, the position must not be below 0\r\n      if(this.pos < 0) this.pos = 0\r\n\r\n      if(this.situation.reversed) this.pos = 1 - this.pos\r\n\r\n\r\n      // apply easing\r\n      var eased = this.situation.ease(this.pos)\r\n\r\n      // call once-callbacks\r\n      for(var i in this.situation.once){\r\n        if(i > this.lastPos && i <= eased){\r\n          this.situation.once[i].call(this.target(), this.pos, eased)\r\n          delete this.situation.once[i]\r\n        }\r\n      }\r\n\r\n      // fire during callback with position, eased position and current situation as parameter\r\n      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\r\n\r\n      // the user may call stop or finish in the during callback\r\n      // so make sure that we still have a valid situation\r\n      if(!this.situation){\r\n        return this\r\n      }\r\n\r\n      // apply the actual animation to every property\r\n      this.eachAt()\r\n\r\n      // do final code when situation is finished\r\n      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\r\n\r\n        // stop animation callback\r\n        this.stopAnimFrame()\r\n\r\n        // fire finished callback with current situation as parameter\r\n        this.target().fire('finished', {fx:this, situation: this.situation})\r\n\r\n        if(!this.situations.length){\r\n          this.target().fire('allfinished')\r\n\r\n          // Recheck the length since the user may call animate in the afterAll callback\r\n          if(!this.situations.length){\r\n            this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\r\n            this.active = false\r\n          }\r\n        }\r\n\r\n        // start next animation\r\n        if(this.active) this.dequeue()\r\n        else this.clearCurrent()\r\n\r\n      }else if(!this.paused && this.active){\r\n        // we continue animating when we are not at the end\r\n        this.startAnimFrame()\r\n      }\r\n\r\n      // save last eased position for once callback triggering\r\n      this.lastPos = eased\r\n      return this\r\n\r\n    }\r\n\r\n    // calculates the step for every property and calls block with it\r\n  , eachAt: function(){\r\n      var i, len, at, self = this, target = this.target(), s = this.situation\r\n\r\n      // apply animations which can be called trough a method\r\n      for(i in s.animations){\r\n\r\n        at = [].concat(s.animations[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target[i].apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with attr()\r\n      for(i in s.attrs){\r\n\r\n        at = [i].concat(s.attrs[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.attr.apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with style()\r\n      for(i in s.styles){\r\n\r\n        at = [i].concat(s.styles[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.style.apply(target, at)\r\n\r\n      }\r\n\r\n      // animate initialTransformation which has to be chained\r\n      if(s.transforms.length){\r\n\r\n        // get initial initialTransformation\r\n        at = s.initialTransformation\r\n        for(i = 0, len = s.transforms.length; i < len; i++){\r\n\r\n          // get next transformation in chain\r\n          var a = s.transforms[i]\r\n\r\n          // multiply matrix directly\r\n          if(a instanceof SVG.Matrix){\r\n\r\n            if(a.relative){\r\n              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\r\n            }else{\r\n              at = at.morph(a).at(s.ease(this.pos))\r\n            }\r\n            continue\r\n          }\r\n\r\n          // when transformation is absolute we have to reset the needed transformation first\r\n          if(!a.relative)\r\n            a.undo(at.extract())\r\n\r\n          // and reapply it after\r\n          at = at.multiply(a.at(s.ease(this.pos)))\r\n\r\n        }\r\n\r\n        // set new matrix on element\r\n        target.matrix(at)\r\n      }\r\n\r\n      return this\r\n\r\n    }\r\n\r\n\r\n    // adds an once-callback which is called at a specific position and never again\r\n  , once: function(pos, fn, isEased){\r\n      var c = this.last()\r\n      if(!isEased) pos = c.ease(pos)\r\n\r\n      c.once[pos] = fn\r\n\r\n      return this\r\n    }\r\n\r\n  , _callStart: function() {\r\n      setTimeout(function(){this.start()}.bind(this), 0)\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n, parent: SVG.Element\r\n\r\n  // Add method to parent elements\r\n, construct: {\r\n    // Get fx module or create a new one, then animate with given duration and ease\r\n    animate: function(o, ease, delay) {\r\n      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\r\n    }\r\n  , delay: function(delay){\r\n      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\r\n    }\r\n  , stop: function(jumpToEnd, clearQueue) {\r\n      if (this.fx)\r\n        this.fx.stop(jumpToEnd, clearQueue)\r\n\r\n      return this\r\n    }\r\n  , finish: function() {\r\n      if (this.fx)\r\n        this.fx.finish()\r\n\r\n      return this\r\n    }\r\n    // Pause current animation\r\n  , pause: function() {\r\n      if (this.fx)\r\n        this.fx.pause()\r\n\r\n      return this\r\n    }\r\n    // Play paused current animation\r\n  , play: function() {\r\n      if (this.fx)\r\n        this.fx.play()\r\n\r\n      return this\r\n    }\r\n    // Set/Get the speed of the animations\r\n  , speed: function(speed) {\r\n      if (this.fx)\r\n        if (speed == null)\r\n          return this.fx.speed()\r\n        else\r\n          this.fx.speed(speed)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\n// MorphObj is used whenever no morphable object is given\r\nSVG.MorphObj = SVG.invent({\r\n\r\n  create: function(from, to){\r\n    // prepare color for morphing\r\n    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\r\n    // check if we have a list of values\r\n    if(SVG.regex.delimiter.test(from)) {\r\n      // prepare path for morphing\r\n      if(SVG.regex.pathLetters.test(from)) return new SVG.PathArray(from).morph(to)\r\n      // prepare value list for morphing\r\n      else return new SVG.Array(from).morph(to)\r\n    }\r\n    // prepare number for morphing\r\n    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\r\n\r\n    // prepare for plain morphing\r\n    this.value = from\r\n    this.destination = to\r\n  }\r\n\r\n, extend: {\r\n    at: function(pos, real){\r\n      return real < 1 ? this.value : this.destination\r\n    },\r\n\r\n    valueOf: function(){\r\n      return this.value\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  // Add animatable attributes\r\n  attr: function(a, v, relative) {\r\n    // apply attributes individually\r\n    if (typeof a == 'object') {\r\n      for (var key in a)\r\n        this.attr(key, a[key])\r\n\r\n    } else {\r\n      this.add(a, v, 'attrs')\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable styles\r\n, style: function(s, v) {\r\n    if (typeof s == 'object')\r\n      for (var key in s)\r\n        this.style(key, s[key])\r\n\r\n    else\r\n      this.add(s, v, 'styles')\r\n\r\n    return this\r\n  }\r\n  // Animatable x-axis\r\n, x: function(x, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({x:x}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(x)\r\n    num.relative = relative\r\n    return this.add('x', num)\r\n  }\r\n  // Animatable y-axis\r\n, y: function(y, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({y:y}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(y)\r\n    num.relative = relative\r\n    return this.add('y', num)\r\n  }\r\n  // Animatable center x-axis\r\n, cx: function(x) {\r\n    return this.add('cx', new SVG.Number(x))\r\n  }\r\n  // Animatable center y-axis\r\n, cy: function(y) {\r\n    return this.add('cy', new SVG.Number(y))\r\n  }\r\n  // Add animatable move\r\n, move: function(x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n  // Add animatable center\r\n, center: function(x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n  // Add animatable size\r\n, size: function(width, height) {\r\n    if (this.target() instanceof SVG.Text) {\r\n      // animate font size for Text elements\r\n      this.attr('font-size', width)\r\n\r\n    } else {\r\n      // animate bbox based size for all other elements\r\n      var box\r\n\r\n      if(!width || !height){\r\n        box = this.target().bbox()\r\n      }\r\n\r\n      if(!width){\r\n        width = box.width / box.height  * height\r\n      }\r\n\r\n      if(!height){\r\n        height = box.height / box.width  * width\r\n      }\r\n\r\n      this.add('width' , new SVG.Number(width))\r\n          .add('height', new SVG.Number(height))\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable width\r\n, width: function(width) {\r\n    return this.add('width', new SVG.Number(width))\r\n  }\r\n  // Add animatable height\r\n, height: function(height) {\r\n    return this.add('height', new SVG.Number(height))\r\n  }\r\n  // Add animatable plot\r\n, plot: function(a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if(arguments.length == 4) {\r\n      return this.plot([a, b, c, d])\r\n    }\r\n\r\n    return this.add('plot', new (this.target().morphArray)(a))\r\n  }\r\n  // Add leading method\r\n, leading: function(value) {\r\n    return this.target().leading ?\r\n      this.add('leading', new SVG.Number(value)) :\r\n      this\r\n  }\r\n  // Add animatable viewbox\r\n, viewbox: function(x, y, width, height) {\r\n    if (this.target() instanceof SVG.Container) {\r\n      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n    return this\r\n  }\r\n, update: function(o) {\r\n    if (this.target() instanceof SVG.Stop) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        return this.update({\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        })\r\n      }\r\n\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', o.offset)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\r\n\nSVG.Box = SVG.invent({\r\n  create: function(x, y, width, height) {\r\n    if (typeof x == 'object' && !(x instanceof SVG.Element)) {\r\n      // chromes getBoundingClientRect has no x and y property\r\n      return SVG.Box.call(this, x.left != null ? x.left : x.x , x.top != null ? x.top : x.y, x.width, x.height)\r\n    } else if (arguments.length == 4) {\r\n      this.x = x\r\n      this.y = y\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n\r\n    // add center, right, bottom...\r\n    fullBox(this)\r\n  }\r\n, extend: {\r\n    // Merge rect box with another, return a new instance\r\n    merge: function(box) {\r\n      var b = new this.constructor()\r\n\r\n      // merge boxes\r\n      b.x      = Math.min(this.x, box.x)\r\n      b.y      = Math.min(this.y, box.y)\r\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\r\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\r\n\r\n      return fullBox(b)\r\n    }\r\n\r\n  , transform: function(m) {\r\n      var xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, p, bbox\r\n\r\n      var pts = [\r\n        new SVG.Point(this.x, this.y),\r\n        new SVG.Point(this.x2, this.y),\r\n        new SVG.Point(this.x, this.y2),\r\n        new SVG.Point(this.x2, this.y2)\r\n      ]\r\n\r\n      pts.forEach(function(p) {\r\n        p = p.transform(m)\r\n        xMin = Math.min(xMin,p.x)\r\n        xMax = Math.max(xMax,p.x)\r\n        yMin = Math.min(yMin,p.y)\r\n        yMax = Math.max(yMax,p.y)\r\n      })\r\n\r\n      bbox = new this.constructor()\r\n      bbox.x = xMin\r\n      bbox.width = xMax-xMin\r\n      bbox.y = yMin\r\n      bbox.height = yMax-yMin\r\n\r\n      fullBox(bbox)\r\n\r\n      return bbox\r\n    }\r\n  }\r\n})\r\n\r\nSVG.BBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    // get values if element is given\r\n    if (element instanceof SVG.Element) {\r\n      var box\r\n\r\n      // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\r\n      try {\r\n\r\n        if (!document.documentElement.contains){\r\n          // This is IE - it does not support contains() for top-level SVGs\r\n          var topParent = element.node\r\n          while (topParent.parentNode){\r\n            topParent = topParent.parentNode\r\n          }\r\n          if (topParent != document) throw new Exception('Element not in the dom')\r\n        } else {\r\n          // the element is NOT in the dom, throw error\r\n          if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\r\n        }\r\n\r\n        // find native bbox\r\n        box = element.node.getBBox()\r\n      } catch(e) {\r\n        if(element instanceof SVG.Shape){\r\n          var clone = element.clone(SVG.parser.draw.instance).show()\r\n          box = clone.node.getBBox()\r\n          clone.remove()\r\n        }else{\r\n          box = {\r\n            x:      element.node.clientLeft\r\n          , y:      element.node.clientTop\r\n          , width:  element.node.clientWidth\r\n          , height: element.node.clientHeight\r\n          }\r\n        }\r\n      }\r\n\r\n      SVG.Box.call(this, box)\r\n    }\r\n\r\n  }\r\n\r\n  // Define ancestor\r\n, inherit: SVG.Box\r\n\r\n  // Define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get bounding box\r\n    bbox: function() {\r\n      return new SVG.BBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.BBox.prototype.constructor = SVG.BBox\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  tbox: function(){\r\n    console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.')\r\n    return this.rbox(this.doc())\r\n  }\r\n})\r\n\r\nSVG.RBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    if (element instanceof SVG.Element) {\r\n      SVG.Box.call(this, element.node.getBoundingClientRect())\r\n    }\r\n  }\r\n\r\n, inherit: SVG.Box\r\n\r\n  // define Parent\r\n, parent: SVG.Element\r\n\r\n, extend: {\r\n    addOffset: function() {\r\n      // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n      this.x += window.pageXOffset\r\n      this.y += window.pageYOffset\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get rect box\r\n    rbox: function(el) {\r\n      if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse())\r\n      return new SVG.RBox(this).addOffset()\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.RBox.prototype.constructor = SVG.RBox\r\n\nSVG.Matrix = SVG.invent({\r\n  // Initialize\r\n  create: function(source) {\r\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\r\n\r\n    // ensure source as object\r\n    source = source instanceof SVG.Element ?\r\n      source.matrixify() :\r\n    typeof source === 'string' ?\r\n      arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) :\r\n    arguments.length == 6 ?\r\n      arrayToMatrix([].slice.call(arguments)) :\r\n    Array.isArray(source) ?\r\n      arrayToMatrix(source) :\r\n    typeof source === 'object' ?\r\n      source : base\r\n\r\n    // merge source\r\n    for (i = abcdef.length - 1; i >= 0; --i)\r\n      this[abcdef[i]] = source[abcdef[i]] != null ?\r\n        source[abcdef[i]] : base[abcdef[i]]\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Extract individual transformations\r\n    extract: function() {\r\n      // find delta transform points\r\n      var px    = deltaTransformPoint(this, 0, 1)\r\n        , py    = deltaTransformPoint(this, 1, 0)\r\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\r\n\r\n      return {\r\n        // translation\r\n        x:        this.e\r\n      , y:        this.f\r\n      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // skew\r\n      , skewX:    -skewX\r\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\r\n        // scale\r\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // rotation\r\n      , rotation: skewX\r\n      , a: this.a\r\n      , b: this.b\r\n      , c: this.c\r\n      , d: this.d\r\n      , e: this.e\r\n      , f: this.f\r\n      , matrix: new SVG.Matrix(this)\r\n      }\r\n    }\r\n    // Clone matrix\r\n  , clone: function() {\r\n      return new SVG.Matrix(this)\r\n    }\r\n    // Morph one matrix into another\r\n  , morph: function(matrix) {\r\n      // store new destination\r\n      this.destination = new SVG.Matrix(matrix)\r\n\r\n      return this\r\n    }\r\n    // Get morphed matrix at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var matrix = new SVG.Matrix({\r\n        a: this.a + (this.destination.a - this.a) * pos\r\n      , b: this.b + (this.destination.b - this.b) * pos\r\n      , c: this.c + (this.destination.c - this.c) * pos\r\n      , d: this.d + (this.destination.d - this.d) * pos\r\n      , e: this.e + (this.destination.e - this.e) * pos\r\n      , f: this.f + (this.destination.f - this.f) * pos\r\n      })\r\n\r\n      return matrix\r\n    }\r\n    // Multiplies by given matrix\r\n  , multiply: function(matrix) {\r\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\r\n    }\r\n    // Inverses matrix\r\n  , inverse: function() {\r\n      return new SVG.Matrix(this.native().inverse())\r\n    }\r\n    // Translate matrix\r\n  , translate: function(x, y) {\r\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\r\n    }\r\n    // Scale matrix\r\n  , scale: function(x, y, cx, cy) {\r\n      // support uniformal scale\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\r\n    }\r\n    // Rotate matrix\r\n  , rotate: function(r, cx, cy) {\r\n      // convert degrees to radians\r\n      r = SVG.utils.radians(r)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\r\n    }\r\n    // Flip matrix on x or y, at a given offset\r\n  , flip: function(a, o) {\r\n      return a == 'x' ?\r\n          this.scale(-1, 1, o, 0) :\r\n        a == 'y' ?\r\n          this.scale(1, -1, 0, o) :\r\n          this.scale(-1, -1, a, o != null ? o : a)\r\n    }\r\n    // Skew\r\n  , skew: function(x, y, cx, cy) {\r\n      // support uniformal skew\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      // convert degrees to radians\r\n      x = SVG.utils.radians(x)\r\n      y = SVG.utils.radians(y)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\r\n    }\r\n    // SkewX\r\n  , skewX: function(x, cx, cy) {\r\n      return this.skew(x, 0, cx, cy)\r\n    }\r\n    // SkewY\r\n  , skewY: function(y, cx, cy) {\r\n      return this.skew(0, y, cx, cy)\r\n    }\r\n    // Transform around a center point\r\n  , around: function(cx, cy, matrix) {\r\n      return this\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\r\n        .multiply(matrix)\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\r\n    }\r\n    // Convert to native SVGMatrix\r\n  , native: function() {\r\n      // create new matrix\r\n      var matrix = SVG.parser.native.createSVGMatrix()\r\n\r\n      // update with current values\r\n      for (var i = abcdef.length - 1; i >= 0; i--)\r\n        matrix[abcdef[i]] = this[abcdef[i]]\r\n\r\n      return matrix\r\n    }\r\n    // Convert matrix to string\r\n  , toString: function() {\r\n      // Construct the matrix directly, avoid values that are too small\r\n      return 'matrix(' + float32String(this.a) + ',' + float32String(this.b)\r\n        + ',' + float32String(this.c) + ',' + float32String(this.d)\r\n        + ',' + float32String(this.e) + ',' + float32String(this.f)\r\n        + ')'\r\n    }\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Element\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Get current matrix\r\n    ctm: function() {\r\n      return new SVG.Matrix(this.node.getCTM())\r\n    },\r\n    // Get current screen matrix\r\n    screenCTM: function() {\r\n      /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n         This is needed because FF does not return the transformation matrix\r\n         for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n         However all other Browsers do that */\r\n      if(this instanceof SVG.Nested) {\r\n        var rect = this.rect(1,1)\r\n        var m = rect.node.getScreenCTM()\r\n        rect.remove()\r\n        return new SVG.Matrix(m)\r\n      }\r\n      return new SVG.Matrix(this.node.getScreenCTM())\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\nSVG.Point = SVG.invent({\r\n  // Initialize\r\n  create: function(x,y) {\r\n    var i, source, base = {x:0, y:0}\r\n\r\n    // ensure source as object\r\n    source = Array.isArray(x) ?\r\n      {x:x[0], y:x[1]} :\r\n    typeof x === 'object' ?\r\n      {x:x.x, y:x.y} :\r\n    x != null ?\r\n      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\r\n\r\n    // merge source\r\n    this.x = source.x\r\n    this.y = source.y\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Clone point\r\n    clone: function() {\r\n      return new SVG.Point(this)\r\n    }\r\n    // Morph one point into another\r\n  , morph: function(x, y) {\r\n      // store new destination\r\n      this.destination = new SVG.Point(x, y)\r\n\r\n      return this\r\n    }\r\n    // Get morphed point at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var point = new SVG.Point({\r\n        x: this.x + (this.destination.x - this.x) * pos\r\n      , y: this.y + (this.destination.y - this.y) * pos\r\n      })\r\n\r\n      return point\r\n    }\r\n    // Convert to native SVGPoint\r\n  , native: function() {\r\n      // create new point\r\n      var point = SVG.parser.native.createSVGPoint()\r\n\r\n      // update with current values\r\n      point.x = this.x\r\n      point.y = this.y\r\n\r\n      return point\r\n    }\r\n    // transform point with matrix\r\n  , transform: function(matrix) {\r\n      return new SVG.Point(this.native().matrixTransform(matrix.native()))\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n\r\n  // Get point\r\n  point: function(x, y) {\r\n    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Set svg element attribute\r\n  attr: function(a, v, n) {\r\n    // act as full getter\r\n    if (a == null) {\r\n      // get an object of attributes\r\n      a = {}\r\n      v = this.node.attributes\r\n      for (n = v.length - 1; n >= 0; n--)\r\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\r\n\r\n      return a\r\n\r\n    } else if (typeof a == 'object') {\r\n      // apply every attribute individually if an object is passed\r\n      for (v in a) this.attr(v, a[v])\r\n\r\n    } else if (v === null) {\r\n        // remove value\r\n        this.node.removeAttribute(a)\r\n\r\n    } else if (v == null) {\r\n      // act as a getter if the first and only argument is not an object\r\n      v = this.node.getAttribute(a)\r\n      return v == null ?\r\n        SVG.defaults.attrs[a] :\r\n      SVG.regex.isNumber.test(v) ?\r\n        parseFloat(v) : v\r\n\r\n    } else {\r\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\r\n      if (a == 'stroke-width')\r\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\r\n      else if (a == 'stroke')\r\n        this._stroke = v\r\n\r\n      // convert image fill and stroke to patterns\r\n      if (a == 'fill' || a == 'stroke') {\r\n        if (SVG.regex.isImage.test(v))\r\n          v = this.doc().defs().image(v, 0, 0)\r\n\r\n        if (v instanceof SVG.Image)\r\n          v = this.doc().defs().pattern(0, 0, function() {\r\n            this.add(v)\r\n          })\r\n      }\r\n\r\n      // ensure correct numeric values (also accepts NaN and Infinity)\r\n      if (typeof v === 'number')\r\n        v = new SVG.Number(v)\r\n\r\n      // ensure full hex color\r\n      else if (SVG.Color.isColor(v))\r\n        v = new SVG.Color(v)\r\n\r\n      // parse array values\r\n      else if (Array.isArray(v))\r\n        v = new SVG.Array(v)\r\n\r\n      // if the passed attribute is leading...\r\n      if (a == 'leading') {\r\n        // ... call the leading method instead\r\n        if (this.leading)\r\n          this.leading(v)\r\n      } else {\r\n        // set given attribute on node\r\n        typeof n === 'string' ?\r\n          this.node.setAttributeNS(n, a, v.toString()) :\r\n          this.node.setAttribute(a, v.toString())\r\n      }\r\n\r\n      // rebuild if required\r\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\r\n        this.rebuild(a, v)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Add transformations\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // get current matrix\r\n    matrix = new SVG.Matrix(target)\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.multiply(new SVG.Matrix(o)) :\r\n        // absolute\r\n        new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.rotate(o.rotation, o.cx, o.cy) :\r\n        // absolute\r\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      if (!relative) {\r\n        // absolute; multiply inversed values\r\n        var e = matrix.extract()\r\n        o.scaleX = o.scaleX * 1 / e.scaleX\r\n        o.scaleY = o.scaleY * 1 / e.scaleY\r\n      }\r\n\r\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\r\n\r\n      if (!relative) {\r\n        // absolute; reset skew values\r\n        var e = matrix.extract()\r\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\r\n      }\r\n\r\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      if (relative) {\r\n        // relative\r\n        matrix = matrix.translate(o.x, o.y)\r\n      } else {\r\n        // absolute\r\n        if (o.x != null) matrix.e = o.x\r\n        if (o.y != null) matrix.f = o.y\r\n      }\r\n    }\r\n\r\n    return this.attr('transform', matrix)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this.target()\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skewY != null ? o.skewY : 0\r\n\r\n      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      matrix = new SVG.Translate(o.x, o.y)\r\n    }\r\n\r\n    if(!matrix) return this\r\n\r\n    matrix.relative = relative\r\n\r\n    this.last().transforms.push(matrix)\r\n\r\n    return this._callStart()\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Reset all transformations\r\n  untransform: function() {\r\n    return this.attr('transform', null)\r\n  },\r\n  // merge the whole transformation chain into one matrix and returns it\r\n  matrixify: function() {\r\n\r\n    var matrix = (this.attr('transform') || '')\r\n      // split transformations\r\n      .split(SVG.regex.transforms).slice(0,-1).map(function(str){\r\n        // generate key => value pairs\r\n        var kv = str.trim().split('(')\r\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function(str){ return parseFloat(str) })]\r\n      })\r\n      // merge every transformation into one matrix\r\n      .reduce(function(matrix, transform){\r\n\r\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\r\n        return matrix[transform[0]].apply(matrix, transform[1])\r\n\r\n      }, new SVG.Matrix())\r\n\r\n    return matrix\r\n  },\r\n  // add an element to another parent without changing the visual representation on the screen\r\n  toParent: function(parent) {\r\n    if(this == parent) return this\r\n    var ctm = this.screenCTM()\r\n    var pCtm = parent.screenCTM().inverse()\r\n\r\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n    return this\r\n  },\r\n  // same as above with parent equals root-svg\r\n  toDoc: function() {\r\n    return this.toParent(this.doc())\r\n  }\r\n\r\n})\r\n\r\nSVG.Transformation = SVG.invent({\r\n\r\n  create: function(source, inversed){\r\n\r\n    if(arguments.length > 1 && typeof inversed != 'boolean'){\r\n      return this.constructor.call(this, [].slice.call(arguments))\r\n    }\r\n\r\n    if(Array.isArray(source)){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[i]\r\n      }\r\n    } else if(typeof source == 'object'){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[this.arguments[i]]\r\n      }\r\n    }\r\n\r\n    this.inversed = false\r\n\r\n    if(inversed === true){\r\n      this.inversed = true\r\n    }\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    arguments: []\r\n  , method: ''\r\n\r\n  , at: function(pos){\r\n\r\n      var params = []\r\n\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        params.push(this[this.arguments[i]])\r\n      }\r\n\r\n      var m = this._undo || new SVG.Matrix()\r\n\r\n      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\r\n\r\n      return this.inversed ? m.inverse() : m\r\n\r\n    }\r\n\r\n  , undo: function(o){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\r\n      }\r\n\r\n      // The method SVG.Matrix.extract which was used before calling this\r\n      // method to obtain a value for the parameter o doesn't return a cx and\r\n      // a cy so we use the ones that were provided to this object at its creation\r\n      o.cx = this.cx\r\n      o.cy = this.cy\r\n\r\n      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\r\n\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.Translate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['transformedX', 'transformedY']\r\n  , method: 'translate'\r\n  }\r\n\r\n})\r\n\r\nSVG.Rotate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['rotation', 'cx', 'cy']\r\n  , method: 'rotate'\r\n  , at: function(pos){\r\n      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\r\n      return this.inversed ? m.inverse() : m\r\n    }\r\n  , undo: function(o){\r\n      this._undo = o\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Scale = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\r\n  , method: 'scale'\r\n  }\r\n\r\n})\r\n\r\nSVG.Skew = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['skewX', 'skewY', 'cx', 'cy']\r\n  , method: 'skew'\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Dynamic style generator\r\n  style: function(s, v) {\r\n    if (arguments.length == 0) {\r\n      // get full style\r\n      return this.node.style.cssText || ''\r\n\r\n    } else if (arguments.length < 2) {\r\n      // apply every style individually if an object is passed\r\n      if (typeof s == 'object') {\r\n        for (v in s) this.style(v, s[v])\r\n\r\n      } else if (SVG.regex.isCss.test(s)) {\r\n        // parse css string\r\n        s = s.split(/\\s*;\\s*/)\r\n          // filter out suffix ; and stuff like ;;\r\n          .filter(function(e) { return !!e })\r\n          .map(function(e){ return e.split(/\\s*:\\s*/) })\r\n\r\n        // apply every definition individually\r\n        while (v = s.pop()) {\r\n          this.style(v[0], v[1])\r\n        }\r\n      } else {\r\n        // act as a getter if the first and only argument is not an object\r\n        return this.node.style[camelCase(s)]\r\n      }\r\n\r\n    } else {\r\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.Parent = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Returns all child elements\r\n    children: function() {\r\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\r\n        return SVG.adopt(node)\r\n      })\r\n    }\r\n    // Add given element at a position\r\n  , add: function(element, i) {\r\n      if (i == null)\r\n        this.node.appendChild(element.node)\r\n      else if (element.node != this.node.childNodes[i])\r\n        this.node.insertBefore(element.node, this.node.childNodes[i])\r\n\r\n      return this\r\n    }\r\n    // Basically does the same as `add()` but returns the added element instead\r\n  , put: function(element, i) {\r\n      this.add(element, i)\r\n      return element\r\n    }\r\n    // Checks if the given element is a child\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // Gets index of given element\r\n  , index: function(element) {\r\n      return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n    }\r\n    // Get a element at the given index\r\n  , get: function(i) {\r\n      return SVG.adopt(this.node.childNodes[i])\r\n    }\r\n    // Get first child\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get the last child\r\n  , last: function() {\r\n      return this.get(this.node.childNodes.length - 1)\r\n    }\r\n    // Iterates over all children and invokes a given block\r\n  , each: function(block, deep) {\r\n      var i, il\r\n        , children = this.children()\r\n\r\n      for (i = 0, il = children.length; i < il; i++) {\r\n        if (children[i] instanceof SVG.Element)\r\n          block.apply(children[i], [i, children])\r\n\r\n        if (deep && (children[i] instanceof SVG.Container))\r\n          children[i].each(block, deep)\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove a given child\r\n  , removeElement: function(element) {\r\n      this.node.removeChild(element.node)\r\n\r\n      return this\r\n    }\r\n    // Remove all elements in this container\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      return this\r\n    }\r\n  , // Get defs\r\n    defs: function() {\r\n      return this.doc().defs()\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Parent, {\r\n\r\n  ungroup: function(parent, depth) {\r\n    if(depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this\r\n\r\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\r\n    depth = depth || Infinity\r\n\r\n    this.each(function(){\r\n      if(this instanceof SVG.Defs) return this\r\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.node.firstChild || this.remove()\r\n\r\n    return this\r\n  },\r\n\r\n  flatten: function(parent, depth) {\r\n    return this.ungroup(parent, depth)\r\n  }\r\n\r\n})\nSVG.Container = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n})\n\r\nSVG.ViewBox = SVG.invent({\r\n\r\n  create: function(source) {\r\n    var i, base = [0, 0, 0, 0]\r\n\r\n    var x, y, width, height, box, view, we, he\r\n      , wm   = 1 // width multiplier\r\n      , hm   = 1 // height multiplier\r\n      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\r\n\r\n    if(source instanceof SVG.Element){\r\n\r\n      we = source\r\n      he = source\r\n      view = (source.attr('viewBox') || '').match(reg)\r\n      box = source.bbox\r\n\r\n      // get dimensions of current node\r\n      width  = new SVG.Number(source.width())\r\n      height = new SVG.Number(source.height())\r\n\r\n      // find nearest non-percentual dimensions\r\n      while (width.unit == '%') {\r\n        wm *= width.value\r\n        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\r\n        we = we.parent()\r\n      }\r\n      while (height.unit == '%') {\r\n        hm *= height.value\r\n        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\r\n        he = he.parent()\r\n      }\r\n\r\n      // ensure defaults\r\n      this.x      = 0\r\n      this.y      = 0\r\n      this.width  = width  * wm\r\n      this.height = height * hm\r\n      this.zoom   = 1\r\n\r\n      if (view) {\r\n        // get width and height from viewbox\r\n        x      = parseFloat(view[0])\r\n        y      = parseFloat(view[1])\r\n        width  = parseFloat(view[2])\r\n        height = parseFloat(view[3])\r\n\r\n        // calculate zoom accoring to viewbox\r\n        this.zoom = ((this.width / this.height) > (width / height)) ?\r\n          this.height / height :\r\n          this.width  / width\r\n\r\n        // calculate real pixel dimensions on parent SVG.Doc element\r\n        this.x      = x\r\n        this.y      = y\r\n        this.width  = width\r\n        this.height = height\r\n\r\n      }\r\n\r\n    }else{\r\n\r\n      // ensure source as object\r\n      source = typeof source === 'string' ?\r\n        source.match(reg).map(function(el){ return parseFloat(el) }) :\r\n      Array.isArray(source) ?\r\n        source :\r\n      typeof source == 'object' ?\r\n        [source.x, source.y, source.width, source.height] :\r\n      arguments.length == 4 ?\r\n        [].slice.call(arguments) :\r\n        base\r\n\r\n      this.x = source[0]\r\n      this.y = source[1]\r\n      this.width = source[2]\r\n      this.height = source[3]\r\n    }\r\n\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    toString: function() {\r\n      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n    }\r\n  , morph: function(x, y, width, height){\r\n      this.destination = new SVG.ViewBox(x, y, width, height)\r\n      return this\r\n    }\r\n\r\n  , at: function(pos) {\r\n\r\n      if(!this.destination) return this\r\n\r\n      return new SVG.ViewBox([\r\n          this.x + (this.destination.x - this.x) * pos\r\n        , this.y + (this.destination.y - this.y) * pos\r\n        , this.width + (this.destination.width - this.width) * pos\r\n        , this.height + (this.destination.height - this.height) * pos\r\n      ])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n\r\n    // get/set viewbox\r\n    viewbox: function(x, y, width, height) {\r\n      if (arguments.length == 0)\r\n        // act as a getter if there are no arguments\r\n        return new SVG.ViewBox(this)\r\n\r\n      // otherwise act as a setter\r\n      return this.attr('viewBox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n  }\r\n\r\n})\n// Add events to elements\r\n;[  'click'\r\n  , 'dblclick'\r\n  , 'mousedown'\r\n  , 'mouseup'\r\n  , 'mouseover'\r\n  , 'mouseout'\r\n  , 'mousemove'\r\n  // , 'mouseenter' -> not supported by IE\r\n  // , 'mouseleave' -> not supported by IE\r\n  , 'touchstart'\r\n  , 'touchmove'\r\n  , 'touchleave'\r\n  , 'touchend'\r\n  , 'touchcancel' ].forEach(function(event) {\r\n\r\n  // add event to SVG.Element\r\n  SVG.Element.prototype[event] = function(f) {\r\n    // bind event to element rather than element node\r\n    SVG.on(this.node, event, f)\r\n    return this\r\n  }\r\n})\r\n\r\n// Initialize listeners stack\r\nSVG.listeners = []\r\nSVG.handlerMap = []\r\nSVG.listenerId = 0\r\n\r\n// Add event binder in the SVG namespace\r\nSVG.on = function(node, event, listener, binding, options) {\r\n  // create listener, get object-index\r\n  var l     = listener.bind(binding || node.instance || node)\r\n    , index = (SVG.handlerMap.indexOf(node) + 1 || SVG.handlerMap.push(node)) - 1\r\n    , ev    = event.split('.')[0]\r\n    , ns    = event.split('.')[1] || '*'\r\n\r\n\r\n  // ensure valid object\r\n  SVG.listeners[index]         = SVG.listeners[index]         || {}\r\n  SVG.listeners[index][ev]     = SVG.listeners[index][ev]     || {}\r\n  SVG.listeners[index][ev][ns] = SVG.listeners[index][ev][ns] || {}\r\n\r\n  if(!listener._svgjsListenerId)\r\n    listener._svgjsListenerId = ++SVG.listenerId\r\n\r\n  // reference listener\r\n  SVG.listeners[index][ev][ns][listener._svgjsListenerId] = l\r\n\r\n  // add listener\r\n  node.addEventListener(ev, l, options || false)\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nSVG.off = function(node, event, listener) {\r\n  var index = SVG.handlerMap.indexOf(node)\r\n    , ev    = event && event.split('.')[0]\r\n    , ns    = event && event.split('.')[1]\r\n    , namespace = ''\r\n\r\n  if(index == -1) return\r\n\r\n  if (listener) {\r\n    if(typeof listener == 'function') listener = listener._svgjsListenerId\r\n    if(!listener) return\r\n\r\n    // remove listener reference\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns || '*']) {\r\n      // remove listener\r\n      node.removeEventListener(ev, SVG.listeners[index][ev][ns || '*'][listener], false)\r\n\r\n      delete SVG.listeners[index][ev][ns || '*'][listener]\r\n    }\r\n\r\n  } else if (ns && ev) {\r\n    // remove all listeners for a namespaced event\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns]) {\r\n      for (listener in SVG.listeners[index][ev][ns])\r\n        SVG.off(node, [ev, ns].join('.'), listener)\r\n\r\n      delete SVG.listeners[index][ev][ns]\r\n    }\r\n\r\n  } else if (ns){\r\n    // remove all listeners for a specific namespace\r\n    for(event in SVG.listeners[index]){\r\n        for(namespace in SVG.listeners[index][event]){\r\n            if(ns === namespace){\r\n                SVG.off(node, [event, ns].join('.'))\r\n            }\r\n        }\r\n    }\r\n\r\n  } else if (ev) {\r\n    // remove all listeners for the event\r\n    if (SVG.listeners[index][ev]) {\r\n      for (namespace in SVG.listeners[index][ev])\r\n        SVG.off(node, [ev, namespace].join('.'))\r\n\r\n      delete SVG.listeners[index][ev]\r\n    }\r\n\r\n  } else {\r\n    // remove all listeners on a given node\r\n    for (event in SVG.listeners[index])\r\n      SVG.off(node, event)\r\n\r\n    delete SVG.listeners[index]\r\n    delete SVG.handlerMap[index]\r\n\r\n  }\r\n}\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Bind given event to listener\r\n  on: function(event, listener, binding, options) {\r\n    SVG.on(this.node, event, listener, binding, options)\r\n\r\n    return this\r\n  }\r\n  // Unbind event from listener\r\n, off: function(event, listener) {\r\n    SVG.off(this.node, event, listener)\r\n\r\n    return this\r\n  }\r\n  // Fire given event\r\n, fire: function(event, data) {\r\n\r\n    // Dispatch event\r\n    if(event instanceof window.Event){\r\n        this.node.dispatchEvent(event)\r\n    }else{\r\n        this.node.dispatchEvent(event = new SVG.CustomEvent(event, {detail:data, cancelable: true}))\r\n    }\r\n\r\n    this._event = event\r\n    return this\r\n  }\r\n, event: function() {\r\n    return this._event\r\n  }\r\n})\r\n\n\r\nSVG.Defs = SVG.invent({\r\n  // Initialize node\r\n  create: 'defs'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n})\nSVG.G = SVG.invent({\r\n  // Initialize node\r\n  create: 'g'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\r\n    }\r\n  , gbox: function() {\r\n\r\n      var bbox  = this.bbox()\r\n        , trans = this.transform()\r\n\r\n      bbox.x  += trans.x\r\n      bbox.x2 += trans.x\r\n      bbox.cx += trans.x\r\n\r\n      bbox.y  += trans.y\r\n      bbox.y2 += trans.y\r\n      bbox.cy += trans.y\r\n\r\n      return bbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a group element\r\n    group: function() {\r\n      return this.put(new SVG.G)\r\n    }\r\n  }\r\n})\r\n\nSVG.Doc = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    if (element) {\r\n      // ensure the presence of a dom element\r\n      element = typeof element == 'string' ?\r\n        document.getElementById(element) :\r\n        element\r\n\r\n      // If the target is an svg element, use that element as the main wrapper.\r\n      // This allows svg.js to work with svg documents as well.\r\n      if (element.nodeName == 'svg') {\r\n        this.constructor.call(this, element)\r\n      } else {\r\n        this.constructor.call(this, SVG.create('svg'))\r\n        element.appendChild(this.node)\r\n        this.size('100%', '100%')\r\n      }\r\n\r\n      // set svg element attributes and ensure defs node\r\n      this.namespace().defs()\r\n    }\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add namespaces\r\n    namespace: function() {\r\n      return this\r\n        .attr({ xmlns: SVG.ns, version: '1.1' })\r\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\r\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\r\n    }\r\n    // Creates and returns defs element\r\n  , defs: function() {\r\n      if (!this._defs) {\r\n        var defs\r\n\r\n        // Find or create a defs element in this instance\r\n        if (defs = this.node.getElementsByTagName('defs')[0])\r\n          this._defs = SVG.adopt(defs)\r\n        else\r\n          this._defs = new SVG.Defs\r\n\r\n        // Make sure the defs node is at the end of the stack\r\n        this.node.appendChild(this._defs.node)\r\n      }\r\n\r\n      return this._defs\r\n    }\r\n    // custom parent method\r\n  , parent: function() {\r\n      if(!this.node.parentNode || this.node.parentNode.nodeName == '#document') return null\r\n      return this.node.parentNode\r\n    }\r\n    // Fix for possible sub-pixel offset. See:\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\r\n  , spof: function() {\r\n      var pos = this.node.getScreenCTM()\r\n\r\n      if (pos)\r\n        this\r\n          .style('left', (-pos.e % 1) + 'px')\r\n          .style('top',  (-pos.f % 1) + 'px')\r\n\r\n      return this\r\n    }\r\n\r\n      // Removes the doc from the DOM\r\n  , remove: function() {\r\n      if(this.parent()) {\r\n        this.parent().removeChild(this.node)\r\n      }\r\n\r\n      return this\r\n    }\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      // add back parser\r\n      if(!SVG.parser.draw.parentNode)\r\n        this.node.appendChild(SVG.parser.draw)\r\n\r\n      return this\r\n    }\r\n  , clone: function (parent) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // get reference to node\r\n      var node = this.node\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) {\r\n        (parent.node || parent).appendChild(clone.node)\r\n      } else {\r\n        node.parentNode.insertBefore(clone.node, node.nextSibling)\r\n      }\r\n\r\n      return clone\r\n    }\r\n  }\r\n\r\n})\r\n\n// ### This module adds backward / forward functionality to elements.\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Get all siblings, including myself\r\n  siblings: function() {\r\n    return this.parent().children()\r\n  }\r\n  // Get the curent position siblings\r\n, position: function() {\r\n    return this.parent().index(this)\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, next: function() {\r\n    return this.siblings()[this.position() + 1]\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, previous: function() {\r\n    return this.siblings()[this.position() - 1]\r\n  }\r\n  // Send given element one step forward\r\n, forward: function() {\r\n    var i = this.position() + 1\r\n      , p = this.parent()\r\n\r\n    // move node one step forward\r\n    p.removeElement(this).add(this, i)\r\n\r\n    // make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element one step backward\r\n, backward: function() {\r\n    var i = this.position()\r\n\r\n    if (i > 0)\r\n      this.parent().removeElement(this).add(this, i - 1)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the front\r\n, front: function() {\r\n    var p = this.parent()\r\n\r\n    // Move node forward\r\n    p.node.appendChild(this.node)\r\n\r\n    // Make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the back\r\n, back: function() {\r\n    if (this.position() > 0)\r\n      this.parent().removeElement(this).add(this, 0)\r\n\r\n    return this\r\n  }\r\n  // Inserts a given element before the targeted element\r\n, before: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i)\r\n\r\n    return this\r\n  }\r\n  // Insters a given element after the targeted element\r\n, after: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i + 1)\r\n\r\n    return this\r\n  }\r\n\r\n})\nSVG.Mask = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('mask'))\r\n\r\n    // keep references to masked elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unmask all masked elements and remove itself\r\n    remove: function() {\r\n      // unmask all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unmask()\r\n      this.targets = []\r\n\r\n      // remove mask from parent\r\n      SVG.Element.prototype.remove.call(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create masking element\r\n    mask: function() {\r\n      return this.defs().put(new SVG.Mask)\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Distribute mask to svg element\r\n  maskWith: function(element) {\r\n    // use given mask or create a new one\r\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.masker.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\r\n  }\r\n  // Unmask element\r\n, unmask: function() {\r\n    delete this.masker\r\n    return this.attr('mask', null)\r\n  }\r\n\r\n})\r\n\nSVG.ClipPath = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('clipPath'))\r\n\r\n    // keep references to clipped elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unclip all clipped elements and remove itself\r\n    remove: function() {\r\n      // unclip all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unclip()\r\n      this.targets = []\r\n\r\n      // remove clipPath from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create clipping element\r\n    clip: function() {\r\n      return this.defs().put(new SVG.ClipPath)\r\n    }\r\n  }\r\n})\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Distribute clipPath to svg element\r\n  clipWith: function(element) {\r\n    // use given clip or create a new one\r\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.clipper.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\r\n  }\r\n  // Unclip element\r\n, unclip: function() {\r\n    delete this.clipper\r\n    return this.attr('clip-path', null)\r\n  }\r\n\r\n})\nSVG.Gradient = SVG.invent({\r\n  // Initialize node\r\n  create: function(type) {\r\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\r\n\r\n    // store type\r\n    this.type = type\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add a color stop\r\n    at: function(offset, color, opacity) {\r\n      return this.put(new SVG.Stop).update(offset, color, opacity)\r\n    }\r\n    // Update gradient\r\n  , update: function(block) {\r\n      // remove all stops\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'gradientTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create gradient element in defs\r\n    gradient: function(type, block) {\r\n      return this.defs().gradient(type, block)\r\n    }\r\n  }\r\n})\r\n\r\n// Add animatable methods to both gradient and fx module\r\nSVG.extend(SVG.Gradient, SVG.FX, {\r\n  // From position\r\n  from: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\r\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\r\n  }\r\n  // To position\r\n, to: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\r\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\r\n  }\r\n})\r\n\r\n// Base gradient generation\r\nSVG.extend(SVG.Defs, {\r\n  // define gradient\r\n  gradient: function(type, block) {\r\n    return this.put(new SVG.Gradient(type)).update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.Stop = SVG.invent({\r\n  // Initialize node\r\n  create: 'stop'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // add color stops\r\n    update: function(o) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        o = {\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        }\r\n      }\r\n\r\n      // set attributes\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Pattern = SVG.invent({\r\n  // Initialize node\r\n  create: 'pattern'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Return the fill id\r\n    fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Update pattern by rebuilding\r\n  , update: function(block) {\r\n      // remove content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'patternTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create pattern element in defs\r\n    pattern: function(width, height, block) {\r\n      return this.defs().pattern(width, height, block)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Define gradient\r\n  pattern: function(width, height, block) {\r\n    return this.put(new SVG.Pattern).update(block).attr({\r\n      x:            0\r\n    , y:            0\r\n    , width:        width\r\n    , height:       height\r\n    , patternUnits: 'userSpaceOnUse'\r\n    })\r\n  }\r\n\r\n})\nSVG.Shape = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n})\n\r\nSVG.Bare = SVG.invent({\r\n  // Initialize\r\n  create: function(element, inherit) {\r\n    // construct element\r\n    this.constructor.call(this, SVG.create(element))\r\n\r\n    // inherit custom methods\r\n    if (inherit)\r\n      for (var method in inherit.prototype)\r\n        if (typeof inherit.prototype[method] === 'function')\r\n          this[method] = inherit.prototype[method]\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Insert some plain text\r\n    words: function(text) {\r\n      // remove contents\r\n      while (this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // create text node\r\n      this.node.appendChild(document.createTextNode(text))\r\n\r\n      return this\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Create an element that is not described by SVG.js\r\n  element: function(element, inherit) {\r\n    return this.put(new SVG.Bare(element, inherit))\r\n  }\r\n})\r\n\nSVG.Symbol = SVG.invent({\r\n  // Initialize node\r\n  create: 'symbol'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n, construct: {\r\n    // create symbol\r\n    symbol: function() {\r\n      return this.put(new SVG.Symbol)\r\n    }\r\n  }\r\n})\r\n\nSVG.Use = SVG.invent({\r\n  // Initialize node\r\n  create: 'use'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Use element as a reference\r\n    element: function(element, file) {\r\n      // Set lined element\r\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a use element\r\n    use: function(element, file) {\r\n      return this.put(new SVG.Use).element(element, file)\r\n    }\r\n  }\r\n})\nSVG.Rect = SVG.invent({\r\n  // Initialize node\r\n  create: 'rect'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a rect element\r\n    rect: function(width, height) {\r\n      return this.put(new SVG.Rect()).size(width, height)\r\n    }\r\n  }\r\n})\nSVG.Circle = SVG.invent({\r\n  // Initialize node\r\n  create: 'circle'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create circle element, based on ellipse\r\n    circle: function(size) {\r\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Circle, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n  // Alias radius x value\r\n, ry: function(ry) {\r\n    return this.rx(ry)\r\n  }\r\n})\r\n\r\nSVG.Ellipse = SVG.invent({\r\n  // Initialize node\r\n  create: 'ellipse'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create an ellipse\r\n    ellipse: function(width, height) {\r\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('rx', rx)\r\n  }\r\n  // Radius y value\r\n, ry: function(ry) {\r\n    return this.attr('ry', ry)\r\n  }\r\n})\r\n\r\n// Add common method\r\nSVG.extend(SVG.Circle, SVG.Ellipse, {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.attr('cx') : this.attr('cx', x)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.attr('cy') : this.attr('cy', y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\r\n    }\r\n    // Custom size function\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .rx(new SVG.Number(p.width).divide(2))\r\n        .ry(new SVG.Number(p.height).divide(2))\r\n    }\r\n})\nSVG.Line = SVG.invent({\r\n  // Initialize node\r\n  create: 'line'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Get array\r\n    array: function() {\r\n      return new SVG.PointArray([\r\n        [ this.attr('x1'), this.attr('y1') ]\r\n      , [ this.attr('x2'), this.attr('y2') ]\r\n      ])\r\n    }\r\n    // Overwrite native plot() method\r\n  , plot: function(x1, y1, x2, y2) {\r\n      if (x1 == null)\r\n        return this.array()\r\n      else if (typeof y1 !== 'undefined')\r\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n      else\r\n        x1 = new SVG.PointArray(x1).toLine()\r\n\r\n      return this.attr(x1)\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr(this.array().move(x, y).toLine())\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr(this.array().size(p.width, p.height).toLine())\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a line element\r\n    line: function(x1, y1, x2, y2) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\r\n      return SVG.Line.prototype.plot.apply(\r\n        this.put(new SVG.Line)\r\n      , x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]\r\n      )\r\n    }\r\n  }\r\n})\r\n\nSVG.Polyline = SVG.invent({\r\n  // Initialize node\r\n  create: 'polyline'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polyline element\r\n    polyline: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polyline).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.Polygon = SVG.invent({\r\n  // Initialize node\r\n  create: 'polygon'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polygon element\r\n    polygon: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polygon).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\n// Add polygon-specific functions\r\nSVG.extend(SVG.Polyline, SVG.Polygon, {\r\n  // Get array\r\n  array: function() {\r\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\r\n  }\r\n  // Plot new path\r\n, plot: function(p) {\r\n    return (p == null) ?\r\n      this.array() :\r\n      this.clear().attr('points', typeof p == 'string' ? p : (this._array = new SVG.PointArray(p)))\r\n  }\r\n  // Clear array cache\r\n, clear: function() {\r\n    delete this._array\r\n    return this\r\n  }\r\n  // Move by left top corner\r\n, move: function(x, y) {\r\n    return this.attr('points', this.array().move(x, y))\r\n  }\r\n  // Set element size to given width and height\r\n, size: function(width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n\r\n    return this.attr('points', this.array().size(p.width, p.height))\r\n  }\r\n\r\n})\r\n\n// unify all point to point elements\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\r\n  // Define morphable array\r\n  morphArray:  SVG.PointArray\r\n  // Move by left top corner over x-axis\r\n, x: function(x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n  // Move by left top corner over y-axis\r\n, y: function(y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n  // Set width of element\r\n, width: function(width) {\r\n    var b = this.bbox()\r\n\r\n    return width == null ? b.width : this.size(width, b.height)\r\n  }\r\n  // Set height of element\r\n, height: function(height) {\r\n    var b = this.bbox()\r\n\r\n    return height == null ? b.height : this.size(b.width, height)\r\n  }\r\n})\nSVG.Path = SVG.invent({\r\n  // Initialize node\r\n  create: 'path'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Define morphable array\r\n    morphArray:  SVG.PathArray\r\n    // Get array\r\n  , array: function() {\r\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\r\n    }\r\n    // Plot new path\r\n  , plot: function(d) {\r\n      return (d == null) ?\r\n        this.array() :\r\n        this.clear().attr('d', typeof d == 'string' ? d : (this._array = new SVG.PathArray(d)))\r\n    }\r\n    // Clear array cache\r\n  , clear: function() {\r\n      delete this._array\r\n      return this\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr('d', this.array().move(x, y))\r\n    }\r\n    // Move by left top corner over x-axis\r\n  , x: function(x) {\r\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n    }\r\n    // Move by left top corner over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr('d', this.array().size(p.width, p.height))\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped path element\r\n    path: function(d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Path).plot(d || new SVG.PathArray)\r\n    }\r\n  }\r\n})\r\n\nSVG.Image = SVG.invent({\r\n  // Initialize node\r\n  create: 'image'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // (re)load image\r\n    load: function(url) {\r\n      if (!url) return this\r\n\r\n      var self = this\r\n        , img  = new window.Image()\r\n\r\n      // preload image\r\n      SVG.on(img, 'load', function() {\r\n        SVG.off(img)\r\n\r\n        var p = self.parent(SVG.Pattern)\r\n\r\n        if(p === null) return\r\n\r\n        // ensure image size\r\n        if (self.width() == 0 && self.height() == 0)\r\n          self.size(img.width, img.height)\r\n\r\n        // ensure pattern size if not set\r\n        if (p && p.width() == 0 && p.height() == 0)\r\n          p.size(self.width(), self.height())\r\n\r\n        // callback\r\n        if (typeof self._loaded === 'function')\r\n          self._loaded.call(self, {\r\n            width:  img.width\r\n          , height: img.height\r\n          , ratio:  img.width / img.height\r\n          , url:    url\r\n          })\r\n      })\r\n\r\n      SVG.on(img, 'error', function(e){\r\n        SVG.off(img)\r\n\r\n        if (typeof self._error === 'function'){\r\n            self._error.call(self, e)\r\n        }\r\n      })\r\n\r\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\r\n    }\r\n    // Add loaded callback\r\n  , loaded: function(loaded) {\r\n      this._loaded = loaded\r\n      return this\r\n    }\r\n\r\n  , error: function(error) {\r\n      this._error = error\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // create image element, load image and set its size\r\n    image: function(source, width, height) {\r\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\r\n    }\r\n  }\r\n\r\n})\nSVG.Text = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('text'))\r\n\r\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\r\n    this._rebuild = true                      // enable automatic updating of dy values\r\n    this._build   = false                     // disable build mode for adding multiple lines\r\n\r\n    // set default font\r\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      // act as getter\r\n      if (x == null)\r\n        return this.attr('x')\r\n\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      var oy = this.attr('y')\r\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\r\n\r\n      // act as getter\r\n      if (y == null)\r\n        return typeof oy === 'number' ? oy - o : oy\r\n\r\n      return this.attr('y', typeof y.valueOf() === 'number' ? y + o : y)\r\n    }\r\n    // Move center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\r\n    }\r\n    // Move center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\r\n    }\r\n    // Set the text content\r\n  , text: function(text) {\r\n      // act as getter\r\n      if (typeof text === 'undefined'){\r\n        var text = ''\r\n        var children = this.node.childNodes\r\n        for(var i = 0, len = children.length; i < len; ++i){\r\n\r\n          // add newline if its not the first child and newLined is set to true\r\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\r\n            text += '\\n'\r\n          }\r\n\r\n          // add content of this node\r\n          text += children[i].textContent\r\n        }\r\n\r\n        return text\r\n      }\r\n\r\n      // remove existing content\r\n      this.clear().build(true)\r\n\r\n      if (typeof text === 'function') {\r\n        // call block\r\n        text.call(this, this)\r\n\r\n      } else {\r\n        // store text and make sure text is not blank\r\n        text = text.split('\\n')\r\n\r\n        // build new lines\r\n        for (var i = 0, il = text.length; i < il; i++)\r\n          this.tspan(text[i]).newLine()\r\n      }\r\n\r\n      // disable build mode and rebuild lines\r\n      return this.build(false).rebuild()\r\n    }\r\n    // Set font size\r\n  , size: function(size) {\r\n      return this.attr('font-size', size).rebuild()\r\n    }\r\n    // Set / get leading\r\n  , leading: function(value) {\r\n      // act as getter\r\n      if (value == null)\r\n        return this.dom.leading\r\n\r\n      // act as setter\r\n      this.dom.leading = new SVG.Number(value)\r\n\r\n      return this.rebuild()\r\n    }\r\n    // Get all the first level lines\r\n  , lines: function() {\r\n      var node = (this.textPath && this.textPath() || this).node\r\n\r\n      // filter tspans and map them to SVG.js instances\r\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\r\n        return SVG.adopt(el)\r\n      })\r\n\r\n      // return an instance of SVG.set\r\n      return new SVG.Set(lines)\r\n    }\r\n    // Rebuild appearance type\r\n  , rebuild: function(rebuild) {\r\n      // store new rebuild flag if given\r\n      if (typeof rebuild == 'boolean')\r\n        this._rebuild = rebuild\r\n\r\n      // define position of all lines\r\n      if (this._rebuild) {\r\n        var self = this\r\n          , blankLineOffset = 0\r\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\r\n\r\n        this.lines().each(function() {\r\n          if (this.dom.newLined) {\r\n            if (!self.textPath())\r\n              this.attr('x', self.attr('x'))\r\n            if(this.text() == '\\n') {\r\n              blankLineOffset += dy\r\n            }else{\r\n              this.attr('dy', dy + blankLineOffset)\r\n              blankLineOffset = 0\r\n            }\r\n          }\r\n        })\r\n\r\n        this.fire('rebuild')\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Enable / disable build mode\r\n  , build: function(build) {\r\n      this._build = !!build\r\n      return this\r\n    }\r\n    // overwrite method from parent to set data properly\r\n  , setData: function(o){\r\n      this.dom = o\r\n      this.dom.leading = new SVG.Number(o.leading || 1.3)\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create text element\r\n    text: function(text) {\r\n      return this.put(new SVG.Text).text(text)\r\n    }\r\n    // Create plain text element\r\n  , plain: function(text) {\r\n      return this.put(new SVG.Text).plain(text)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Tspan = SVG.invent({\r\n  // Initialize node\r\n  create: 'tspan'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set text content\r\n    text: function(text) {\r\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n      return this\r\n    }\r\n    // Shortcut dx\r\n  , dx: function(dx) {\r\n      return this.attr('dx', dx)\r\n    }\r\n    // Shortcut dy\r\n  , dy: function(dy) {\r\n      return this.attr('dy', dy)\r\n    }\r\n    // Create new line\r\n  , newLine: function() {\r\n      // fetch text parent\r\n      var t = this.parent(SVG.Text)\r\n\r\n      // mark new line\r\n      this.dom.newLined = true\r\n\r\n      // apply new hy¡n\r\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Text, SVG.Tspan, {\r\n  // Create plain text node\r\n  plain: function(text) {\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // create text node\r\n    this.node.appendChild(document.createTextNode(text))\r\n\r\n    return this\r\n  }\r\n  // Create a tspan\r\n, tspan: function(text) {\r\n    var node  = (this.textPath && this.textPath() || this).node\r\n      , tspan = new SVG.Tspan\r\n\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // add new tspan\r\n    node.appendChild(tspan.node)\r\n\r\n    return tspan.text(text)\r\n  }\r\n  // Clear all lines\r\n, clear: function() {\r\n    var node = (this.textPath && this.textPath() || this).node\r\n\r\n    // remove existing child nodes\r\n    while (node.hasChildNodes())\r\n      node.removeChild(node.lastChild)\r\n\r\n    return this\r\n  }\r\n  // Get length of text element\r\n, length: function() {\r\n    return this.node.getComputedTextLength()\r\n  }\r\n})\r\n\nSVG.TextPath = SVG.invent({\r\n  // Initialize node\r\n  create: 'textPath'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n  // Define parent class\r\n, parent: SVG.Text\r\n\r\n  // Add parent method\r\n, construct: {\r\n    morphArray: SVG.PathArray\r\n    // Create path for text to run on\r\n  , path: function(d) {\r\n      // create textPath element\r\n      var path  = new SVG.TextPath\r\n        , track = this.doc().defs().path(d)\r\n\r\n      // move lines to textpath\r\n      while (this.node.hasChildNodes())\r\n        path.node.appendChild(this.node.firstChild)\r\n\r\n      // add textPath element as child node\r\n      this.node.appendChild(path.node)\r\n\r\n      // link textPath to path and add content\r\n      path.attr('href', '#' + track, SVG.xlink)\r\n\r\n      return this\r\n    }\r\n    // return the array of the path track element\r\n  , array: function() {\r\n      var track = this.track()\r\n\r\n      return track ? track.array() : null\r\n    }\r\n    // Plot path if any\r\n  , plot: function(d) {\r\n      var track = this.track()\r\n        , pathArray = null\r\n\r\n      if (track) {\r\n        pathArray = track.plot(d)\r\n      }\r\n\r\n      return (d == null) ? pathArray : this\r\n    }\r\n    // Get the path track element\r\n  , track: function() {\r\n      var path = this.textPath()\r\n\r\n      if (path)\r\n        return path.reference('href')\r\n    }\r\n    // Get the textPath child\r\n  , textPath: function() {\r\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\r\n        return SVG.adopt(this.node.firstChild)\r\n    }\r\n  }\r\n})\r\n\nSVG.Nested = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('svg'))\r\n\r\n    this.style('overflow', 'visible')\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create nested svg document\r\n    nested: function() {\r\n      return this.put(new SVG.Nested)\r\n    }\r\n  }\r\n})\nSVG.A = SVG.invent({\r\n  // Initialize node\r\n  create: 'a'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Link url\r\n    to: function(url) {\r\n      return this.attr('href', url, SVG.xlink)\r\n    }\r\n    // Link show attribute\r\n  , show: function(target) {\r\n      return this.attr('show', target, SVG.xlink)\r\n    }\r\n    // Link target attribute\r\n  , target: function(target) {\r\n      return this.attr('target', target)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a hyperlink element\r\n    link: function(url) {\r\n      return this.put(new SVG.A).to(url)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Create a hyperlink element\r\n  linkTo: function(url) {\r\n    var link = new SVG.A\r\n\r\n    if (typeof url == 'function')\r\n      url.call(link, link)\r\n    else\r\n      link.to(url)\r\n\r\n    return this.parent().put(link).put(this)\r\n  }\r\n\r\n})\nSVG.Marker = SVG.invent({\r\n  // Initialize node\r\n  create: 'marker'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set width of element\r\n    width: function(width) {\r\n      return this.attr('markerWidth', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('markerHeight', height)\r\n    }\r\n    // Set marker refX and refY\r\n  , ref: function(x, y) {\r\n      return this.attr('refX', x).attr('refY', y)\r\n    }\r\n    // Update marker\r\n  , update: function(block) {\r\n      // remove all content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , toString: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    marker: function(width, height, block) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(width, height, block)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Create marker\r\n  marker: function(width, height, block) {\r\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n    return this.put(new SVG.Marker)\r\n      .size(width, height)\r\n      .ref(width / 2, height / 2)\r\n      .viewbox(0, 0, width, height)\r\n      .attr('orient', 'auto')\r\n      .update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\r\n  // Create and attach markers\r\n  marker: function(marker, width, height, block) {\r\n    var attr = ['marker']\r\n\r\n    // Build attribute name\r\n    if (marker != 'all') attr.push(marker)\r\n    attr = attr.join('-')\r\n\r\n    // Set marker attribute\r\n    marker = arguments[1] instanceof SVG.Marker ?\r\n      arguments[1] :\r\n      this.doc().marker(width, height, block)\r\n\r\n    return this.attr(attr, marker)\r\n  }\r\n\r\n})\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\r\n, fill:   ['color', 'opacity', 'rule']\r\n, prefix: function(t, a) {\r\n    return a == 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;['fill', 'stroke'].forEach(function(m) {\r\n  var i, extension = {}\r\n\r\n  extension[m] = function(o) {\r\n    if (typeof o == 'undefined')\r\n      return this\r\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\r\n      this.attr(m, o)\r\n\r\n    else\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--)\r\n        if (o[sugar[m][i]] != null)\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n\r\n    return this\r\n  }\r\n\r\n  SVG.extend(SVG.Element, SVG.FX, extension)\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, SVG.FX, {\r\n  // Map rotation to transform\r\n  rotate: function(d, cx, cy) {\r\n    return this.transform({ rotation: d, cx: cx, cy: cy })\r\n  }\r\n  // Map skew to transform\r\n, skew: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ skew: x, cx: y, cy: cx }) :\r\n      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map scale to transform\r\n, scale: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ scale: x, cx: y, cy: cx }) :\r\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map translate to transform\r\n, translate: function(x, y) {\r\n    return this.transform({ x: x, y: y })\r\n  }\r\n  // Map flip to transform\r\n, flip: function(a, o) {\r\n    o = typeof a == 'number' ? a : o\r\n    return this.transform({ flip: a || 'both', offset: o })\r\n  }\r\n  // Map matrix to transform\r\n, matrix: function(m) {\r\n    return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m))\r\n  }\r\n  // Opacity\r\n, opacity: function(value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n  // Relative move over x axis\r\n, dx: function(x) {\r\n    return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true)\r\n  }\r\n  // Relative move over y axis\r\n, dy: function(y) {\r\n    return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true)\r\n  }\r\n  // Relative move over x and y axes\r\n, dmove: function(x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\r\n  // Add x and y radius\r\n  radius: function(x, y) {\r\n    var type = (this._target || this).type;\r\n    return type == 'radial' || type == 'circle' ?\r\n      this.attr('r', new SVG.Number(x)) :\r\n      this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Path, {\r\n  // Get path length\r\n  length: function() {\r\n    return this.node.getTotalLength()\r\n  }\r\n  // Get point at length\r\n, pointAt: function(length) {\r\n    return this.node.getPointAtLength(length)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\r\n  // Set font\r\n  font: function(a, v) {\r\n    if (typeof a == 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n    }\r\n\r\n    return a == 'leading' ?\r\n        this.leading(v) :\r\n      a == 'anchor' ?\r\n        this.attr('text-anchor', v) :\r\n      a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ?\r\n        this.attr('font-'+ a, v) :\r\n        this.attr(a, v)\r\n  }\r\n})\r\n\nSVG.Set = SVG.invent({\r\n  // Initialize\r\n  create: function(members) {\r\n    // Set initial state\r\n    Array.isArray(members) ? this.members = members : this.clear()\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add element to set\r\n    add: function() {\r\n      var i, il, elements = [].slice.call(arguments)\r\n\r\n      for (i = 0, il = elements.length; i < il; i++)\r\n        this.members.push(elements[i])\r\n\r\n      return this\r\n    }\r\n    // Remove element from set\r\n  , remove: function(element) {\r\n      var i = this.index(element)\r\n\r\n      // remove given child\r\n      if (i > -1)\r\n        this.members.splice(i, 1)\r\n\r\n      return this\r\n    }\r\n    // Iterate over all members\r\n  , each: function(block) {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        block.apply(this.members[i], [i, this.members])\r\n\r\n      return this\r\n    }\r\n    // Restore to defaults\r\n  , clear: function() {\r\n      // initialize store\r\n      this.members = []\r\n\r\n      return this\r\n    }\r\n    // Get the length of a set\r\n  , length: function() {\r\n      return this.members.length\r\n    }\r\n    // Checks if a given element is present in set\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // retuns index of given element in set\r\n  , index: function(element) {\r\n      return this.members.indexOf(element)\r\n    }\r\n    // Get member at given index\r\n  , get: function(i) {\r\n      return this.members[i]\r\n    }\r\n    // Get first member\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get last member\r\n  , last: function() {\r\n      return this.get(this.members.length - 1)\r\n    }\r\n    // Default value\r\n  , valueOf: function() {\r\n      return this.members\r\n    }\r\n    // Get the bounding box of all members included or empty box if set has no items\r\n  , bbox: function(){\r\n      // return an empty box of there are no members\r\n      if (this.members.length == 0)\r\n        return new SVG.RBox()\r\n\r\n      // get the first rbox and update the target bbox\r\n      var rbox = this.members[0].rbox(this.members[0].doc())\r\n\r\n      this.each(function() {\r\n        // user rbox for correct position and visual representation\r\n        rbox = rbox.merge(this.rbox(this.doc()))\r\n      })\r\n\r\n      return rbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a new set\r\n    set: function(members) {\r\n      return new SVG.Set(members)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.FX.Set = SVG.invent({\r\n  // Initialize node\r\n  create: function(set) {\r\n    // store reference to set\r\n    this.set = set\r\n  }\r\n\r\n})\r\n\r\n// Alias methods\r\nSVG.Set.inherit = function() {\r\n  var m\r\n    , methods = []\r\n\r\n  // gather shape methods\r\n  for(var m in SVG.Shape.prototype)\r\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply shape aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        if (this.members[i] && typeof this.members[i][method] == 'function')\r\n          this.members[i][method].apply(this.members[i], arguments)\r\n\r\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\r\n    }\r\n  })\r\n\r\n  // clear methods for the next round\r\n  methods = []\r\n\r\n  // gather fx methods\r\n  for(var m in SVG.FX.prototype)\r\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply fx aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.FX.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.set.members.length; i < il; i++)\r\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\r\n\r\n      return this\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\n\r\nSVG.extend(SVG.Element, {\r\n  // Store data values on svg nodes\r\n  data: function(a, v, r) {\r\n    if (typeof a == 'object') {\r\n      for (v in a)\r\n        this.data(v, a[v])\r\n\r\n    } else if (arguments.length < 2) {\r\n      try {\r\n        return JSON.parse(this.attr('data-' + a))\r\n      } catch(e) {\r\n        return this.attr('data-' + a)\r\n      }\r\n\r\n    } else {\r\n      this.attr(\r\n        'data-' + a\r\n      , v === null ?\r\n          null :\r\n        r === true || typeof v === 'string' || typeof v === 'number' ?\r\n          v :\r\n          JSON.stringify(v)\r\n      )\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Remember arbitrary data\r\n  remember: function(k, v) {\r\n    // remember every item in an object individually\r\n    if (typeof arguments[0] == 'object')\r\n      for (var v in k)\r\n        this.remember(v, k[v])\r\n\r\n    // retrieve memory\r\n    else if (arguments.length == 1)\r\n      return this.memory()[k]\r\n\r\n    // store memory\r\n    else\r\n      this.memory()[k] = v\r\n\r\n    return this\r\n  }\r\n\r\n  // Erase a given memory\r\n, forget: function() {\r\n    if (arguments.length == 0)\r\n      this._memory = {}\r\n    else\r\n      for (var i = arguments.length - 1; i >= 0; i--)\r\n        delete this.memory()[arguments[i]]\r\n\r\n    return this\r\n  }\r\n\r\n  // Initialize or return local memory object\r\n, memory: function() {\r\n    return this._memory || (this._memory = {})\r\n  }\r\n\r\n})\n// Method for getting an element by id\r\nSVG.get = function(id) {\r\n  var node = document.getElementById(idFromReference(id) || id)\r\n  return SVG.adopt(node)\r\n}\r\n\r\n// Select elements by query string\r\nSVG.select = function(query, parent) {\r\n  return new SVG.Set(\r\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\r\n      return SVG.adopt(node)\r\n    })\r\n  )\r\n}\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Scoped select method\r\n  select: function(query) {\r\n    return SVG.select(query, this.node)\r\n  }\r\n\r\n})\nfunction pathRegReplace(a, b, c, d) {\r\n  return c + d.replace(SVG.regex.dots, ' .')\r\n}\r\n\r\n// creates deep clone of array\r\nfunction array_clone(arr){\r\n  var clone = arr.slice(0)\r\n  for(var i = clone.length; i--;){\r\n    if(Array.isArray(clone[i])){\r\n      clone[i] = array_clone(clone[i])\r\n    }\r\n  }\r\n  return clone\r\n}\r\n\r\n// tests if a given element is instance of an object\r\nfunction is(el, obj){\r\n  return el instanceof obj\r\n}\r\n\r\n// tests if a given selector matches an element\r\nfunction matches(el, selector) {\r\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nfunction camelCase(s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nfunction capitalize(s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Ensure to six-based hex\r\nfunction fullHex(hex) {\r\n  return hex.length == 4 ?\r\n    [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2)\r\n    , hex.substring(2, 3), hex.substring(2, 3)\r\n    , hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('') : hex\r\n}\r\n\r\n// Component to hex value\r\nfunction compToHex(comp) {\r\n  var hex = comp.toString(16)\r\n  return hex.length == 1 ? '0' + hex : hex\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nfunction proportionalSize(element, width, height) {\r\n  if (width == null || height == null) {\r\n    var box = element.bbox()\r\n\r\n    if (width == null)\r\n      width = box.width / box.height * height\r\n    else if (height == null)\r\n      height = box.height / box.width * width\r\n  }\r\n\r\n  return {\r\n    width:  width\r\n  , height: height\r\n  }\r\n}\r\n\r\n// Delta transform point\r\nfunction deltaTransformPoint(matrix, x, y) {\r\n  return {\r\n    x: x * matrix.a + y * matrix.c + 0\r\n  , y: x * matrix.b + y * matrix.d + 0\r\n  }\r\n}\r\n\r\n// Map matrix array to object\r\nfunction arrayToMatrix(a) {\r\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n}\r\n\r\n// Parse matrix if required\r\nfunction parseMatrix(matrix) {\r\n  if (!(matrix instanceof SVG.Matrix))\r\n    matrix = new SVG.Matrix(matrix)\r\n\r\n  return matrix\r\n}\r\n\r\n// Add centre point to transform object\r\nfunction ensureCentre(o, target) {\r\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\r\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\r\n}\r\n\r\n// PathArray Helpers\r\nfunction arrayToString(a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\n// Deep new id assignment\r\nfunction assignNewId(node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\r\n    if (node.childNodes[i] instanceof window.SVGElement)\r\n      assignNewId(node.childNodes[i])\r\n\r\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\r\n}\r\n\r\n// Add more bounding box properties\r\nfunction fullBox(b) {\r\n  if (b.x == null) {\r\n    b.x      = 0\r\n    b.y      = 0\r\n    b.width  = 0\r\n    b.height = 0\r\n  }\r\n\r\n  b.w  = b.width\r\n  b.h  = b.height\r\n  b.x2 = b.x + b.width\r\n  b.y2 = b.y + b.height\r\n  b.cx = b.x + b.width / 2\r\n  b.cy = b.y + b.height / 2\r\n\r\n  return b\r\n}\r\n\r\n// Get id from reference string\r\nfunction idFromReference(url) {\r\n  var m = (url || '').toString().match(SVG.regex.reference)\r\n\r\n  if (m) return m[1]\r\n}\r\n\r\n// If values like 1e-88 are passed, this is not a valid 32 bit float,\r\n// but in those cases, we are so close to 0 that 0 works well!\r\nfunction float32String(v) {\r\n  return Math.abs(v) > 1e-37 ? v : 0\r\n}\r\n\r\n// Create matrix array for looping\r\nvar abcdef = 'abcdef'.split('')\r\n\n// Add CustomEvent to IE9 and IE10\r\nif (typeof window.CustomEvent !== 'function') {\r\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n  var CustomEventPoly = function(event, options) {\r\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\r\n    var e = document.createEvent('CustomEvent')\r\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\r\n    return e\r\n  }\r\n\r\n  CustomEventPoly.prototype = window.Event.prototype\r\n\r\n  SVG.CustomEvent = CustomEventPoly\r\n} else {\r\n  SVG.CustomEvent = window.CustomEvent\r\n}\r\n\r\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\r\n(function(w) {\r\n  var lastTime = 0\r\n  var vendors = ['moz', 'webkit']\r\n\r\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\r\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\r\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\r\n  }\r\n\r\n  w.requestAnimationFrame = w.requestAnimationFrame ||\r\n    function(callback) {\r\n      var currTime = new Date().getTime()\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n      var id = w.setTimeout(function() {\r\n        callback(currTime + timeToCall)\r\n      }, timeToCall)\r\n\r\n      lastTime = currTime + timeToCall\r\n      return id\r\n    }\r\n\r\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\r\n\r\n}(window))\r\n\r\nreturn SVG\r\n\r\n}));\r\n\n/***/ }),\n\n/***/ \"rxKx\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n        return Hammer;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/8.05968b29d2e910000eab.js","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-29d43fb6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vux-loader/src/style-loader.js!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./people.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./people.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./people.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-29d43fb6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vux-loader/src/before-template-compiler-loader.js!../../../node_modules/vux-loader/src/template-loader.js!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./people.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-29d43fb6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/People/people.vue\n// module id = null\n// module chunks = ","//\n//\n//\n\r\nimport SVG from \"svg.js\";\r\nimport sex from './sex.js';\r\nimport panzoom from './svg.panzoom.js';\r\nimport content from './svg.content.js';\r\nimport Hammer from 'hammerjs';\r\nimport Vivus from \"vivus\";\r\n\r\nexport default {\r\n  props: {\r\n    sex: {\r\n      /**\r\n       * 性别\r\n       * true为男性，false为女性\r\n       */\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    face: {\r\n      /**\r\n       * 正反面\r\n       * true为正面，false为反面\r\n       */\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    lineColor: {\r\n      /**\r\n       * 线条颜色\r\n       * 0为男性，1为女性\r\n       */\r\n      type: Array,\r\n      default: function() {\r\n        return [\"#6BBEFD\", \"#FD9A8E\"];\r\n      }\r\n    },\r\n    vivus: {\r\n      /**\r\n       * 描边运行方式\r\n       * delayed:每个路径元素在同一时间绘制在一个小的延迟在开始。这是当前的默认动画。\r\n       * sync:每条线同步绘制。它们都在同一时间开始和结束。\r\n       * oneByOne:每个路径元素都是一个接一个地画出来的。这部动画给现场绘画留下了最好的印象。\r\n       */\r\n      type: String,\r\n      default: \"delayed\"\r\n    },\r\n    duration: {\r\n      /**\r\n       * 描边动画时间\r\n       */\r\n      type: Number,\r\n      default: 150\r\n    },\r\n    pathTimingFunction: {\r\n      /**\r\n       * 路径定时函数\r\n       * LINEAR EASE EASE_IN EASE_OUT EASE_OUT_BOUNCE\r\n       */\r\n      type: String,\r\n      default: \"LINEAR\"\r\n    },\r\n    animTimingFunction: {\r\n      /**\r\n       * 路径定时函数\r\n       * LINEAR EASE EASE_IN EASE_OUT EASE_OUT_BOUNCE\r\n       */\r\n      type: String,\r\n      default: \"LINEAR\"\r\n    },\r\n    ease: {\r\n      /**\r\n       * 人物还原动画过程\r\n       * <>: ease in and out\r\n       *  >: ease out\r\n       *  <: ease in\r\n       *  -: linear\r\n       *  =: external control\r\n       */\r\n      type: String,\r\n      default: \"-\"\r\n    },\r\n    delay: {\r\n      /**\r\n       * 人物还原动画时间\r\n       */\r\n      type: String,\r\n      default: \".3s\"\r\n    },\r\n    delayOpacity:{\r\n      /**\r\n       * 人物消失时间\r\n       */\r\n      type: String,\r\n      default: \".1s\"\r\n    },\r\n    clickOpacity: {\r\n      //点击过后的透明度\r\n      type: Number,\r\n      default:0.7\r\n    },\r\n    bodyPosition: {\r\n      /**\r\n       * 点击身体某个部位\r\n       * 参数:val点击部位名称\r\n       *     正面\r\n       *     head:头部\r\n       *     neck:颈部\r\n       *     abdomen:腹部(包括胸部)\r\n       *     upperLimb:上肢\r\n       *     waist:腰部\r\n       *     genitals:男/女性生殖\r\n       *     theLegs:下肢\r\n       *     背面\r\n       *     wholeBody:全身\r\n       */\r\n      type: Function\r\n    },\r\n    isAnimation: {\r\n      /**\r\n       * 动画开关\r\n       */\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    initFill:{\r\n      type:String,\r\n      default:'#fff'\r\n    },\r\n    animateEnd:{\r\n      /**\r\n       * 动画执行完成回调函数\r\n       * 此回调只是描边动画回调，并不包括渐变动画\r\n       */\r\n      type:Function,\r\n      default:function(){}\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isAnimate: false,\r\n      sexData: sex,\r\n      svgFace: this.face,\r\n      svgSex: this.sex,\r\n      clickBuf: null,//缓存已被点击选中的path标签\r\n      isLabelClick: true,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.svgRender();\r\n  },\r\n  methods: {\r\n    decodeType() {\r\n      let sexStr = this.svgSex ? \"man\" : \"woman\";\r\n      let faceStr = this.svgFace ? \"front\" : \"back\";\r\n\r\n      return [sexStr, faceStr];\r\n    },\r\n    //描边动画参数\r\n    timingProps() {\r\n      let timingProps = {\r\n        type: this.vivus,\r\n        duration: this.duration,\r\n        start: \"autostart\",\r\n        pathTimingFunction: Vivus.LINEAR,\r\n        animTimingFunction: Vivus.LINEAR\r\n      };\r\n\r\n      timingProps.pathTimingFunction =\r\n        Vivus[this.pathTimingFunction] || timingProps.pathTimingFunction;\r\n      timingProps.animTimingFunction =\r\n        Vivus[this.animTimingFunction] || timingProps.animTimingFunction;\r\n\r\n      return timingProps;\r\n    },\r\n    svgAgainInit() {\r\n      let self = this;\r\n      this.isAnimate = false;\r\n      this.draw\r\n        .animate({delay:self.delayOpacity})\r\n        .opacity(0)\r\n        .afterAll(function() {\r\n          self.draw.opacity(1);\r\n          self.draw.remove();\r\n          self.svgRender();\r\n        });\r\n    },\r\n    svgRender() {\r\n      let decode = this.decodeType();\r\n      this.draw = SVG(this.$refs.svginit);\r\n      this.draw.clear();\r\n      this.draw.style(\r\n        \"color\",\r\n        this.svgSex ? this.lineColor[0] : this.lineColor[1]\r\n      );\r\n\r\n      //创建人体svg\r\n      this.createGroup(decode[0], decode[1]);\r\n\r\n      this.midden();\r\n\r\n      this.isLabelClick = false;\r\n\r\n      if (this.isAnimation) {\r\n        this.svgSwitchVivus();\r\n      } else {\r\n        this.svgSwitchNo();\r\n      }\r\n    },\r\n    svgSwitchVivus() {\r\n      let prams = this.timingProps();\r\n      let self = this;\r\n      new Vivus(this.draw.id(), prams, function() {\r\n        self.isAnimate = true;\r\n        self.isLabelClick = true;\r\n        //描边绘制成人物\r\n        let gLabel = self.faceRect.children();\r\n\r\n        self.animateEnd();\r\n\r\n        gLabel.map(function(label) {\r\n          let pathLabel = label.children();\r\n          \r\n          pathLabel.map(function(rect) {\r\n            let dataAttr = rect.data(\"attrs\");\r\n            if (dataAttr.fill) {\r\n              rect.attr({\r\n                stroke: self.svgSex ? self.lineColor[0] : self.lineColor[1]\r\n              });\r\n\r\n              rect.animate({ ease: self.ease, delay: self.delay })\r\n                  .attr({ fill: dataAttr.fill, stroke: dataAttr.fill });\r\n            }\r\n          });\r\n        });\r\n      });\r\n    },\r\n    svgSwitchNo() {\r\n      this.isAnimate = true;\r\n      let self = this;\r\n      let gLabel = self.faceRect.children();\r\n\r\n      gLabel.map(function(label) {\r\n        let pathLabel = label.children();\r\n        pathLabel.map(function(rect) {\r\n          let dataAttr = rect.data(\"attrs\");\r\n          if (dataAttr.fill) {\r\n            rect.attr({ fill: dataAttr.fill, stroke: dataAttr.fill });\r\n          }\r\n        });\r\n      });\r\n\r\n      this.isLabelClick = true;\r\n    },\r\n    //设置svg宽高\r\n    midden() {\r\n      let clientRect = this.$refs.svginit.getBoundingClientRect();\r\n      this.draw.width(clientRect.width);\r\n      this.draw.height(clientRect.height);\r\n    },\r\n    createGroup(type, str) {\r\n      let data = this.sexData[type];\r\n\r\n      if (!data) {\r\n        return;\r\n      }\r\n\r\n      let fronts = data[str];\r\n      let self = this;\r\n\r\n      let faceRect = (self.faceRect = self.draw.group());\r\n      \r\n      let frontKeys = Object.keys(fronts);\r\n      frontKeys.map(function(val) {\r\n        self.wholeBody(fronts, val, faceRect);\r\n      });\r\n\r\n      let faceClient = faceRect.node.getBoundingClientRect();\r\n \r\n      this.draw.attr({\r\n        'preserveAspectRatio':'xMidYMin meet',\r\n        'viewBox':`0 0 ${faceClient.width} ${faceClient.height}`\r\n      })\r\n    },\r\n    /**\r\n     * 创建一个部位\r\n     */\r\n    wholeBody(obj, val, wood) {\r\n      let self = this;\r\n\r\n      let group = wood.group();\r\n      self.createPath(group, obj[val]);\r\n\r\n      group.node.addEventListener('touchstart',function(){\r\n        if(!self.isLabelClick){\r\n          return;\r\n        }\r\n\r\n        if(self.clickOpacity){\r\n          group.opacity(self.clickOpacity);\r\n\r\n          self.clickBuf = group;\r\n        }\r\n      })\r\n\r\n      //给每个部位绑定手势\r\n      let hammerGroup = new Hammer(group.node);\r\n      hammerGroup.on('pressup',tapEnd);\r\n      hammerGroup.on('tap',tapEnd);\r\n\r\n      group.node.addEventListener('touchmove',function(){\r\n        self.clickBuf.opacity(1);\r\n      })\r\n\r\n      function tapEnd(){\r\n        if(!self.isLabelClick){\r\n          return;\r\n        }\r\n\r\n        if (self.bodyPosition) {\r\n          self.bodyPosition(val,self.clickBuf);\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 创建path标签\r\n     */\r\n    createPath(group, arr) {\r\n      const self = this;\r\n      if (!arr && !group) {\r\n        return;\r\n      }\r\n\r\n      arr.map(function(obj) {\r\n        let path = group.path(obj.d);\r\n        if (obj.attr) {\r\n          path.data(\"attrs\", obj.attr);\r\n\r\n          let newData = { ...obj.attr };\r\n          newData.fill = self.initFill;\r\n          newData.stroke = \"currentColor\";\r\n          path.attr(newData);\r\n        }\r\n      });\r\n    }\r\n  },\r\n  watch: {\r\n    face(newVal, oldVal) {\r\n      if (this.isAnimate && newVal != this.svgFace) {\r\n        this.svgAgainInit();\r\n        this.svgFace = newVal;\r\n      }\r\n    },\r\n    sex(newVal, oldVal) {\r\n      if (this.isAnimate && newVal != this.svgSex) {\r\n        this.svgAgainInit();\r\n        this.svgSex = newVal;\r\n      }\r\n    }\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/People/people.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"svginit\",staticClass:\"sex\"})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-29d43fb6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vux-loader/src/before-template-compiler-loader.js!./node_modules/vux-loader/src/template-loader.js!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/People/people.vue\n// module id = null\n// module chunks = ",";\r\n(function () {\r\n\r\n    SVG.extend(SVG.G, {\r\n        /**\r\n         * svg画出来的图像位置\r\n         * 目前gPosition只支持两个层级的调用\r\n         * @param {*} str left right center top bottom \r\n         * @param {*} company 单位\r\n         */\r\n        gPosition: function (str, company) {\r\n            company = company || 0;\r\n            str = str || 'center';\r\n\r\n            //先让svg位置恢复到原来的位置\r\n            //不然定位会出问题\r\n            if (str === 'left' || str === 'right') {\r\n                this.x(0);\r\n            }\r\n\r\n            if (str === 'top' || str === 'bottom') {\r\n                this.y(0);\r\n            }\r\n\r\n            if (str === 'center') {\r\n                this.x(0);\r\n                this.y(0);\r\n            }\r\n\r\n            var rboxObj = this.rbox();\r\n            var drawRboxObj = this.doc().rbox();\r\n\r\n            if (str === 'left') {\r\n                var px = -rboxObj.x + company;\r\n                this.x(px);\r\n            }\r\n\r\n            if (str === 'right') {\r\n                var px = drawRboxObj.width - rboxObj.x2 + company;\r\n                this.x(px);\r\n            }\r\n\r\n            if (str === 'center') {\r\n                var pxX = ((drawRboxObj.width - rboxObj.width) / 2) - rboxObj.x;\r\n                var pxY = ((drawRboxObj.height - rboxObj.height) / 2) - rboxObj.y;\r\n\r\n                this.x(pxX);\r\n                this.y(pxY);\r\n            }\r\n\r\n            if (str === 'top') {\r\n                var px = -rboxObj.y + company;\r\n                this.y(px);\r\n            }\r\n\r\n            if (str === 'bottom') {\r\n                var px = drawRboxObj.height - rboxObj.y2 + company;\r\n                this.y(px);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        gResize: function () {\r\n            var rboxObj = this.rbox();\r\n            var drawRboxObj = this.doc().rbox();\r\n            console.log(rboxObj.height,drawRboxObj.height)\r\n            if (rboxObj.width >= drawRboxObj.width) {\r\n                var zoom = drawRboxObj.width / rboxObj.width;\r\n                this.doc().zoom(zoom);\r\n            }\r\n\r\n            if (rboxObj.height >= drawRboxObj.height) {\r\n                var zoom = drawRboxObj.height / rboxObj.height;\r\n                // this.doc().zoom(zoom);\r\n            }\r\n        },\r\n        /**\r\n         * 创造一个渐变\r\n         */\r\n        createLinearGradient: function (aColor, bColor) {\r\n            aColor = aColor || '#A5CC82';\r\n            bColor = bColor || '#00467F';\r\n\r\n            var linear = this.gradient('linear', function (stop) {\r\n                stop.at(0, aColor)\r\n                stop.at(1, bColor)\r\n            })\r\n\r\n            linear.attr({\r\n                'x1': '0%',\r\n                'x2': '0%',\r\n                'y1': '0%',\r\n                'y2': '100%'\r\n            })\r\n\r\n            this.rect(20, 150).fill(linear);\r\n\r\n            return this;\r\n        }\r\n    })\r\n}())\n\n\n// WEBPACK FOOTER //\n// ./src/components/People/svg.content.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-29d43fb6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vux-loader/src/style-loader.js!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./people.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"ae474e28\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-29d43fb6\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vux-loader/src/style-loader.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/People/people.vue\n// module id = FJbZ\n// module chunks = 1 8","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-07d6a9dc\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vux-loader/src/after-less-loader.js!../../../node_modules/less-loader/index.js?{\\\"sourceMap\\\":true}!../../../node_modules/vux-loader/src/style-loader.js!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./symptoms.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"2b64472f\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-07d6a9dc\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vux-loader/src/after-less-loader.js!./node_modules/less-loader?{\"sourceMap\":true}!./node_modules/vux-loader/src/style-loader.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/drugsAndElse/symptoms.vue\n// module id = G8X/\n// module chunks = 8","/**\n * vivus - JavaScript library to make drawing animation on SVG\n * @version v0.4.4\n * @link https://github.com/maxwellito/vivus\n * @license MIT\n */\n\n'use strict';\n\n(function () {\n\n  'use strict';\n\n/**\n * Pathformer\n * Beta version\n *\n * Take any SVG version 1.1 and transform\n * child elements to 'path' elements\n *\n * This code is purely forked from\n * https://github.com/Waest/SVGPathConverter\n */\n\n/**\n * Class constructor\n *\n * @param {DOM|String} element Dom element of the SVG or id of it\n */\nfunction Pathformer(element) {\n  // Test params\n  if (typeof element === 'undefined') {\n    throw new Error('Pathformer [constructor]: \"element\" parameter is required');\n  }\n\n  // Set the element\n  if (element.constructor === String) {\n    element = document.getElementById(element);\n    if (!element) {\n      throw new Error('Pathformer [constructor]: \"element\" parameter is not related to an existing ID');\n    }\n  }\n  if (element instanceof window.SVGElement || \n      element instanceof window.SVGGElement ||\n      /^svg$/i.test(element.nodeName)) {\n    this.el = element;\n  } else {\n    throw new Error('Pathformer [constructor]: \"element\" parameter must be a string or a SVGelement');\n  }\n\n  // Start\n  this.scan(element);\n}\n\n/**\n * List of tags which can be transformed\n * to path elements\n *\n * @type {Array}\n */\nPathformer.prototype.TYPES = ['line', 'ellipse', 'circle', 'polygon', 'polyline', 'rect'];\n\n/**\n * List of attribute names which contain\n * data. This array list them to check if\n * they contain bad values, like percentage.\n *\n * @type {Array}\n */\nPathformer.prototype.ATTR_WATCH = ['cx', 'cy', 'points', 'r', 'rx', 'ry', 'x', 'x1', 'x2', 'y', 'y1', 'y2'];\n\n/**\n * Finds the elements compatible for transform\n * and apply the liked method\n *\n * @param  {object} options Object from the constructor\n */\nPathformer.prototype.scan = function (svg) {\n  var fn, element, pathData, pathDom,\n      elements = svg.querySelectorAll(this.TYPES.join(','));\n\n  for (var i = 0; i < elements.length; i++) {\n    element = elements[i];\n    fn = this[element.tagName.toLowerCase() + 'ToPath'];\n    pathData = fn(this.parseAttr(element.attributes));\n    pathDom = this.pathMaker(element, pathData);\n    element.parentNode.replaceChild(pathDom, element);\n  }\n};\n\n\n/**\n * Read `line` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element Line element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.lineToPath = function (element) {\n  var newElement = {},\n      x1 = element.x1 || 0,\n      y1 = element.y1 || 0,\n      x2 = element.x2 || 0,\n      y2 = element.y2 || 0;\n\n  newElement.d = 'M' + x1 + ',' + y1 + 'L' + x2 + ',' + y2;\n  return newElement;\n};\n\n/**\n * Read `rect` element to extract and transform\n * data, to make it ready for a `path` object.\n * The radius-border is not taken in charge yet.\n * (your help is more than welcomed)\n *\n * @param  {DOMelement} element Rect element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.rectToPath = function (element) {\n  var newElement = {},\n      x      = parseFloat(element.x)      || 0,\n      y      = parseFloat(element.y)      || 0,\n      width  = parseFloat(element.width)  || 0,\n      height = parseFloat(element.height) || 0;\n\n  if (element.rx || element.ry) {\n    var rx = parseInt(element.rx, 10) || -1,\n        ry = parseInt(element.ry, 10) || -1;\n    rx = Math.min(Math.max(rx < 0 ? ry : rx, 0), width/2);\n    ry = Math.min(Math.max(ry < 0 ? rx : ry, 0), height/2);\n\n    newElement.d = 'M ' + (x + rx) + ',' + y + ' ' +\n                   'L ' + (x + width - rx) + ',' + y + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + (x + width) + ',' + (y + ry) + ' ' +\n                   'L ' + (x + width) + ',' + (y + height - ry) + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + (x + width - rx) + ',' + (y + height) + ' ' +\n                   'L ' + (x + rx) + ',' + (y + height) + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + x + ',' + (y + height - ry) + ' ' +\n                   'L ' + x + ',' + (y + ry) + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + (x + rx) + ',' + y;\n  }\n  else {\n    newElement.d = 'M' + x + ' ' + y + ' ' +\n                   'L' + (x + width) + ' ' + y + ' ' +\n                   'L' + (x + width) + ' ' + (y + height) + ' ' +\n                   'L' + x + ' ' + (y + height) + ' Z';\n  }\n  return newElement;\n};\n\n/**\n * Read `polyline` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element Polyline element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.polylineToPath = function (element) {\n  var newElement = {},\n      points = element.points.trim().split(' '),\n      i, path;\n\n  // Reformatting if points are defined without commas\n  if (element.points.indexOf(',') === -1) {\n    var formattedPoints = [];\n    for (i = 0; i < points.length; i+=2) {\n      formattedPoints.push(points[i] + ',' + points[i+1]);\n    }\n    points = formattedPoints;\n  }\n\n  // Generate the path.d value\n  path = 'M' + points[0];\n  for(i = 1; i < points.length; i++) {\n    if (points[i].indexOf(',') !== -1) {\n      path += 'L' + points[i];\n    }\n  }\n  newElement.d = path;\n  return newElement;\n};\n\n/**\n * Read `polygon` element to extract and transform\n * data, to make it ready for a `path` object.\n * This method rely on polylineToPath, because the\n * logic is similar. The path created is just closed,\n * so it needs an 'Z' at the end.\n *\n * @param  {DOMelement} element Polygon element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.polygonToPath = function (element) {\n  var newElement = Pathformer.prototype.polylineToPath(element);\n\n  newElement.d += 'Z';\n  return newElement;\n};\n\n/**\n * Read `ellipse` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element ellipse element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.ellipseToPath = function (element) {\n  var newElement = {},\n      rx = parseFloat(element.rx) || 0,\n      ry = parseFloat(element.ry) || 0,\n      cx = parseFloat(element.cx) || 0,\n      cy = parseFloat(element.cy) || 0,\n      startX = cx - rx,\n      startY = cy,\n      endX = parseFloat(cx) + parseFloat(rx),\n      endY = cy;\n\n  newElement.d = 'M' + startX + ',' + startY +\n                 'A' + rx + ',' + ry + ' 0,1,1 ' + endX + ',' + endY +\n                 'A' + rx + ',' + ry + ' 0,1,1 ' + startX + ',' + endY;\n  return newElement;\n};\n\n/**\n * Read `circle` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element Circle element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.circleToPath = function (element) {\n  var newElement = {},\n      r  = parseFloat(element.r)  || 0,\n      cx = parseFloat(element.cx) || 0,\n      cy = parseFloat(element.cy) || 0,\n      startX = cx - r,\n      startY = cy,\n      endX = parseFloat(cx) + parseFloat(r),\n      endY = cy;\n      \n  newElement.d =  'M' + startX + ',' + startY +\n                  'A' + r + ',' + r + ' 0,1,1 ' + endX + ',' + endY +\n                  'A' + r + ',' + r + ' 0,1,1 ' + startX + ',' + endY;\n  return newElement;\n};\n\n/**\n * Create `path` elements form original element\n * and prepared objects\n *\n * @param  {DOMelement} element  Original element to transform\n * @param  {object} pathData     Path data (from `toPath` methods)\n * @return {DOMelement}          Path element\n */\nPathformer.prototype.pathMaker = function (element, pathData) {\n  var i, attr, pathTag = document.createElementNS('http://www.w3.org/2000/svg','path');\n  for(i = 0; i < element.attributes.length; i++) {\n    attr = element.attributes[i];\n    if (this.ATTR_WATCH.indexOf(attr.name) === -1) {\n      pathTag.setAttribute(attr.name, attr.value);\n    }\n  }\n  for(i in pathData) {\n    pathTag.setAttribute(i, pathData[i]);\n  }\n  return pathTag;\n};\n\n/**\n * Parse attributes of a DOM element to\n * get an object of attribute => value\n *\n * @param  {NamedNodeMap} attributes Attributes object from DOM element to parse\n * @return {object}                  Object of attributes\n */\nPathformer.prototype.parseAttr = function (element) {\n  var attr, output = {};\n  for (var i = 0; i < element.length; i++) {\n    attr = element[i];\n    // Check if no data attribute contains '%', or the transformation is impossible\n    if (this.ATTR_WATCH.indexOf(attr.name) !== -1 && attr.value.indexOf('%') !== -1) {\n      throw new Error('Pathformer [parseAttr]: a SVG shape got values in percentage. This cannot be transformed into \\'path\\' tags. Please use \\'viewBox\\'.');\n    }\n    output[attr.name] = attr.value;\n  }\n  return output;\n};\n\n  'use strict';\n\nvar setupEnv, requestAnimFrame, cancelAnimFrame, parsePositiveInt;\n\n/**\n * Vivus\n * Beta version\n *\n * Take any SVG and make the animation\n * to give give the impression of live drawing\n *\n * This in more than just inspired from codrops\n * At that point, it's a pure fork.\n */\n\n/**\n * Class constructor\n * option structure\n *   type: 'delayed'|'sync'|'oneByOne'|'script' (to know if the items must be drawn synchronously or not, default: delayed)\n *   duration: <int> (in frames)\n *   start: 'inViewport'|'manual'|'autostart' (start automatically the animation, default: inViewport)\n *   delay: <int> (delay between the drawing of first and last path)\n *   dashGap <integer> whitespace extra margin between dashes\n *   pathTimingFunction <function> timing animation function for each path element of the SVG\n *   animTimingFunction <function> timing animation function for the complete SVG\n *   forceRender <boolean> force the browser to re-render all updated path items\n *   selfDestroy <boolean> removes all extra styling on the SVG, and leaves it as original\n *\n * The attribute 'type' is by default on 'delayed'.\n *  - 'delayed'\n *    all paths are draw at the same time but with a\n *    little delay between them before start\n *  - 'sync'\n *    all path are start and finish at the same time\n *  - 'oneByOne'\n *    only one path is draw at the time\n *    the end of the first one will trigger the draw\n *    of the next one\n *\n * All these values can be overwritten individually\n * for each path item in the SVG\n * The value of frames will always take the advantage of\n * the duration value.\n * If you fail somewhere, an error will be thrown.\n * Good luck.\n *\n * @constructor\n * @this {Vivus}\n * @param {DOM|String}   element  Dom element of the SVG or id of it\n * @param {Object}       options  Options about the animation\n * @param {Function}     callback Callback for the end of the animation\n */\nfunction Vivus (element, options, callback) {\n\n  setupEnv();\n\n  // Setup\n  this.isReady = false;\n  this.setElement(element, options);\n  this.setOptions(options);\n  this.setCallback(callback);\n\n  if (this.isReady) {\n    this.init();\n  }\n}\n\n/**\n * Timing functions\n **************************************\n *\n * Default functions to help developers.\n * It always take a number as parameter (between 0 to 1) then\n * return a number (between 0 and 1)\n */\nVivus.LINEAR          = function (x) {return x;};\nVivus.EASE            = function (x) {return -Math.cos(x * Math.PI) / 2 + 0.5;};\nVivus.EASE_OUT        = function (x) {return 1 - Math.pow(1-x, 3);};\nVivus.EASE_IN         = function (x) {return Math.pow(x, 3);};\nVivus.EASE_OUT_BOUNCE = function (x) {\n  var base = -Math.cos(x * (0.5 * Math.PI)) + 1,\n    rate = Math.pow(base,1.5),\n    rateR = Math.pow(1 - x, 2),\n    progress = -Math.abs(Math.cos(rate * (2.5 * Math.PI) )) + 1;\n  return (1- rateR) + (progress * rateR);\n};\n\n\n/**\n * Setters\n **************************************\n */\n\n/**\n * Check and set the element in the instance\n * The method will not return anything, but will throw an\n * error if the parameter is invalid\n *\n * @param {DOM|String}   element  SVG Dom element or id of it\n */\nVivus.prototype.setElement = function (element, options) {\n  var onLoad, self;\n\n  // Basic check\n  if (typeof element === 'undefined') {\n    throw new Error('Vivus [constructor]: \"element\" parameter is required');\n  }\n\n  // Set the element\n  if (element.constructor === String) {\n    element = document.getElementById(element);\n    if (!element) {\n      throw new Error('Vivus [constructor]: \"element\" parameter is not related to an existing ID');\n    }\n  }\n  this.parentEl = element;\n\n  // Load the SVG with XMLHttpRequest and extract the SVG\n  if (options && options.file) {\n    var self = this;\n    onLoad = function (e) {\n      var domSandbox = document.createElement('div');\n      domSandbox.innerHTML = this.responseText;\n\n      var svgTag = domSandbox.querySelector('svg');\n      if (!svgTag) {\n        throw new Error('Vivus [load]: Cannot find the SVG in the loaded file : ' + options.file);\n      }\n\n      self.el = svgTag\n      self.el.setAttribute('width', '100%');\n      self.el.setAttribute('height', '100%');\n      self.parentEl.appendChild(self.el)\n      self.isReady = true;\n      self.init();\n      self = null;\n    }\n    \n    var oReq = new window.XMLHttpRequest();\n    oReq.addEventListener('load', onLoad);\n    oReq.open('GET', options.file);\n    oReq.send();\n    return;\n  }\n\n  switch (element.constructor) {\n  case window.SVGSVGElement:\n  case window.SVGElement:\n  case window.SVGGElement:\n    this.el = element;\n    this.isReady = true;\n    break;\n\n  case window.HTMLObjectElement:\n    self = this;\n    onLoad = function (e) {\n      if (self.isReady) {\n        return;\n      }\n      self.el = element.contentDocument && element.contentDocument.querySelector('svg');\n      if (!self.el && e) {\n        throw new Error('Vivus [constructor]: object loaded does not contain any SVG');\n      }\n      else if (self.el) {\n        if (element.getAttribute('built-by-vivus')) {\n          self.parentEl.insertBefore(self.el, element);\n          self.parentEl.removeChild(element);\n          self.el.setAttribute('width', '100%');\n          self.el.setAttribute('height', '100%');\n        }\n        self.isReady = true;\n        self.init();\n        self = null;\n      }\n    };\n\n    if (!onLoad()) {\n      element.addEventListener('load', onLoad);\n    }\n    break;\n\n  default:\n    throw new Error('Vivus [constructor]: \"element\" parameter is not valid (or miss the \"file\" attribute)');\n  }\n};\n\n/**\n * Set up user option to the instance\n * The method will not return anything, but will throw an\n * error if the parameter is invalid\n *\n * @param  {object} options Object from the constructor\n */\nVivus.prototype.setOptions = function (options) {\n  var allowedTypes = ['delayed', 'sync', 'async', 'nsync', 'oneByOne', 'scenario', 'scenario-sync'];\n  var allowedStarts =  ['inViewport', 'manual', 'autostart'];\n\n  // Basic check\n  if (options !== undefined && options.constructor !== Object) {\n    throw new Error('Vivus [constructor]: \"options\" parameter must be an object');\n  }\n  else {\n    options = options || {};\n  }\n\n  // Set the animation type\n  if (options.type && allowedTypes.indexOf(options.type) === -1) {\n    throw new Error('Vivus [constructor]: ' + options.type + ' is not an existing animation `type`');\n  }\n  else {\n    this.type = options.type || allowedTypes[0];\n  }\n\n  // Set the start type\n  if (options.start && allowedStarts.indexOf(options.start) === -1) {\n    throw new Error('Vivus [constructor]: ' + options.start + ' is not an existing `start` option');\n  }\n  else {\n    this.start = options.start || allowedStarts[0];\n  }\n\n  this.isIE         = (window.navigator.userAgent.indexOf('MSIE') !== -1 || window.navigator.userAgent.indexOf('Trident/') !== -1 || window.navigator.userAgent.indexOf('Edge/') !== -1 );\n  this.duration     = parsePositiveInt(options.duration, 120);\n  this.delay        = parsePositiveInt(options.delay, null);\n  this.dashGap      = parsePositiveInt(options.dashGap, 1);\n  this.forceRender  = options.hasOwnProperty('forceRender') ? !!options.forceRender : this.isIE;\n  this.reverseStack = !!options.reverseStack;\n  this.selfDestroy  = !!options.selfDestroy;\n  this.onReady      = options.onReady;\n  this.map          = [];\n  this.frameLength  = this.currentFrame = this.delayUnit = this.speed = this.handle = null;\n\n  this.ignoreInvisible = options.hasOwnProperty('ignoreInvisible') ? !!options.ignoreInvisible : false;\n\n  this.animTimingFunction = options.animTimingFunction || Vivus.LINEAR;\n  this.pathTimingFunction = options.pathTimingFunction || Vivus.LINEAR;\n\n  if (this.delay >= this.duration) {\n    throw new Error('Vivus [constructor]: delay must be shorter than duration');\n  }\n};\n\n/**\n * Set up callback to the instance\n * The method will not return enything, but will throw an\n * error if the parameter is invalid\n *\n * @param  {Function} callback Callback for the animation end\n */\nVivus.prototype.setCallback = function (callback) {\n  // Basic check\n  if (!!callback && callback.constructor !== Function) {\n    throw new Error('Vivus [constructor]: \"callback\" parameter must be a function');\n  }\n  this.callback = callback || function () {};\n};\n\n\n/**\n * Core\n **************************************\n */\n\n/**\n * Map the svg, path by path.\n * The method return nothing, it just fill the\n * `map` array. Each item in this array represent\n * a path element from the SVG, with informations for\n * the animation.\n *\n * ```\n * [\n *   {\n *     el: <DOMobj> the path element\n *     length: <number> length of the path line\n *     startAt: <number> time start of the path animation (in frames)\n *     duration: <number> path animation duration (in frames)\n *   },\n *   ...\n * ]\n * ```\n *\n */\nVivus.prototype.mapping = function () {\n  var i, paths, path, pAttrs, pathObj, totalLength, lengthMeter, timePoint;\n  timePoint = totalLength = lengthMeter = 0;\n  paths = this.el.querySelectorAll('path');\n\n  for (i = 0; i < paths.length; i++) {\n    path = paths[i];\n    if (this.isInvisible(path)) {\n      continue;\n    }\n    pathObj = {\n      el: path,\n      length: Math.ceil(path.getTotalLength())\n    };\n    // Test if the path length is correct\n    if (isNaN(pathObj.length)) {\n      if (window.console && console.warn) {\n        console.warn('Vivus [mapping]: cannot retrieve a path element length', path);\n      }\n      continue;\n    }\n    this.map.push(pathObj);\n    path.style.strokeDasharray  = pathObj.length + ' ' + (pathObj.length + this.dashGap * 2);\n    path.style.strokeDashoffset = pathObj.length + this.dashGap;\n    pathObj.length += this.dashGap;\n    totalLength += pathObj.length;\n\n    this.renderPath(i);\n  }\n\n  totalLength = totalLength === 0 ? 1 : totalLength;\n  this.delay = this.delay === null ? this.duration / 3 : this.delay;\n  this.delayUnit = this.delay / (paths.length > 1 ? paths.length - 1 : 1);\n\n  // Reverse stack if asked\n  if (this.reverseStack) {\n    this.map.reverse();\n  }\n\n  for (i = 0; i < this.map.length; i++) {\n    pathObj = this.map[i];\n\n    switch (this.type) {\n    case 'delayed':\n      pathObj.startAt = this.delayUnit * i;\n      pathObj.duration = this.duration - this.delay;\n      break;\n\n    case 'oneByOne':\n      pathObj.startAt = lengthMeter / totalLength * this.duration;\n      pathObj.duration = pathObj.length / totalLength * this.duration;\n      break;\n\n    case 'sync':\n    case 'async':\n    case 'nsync':\n      pathObj.startAt = 0;\n      pathObj.duration = this.duration;\n      break;\n\n    case 'scenario-sync':\n      path = pathObj.el;\n      pAttrs = this.parseAttr(path);\n      pathObj.startAt = timePoint + (parsePositiveInt(pAttrs['data-delay'], this.delayUnit) || 0);\n      pathObj.duration = parsePositiveInt(pAttrs['data-duration'], this.duration);\n      timePoint = pAttrs['data-async'] !== undefined ? pathObj.startAt : pathObj.startAt + pathObj.duration;\n      this.frameLength = Math.max(this.frameLength, (pathObj.startAt + pathObj.duration));\n      break;\n\n    case 'scenario':\n      path = pathObj.el;\n      pAttrs = this.parseAttr(path);\n      pathObj.startAt = parsePositiveInt(pAttrs['data-start'], this.delayUnit) || 0;\n      pathObj.duration = parsePositiveInt(pAttrs['data-duration'], this.duration);\n      this.frameLength = Math.max(this.frameLength, (pathObj.startAt + pathObj.duration));\n      break;\n    }\n    lengthMeter += pathObj.length;\n    this.frameLength = this.frameLength || this.duration;\n  }\n};\n\n/**\n * Interval method to draw the SVG from current\n * position of the animation. It update the value of\n * `currentFrame` and re-trace the SVG.\n *\n * It use this.handle to store the requestAnimationFrame\n * and clear it one the animation is stopped. So this\n * attribute can be used to know if the animation is\n * playing.\n *\n * Once the animation at the end, this method will\n * trigger the Vivus callback.\n *\n */\nVivus.prototype.drawer = function () {\n  var self = this;\n  this.currentFrame += this.speed;\n\n  if (this.currentFrame <= 0) {\n    this.stop();\n    this.reset();\n  } else if (this.currentFrame >= this.frameLength) {\n    this.stop();\n    this.currentFrame = this.frameLength;\n    this.trace();\n    if (this.selfDestroy) {\n      this.destroy();\n    }\n  } else {\n    this.trace();\n    this.handle = requestAnimFrame(function () {\n      self.drawer();\n    });\n    return;\n  }\n\n  this.callback(this);\n  if (this.instanceCallback) {\n    this.instanceCallback(this);\n    this.instanceCallback = null;\n  }\n};\n\n/**\n * Draw the SVG at the current instant from the\n * `currentFrame` value. Here is where most of the magic is.\n * The trick is to use the `strokeDashoffset` style property.\n *\n * For optimisation reasons, a new property called `progress`\n * is added in each item of `map`. This one contain the current\n * progress of the path element. Only if the new value is different\n * the new value will be applied to the DOM element. This\n * method save a lot of resources to re-render the SVG. And could\n * be improved if the animation couldn't be played forward.\n *\n */\nVivus.prototype.trace = function () {\n  var i, progress, path, currentFrame;\n  currentFrame = this.animTimingFunction(this.currentFrame / this.frameLength) * this.frameLength;\n  for (i = 0; i < this.map.length; i++) {\n    path = this.map[i];\n    progress = (currentFrame - path.startAt) / path.duration;\n    progress = this.pathTimingFunction(Math.max(0, Math.min(1, progress)));\n    if (path.progress !== progress) {\n      path.progress = progress;\n      path.el.style.strokeDashoffset = Math.floor(path.length * (1 - progress));\n      this.renderPath(i);\n    }\n  }\n};\n\n/**\n * Method forcing the browser to re-render a path element\n * from it's index in the map. Depending on the `forceRender`\n * value.\n * The trick is to replace the path element by it's clone.\n * This practice is not recommended because it's asking more\n * ressources, too much DOM manupulation..\n * but it's the only way to let the magic happen on IE.\n * By default, this fallback is only applied on IE.\n *\n * @param  {Number} index Path index\n */\nVivus.prototype.renderPath = function (index) {\n  if (this.forceRender && this.map && this.map[index]) {\n    var pathObj = this.map[index],\n        newPath = pathObj.el.cloneNode(true);\n    pathObj.el.parentNode.replaceChild(newPath, pathObj.el);\n    pathObj.el = newPath;\n  }\n};\n\n/**\n * When the SVG object is loaded and ready,\n * this method will continue the initialisation.\n *\n * This this mainly due to the case of passing an\n * object tag in the constructor. It will wait\n * the end of the loading to initialise.\n *\n */\nVivus.prototype.init = function () {\n  // Set object variables\n  this.frameLength = 0;\n  this.currentFrame = 0;\n  this.map = [];\n\n  // Start\n  new Pathformer(this.el);\n  this.mapping();\n  this.starter();\n\n  if (this.onReady) {\n    this.onReady(this);\n  }\n};\n\n/**\n * Trigger to start of the animation.\n * Depending on the `start` value, a different script\n * will be applied.\n *\n * If the `start` value is not valid, an error will be thrown.\n * Even if technically, this is impossible.\n *\n */\nVivus.prototype.starter = function () {\n  switch (this.start) {\n  case 'manual':\n    return;\n\n  case 'autostart':\n    this.play();\n    break;\n\n  case 'inViewport':\n    var self = this,\n    listener = function () {\n      if (self.isInViewport(self.parentEl, 1)) {\n        self.play();\n        window.removeEventListener('scroll', listener);\n      }\n    };\n    window.addEventListener('scroll', listener);\n    listener();\n    break;\n  }\n};\n\n\n/**\n * Controls\n **************************************\n */\n\n/**\n * Get the current status of the animation between\n * three different states: 'start', 'progress', 'end'.\n * @return {string} Instance status\n */\nVivus.prototype.getStatus = function () {\n  return this.currentFrame === 0 ? 'start' : this.currentFrame === this.frameLength ? 'end' : 'progress';\n};\n\n/**\n * Reset the instance to the initial state : undraw\n * Be careful, it just reset the animation, if you're\n * playing the animation, this won't stop it. But just\n * make it start from start.\n *\n */\nVivus.prototype.reset = function () {\n  return this.setFrameProgress(0);\n};\n\n/**\n * Set the instance to the final state : drawn\n * Be careful, it just set the animation, if you're\n * playing the animation on rewind, this won't stop it.\n * But just make it start from the end.\n *\n */\nVivus.prototype.finish = function () {\n  return this.setFrameProgress(1);\n};\n\n/**\n * Set the level of progress of the drawing.\n *\n * @param {number} progress Level of progress to set\n */\nVivus.prototype.setFrameProgress = function (progress) {\n  progress = Math.min(1, Math.max(0, progress));\n  this.currentFrame = Math.round(this.frameLength * progress);\n  this.trace();\n  return this;\n};\n\n/**\n * Play the animation at the desired speed.\n * Speed must be a valid number (no zero).\n * By default, the speed value is 1.\n * But a negative value is accepted to go forward.\n *\n * And works with float too.\n * But don't forget we are in JavaScript, se be nice\n * with him and give him a 1/2^x value.\n *\n * @param  {number} speed Animation speed [optional]\n */\nVivus.prototype.play = function (speed, callback) {\n  this.instanceCallback = null;\n\n  if (speed && typeof speed === 'function') {\n    this.instanceCallback = speed; // first parameter is actually the callback function\n    speed = null;\n  }\n  else if (speed && typeof speed !== 'number') {\n    throw new Error('Vivus [play]: invalid speed');\n  }\n  // if the first parameter wasn't the callback, check if the seconds was\n  if (callback && typeof(callback) === 'function' && !this.instanceCallback) {\n    this.instanceCallback = callback;\n  }\n\n\n  this.speed = speed || 1;\n  if (!this.handle) {\n    this.drawer();\n  }\n  return this;\n};\n\n/**\n * Stop the current animation, if on progress.\n * Should not trigger any error.\n *\n */\nVivus.prototype.stop = function () {\n  if (this.handle) {\n    cancelAnimFrame(this.handle);\n    this.handle = null;\n  }\n  return this;\n};\n\n/**\n * Destroy the instance.\n * Remove all bad styling attributes on all\n * path tags\n *\n */\nVivus.prototype.destroy = function () {\n  this.stop();\n  var i, path;\n  for (i = 0; i < this.map.length; i++) {\n    path = this.map[i];\n    path.el.style.strokeDashoffset = null;\n    path.el.style.strokeDasharray = null;\n    this.renderPath(i);\n  }\n};\n\n\n/**\n * Utils methods\n * include methods from Codrops\n **************************************\n */\n\n/**\n * Method to best guess if a path should added into\n * the animation or not.\n *\n * 1. Use the `data-vivus-ignore` attribute if set\n * 2. Check if the instance must ignore invisible paths\n * 3. Check if the path is visible\n *\n * For now the visibility checking is unstable.\n * It will be used for a beta phase.\n *\n * Other improvments are planned. Like detecting\n * is the path got a stroke or a valid opacity.\n */\nVivus.prototype.isInvisible = function (el) {\n  var rect,\n    ignoreAttr = el.getAttribute('data-ignore');\n\n  if (ignoreAttr !== null) {\n    return ignoreAttr !== 'false';\n  }\n\n  if (this.ignoreInvisible) {\n    rect = el.getBoundingClientRect();\n    return !rect.width && !rect.height;\n  }\n  else {\n    return false;\n  }\n};\n\n/**\n * Parse attributes of a DOM element to\n * get an object of {attributeName => attributeValue}\n *\n * @param  {object} element DOM element to parse\n * @return {object}         Object of attributes\n */\nVivus.prototype.parseAttr = function (element) {\n  var attr, output = {};\n  if (element && element.attributes) {\n    for (var i = 0; i < element.attributes.length; i++) {\n      attr = element.attributes[i];\n      output[attr.name] = attr.value;\n    }\n  }\n  return output;\n};\n\n/**\n * Reply if an element is in the page viewport\n *\n * @param  {object} el Element to observe\n * @param  {number} h  Percentage of height\n * @return {boolean}\n */\nVivus.prototype.isInViewport = function (el, h) {\n  var scrolled   = this.scrollY(),\n    viewed       = scrolled + this.getViewportH(),\n    elBCR        = el.getBoundingClientRect(),\n    elHeight     = elBCR.height,\n    elTop        = scrolled + elBCR.top,\n    elBottom     = elTop + elHeight;\n\n  // if 0, the element is considered in the viewport as soon as it enters.\n  // if 1, the element is considered in the viewport only when it's fully inside\n  // value in percentage (1 >= h >= 0)\n  h = h || 0;\n\n  return (elTop + elHeight * h) <= viewed && (elBottom) >= scrolled;\n};\n\n\n/**\n * Get the viewport height in pixels\n *\n * @return {integer} Viewport height\n */\nVivus.prototype.getViewportH = function () {\n  var client = this.docElem.clientHeight,\n    inner = window.innerHeight;\n\n  if (client < inner) {\n    return inner;\n  }\n  else {\n    return client;\n  }\n};\n\n/**\n * Get the page Y offset\n *\n * @return {integer} Page Y offset\n */\nVivus.prototype.scrollY = function () {\n  return window.pageYOffset || this.docElem.scrollTop;\n};\n\nsetupEnv = function () {\n\n  if (Vivus.prototype.docElem) {\n    return;\n  }\n\n  /**\n   * Alias for document element\n   *\n   * @type {DOMelement}\n   */\n  Vivus.prototype.docElem = window.document.documentElement;\n\n  /**\n   * Alias for `requestAnimationFrame` or\n   * `setTimeout` function for deprecated browsers.\n   *\n   */\n  requestAnimFrame = (function () {\n    return (\n      window.requestAnimationFrame       ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame    ||\n      window.oRequestAnimationFrame      ||\n      window.msRequestAnimationFrame     ||\n      function(/* function */ callback){\n        return window.setTimeout(callback, 1000 / 60);\n      }\n    );\n  })();\n\n  /**\n   * Alias for `cancelAnimationFrame` or\n   * `cancelTimeout` function for deprecated browsers.\n   *\n   */\n  cancelAnimFrame = (function () {\n    return (\n      window.cancelAnimationFrame       ||\n      window.webkitCancelAnimationFrame ||\n      window.mozCancelAnimationFrame    ||\n      window.oCancelAnimationFrame      ||\n      window.msCancelAnimationFrame     ||\n      function(id){\n        return window.clearTimeout(id);\n      }\n    );\n  })();\n};\n\n/**\n * Parse string to integer.\n * If the number is not positive or null\n * the method will return the default value\n * or 0 if undefined\n *\n * @param {string} value String to parse\n * @param {*} defaultValue Value to return if the result parsed is invalid\n * @return {number}\n *\n */\nparsePositiveInt = function (value, defaultValue) {\n  var output = parseInt(value, 10);\n  return (output >= 0) ? output : defaultValue;\n};\n\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function() {\n      return Vivus;\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = Vivus;\n  } else {\n    // Browser globals\n    window.Vivus = Vivus;\n  }\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vivus/dist/vivus.js\n// module id = Jn6l\n// module chunks = 1 8","module.exports = {\r\n    //女性\r\n    woman: {\r\n        //正面\r\n        front: {\r\n            head: [//头部\r\n                {\r\n                    d: 'M97.3246,57.208 C96.4416,60.84 94.7736,63.21 91.6956,63.678 C91.4176,64.573 91.1166,65.449 90.7966,66.313 C87.4586,75.28 81.8466,82.621 76.5386,87.019 C73.1426,89.835 69.8676,91.44 67.3976,91.496 C67.3506,91.5 67.3036,91.5 67.2616,91.5 C67.0536,91.5 66.8416,91.49 66.6266,91.47 C66.1336,91.424 65.6166,91.327 65.0836,91.176 C64.9856,91.15 64.8836,91.123 64.7836,91.09 C64.6576,91.053 64.5336,91.012 64.4036,90.966 C64.2906,90.93 64.1786,90.89 64.0656,90.845 C64.0276,90.832 63.9876,90.816 63.9446,90.799 C63.8386,90.759 63.7336,90.72 63.6276,90.671 C63.5046,90.622 63.3786,90.568 63.2556,90.515 C63.1846,90.482 63.1066,90.448 63.0316,90.412 C62.9256,90.365 62.8196,90.315 62.7116,90.262 C62.0666,89.945 61.4006,89.574 60.7226,89.144 C60.4536,88.977 60.1866,88.797 59.9166,88.609 C59.5096,88.333 59.1026,88.036 58.6886,87.715 C58.5496,87.608 58.4136,87.501 58.2756,87.392 C58.1386,87.285 58.0006,87.175 57.8666,87.062 C57.7606,86.974 57.6516,86.884 57.5456,86.791 C57.5146,86.767 57.4816,86.741 57.4506,86.713 L57.4486,86.711 C57.0346,86.36 56.6186,85.991 56.2006,85.599 C56.0736,85.479 55.9436,85.359 55.8156,85.235 C55.5046,84.938 55.1896,84.628 54.8826,84.31 C54.7656,84.197 54.6536,84.081 54.5406,83.96 C54.4026,83.817 54.2666,83.669 54.1286,83.523 C53.8536,83.229 53.5816,82.929 53.3076,82.62 C53.0426,82.318 52.7816,82.016 52.5176,81.7 C52.3746,81.527 52.2336,81.354 52.0936,81.181 C51.6906,80.686 51.2936,80.179 50.9036,79.654 C50.3816,78.958 49.8656,78.232 49.3656,77.486 C49.2496,77.315 49.1346,77.137 49.0226,76.965 C47.6266,74.832 46.3336,72.511 45.2016,70.035 C45.0196,69.635 44.8376,69.228 44.6656,68.82 C44.3786,68.15 44.1036,67.465 43.8426,66.771 C43.7536,66.538 43.6666,66.308 43.5846,66.074 C43.5116,65.871 43.4386,65.67 43.3706,65.466 C43.3066,65.289 43.2476,65.11 43.1886,64.933 C43.1246,64.748 43.0656,64.562 43.0046,64.375 C42.9236,64.125 42.8436,63.871 42.7676,63.616 C39.8996,63.04 38.3156,60.707 37.4696,57.208 C36.2596,52.241 37.4076,49.598 40.7076,50.107 L40.7076,50.037 C40.7076,47.462 40.8586,45.079 41.1466,42.881 C43.0356,28.48 50.8166,21.949 60.8586,20.15 C61.5326,20.026 62.2146,19.927 62.9086,19.846 C64.3226,19.686 65.7766,19.61 67.2616,19.61 L67.3976,19.61 C81.1056,19.653 92.3626,26.311 93.6836,46.035 C93.7696,47.312 93.8116,48.647 93.8116,50.037 L93.8116,50.157 C97.3176,49.462 98.5686,52.108 97.3246,57.208',\r\n                    attr: {\r\n                        fill: '#FEDFC6'\r\n                    },\r\n                },\r\n                {\r\n                    d: 'M91.9081,23.4575 L91.9081,23.4535 C96.2811,4.4815 75.0371,-0.0775 65.7921,0.3245 C54.4371,0.8225 37.6021,8.8925 42.4141,24.5775 L42.4141,24.5795 C37.2761,30.5615 34.1641,38.3775 34.1641,46.9385 C34.1641,56.4045 37.9691,62.4205 44.1151,66.0625 C43.8271,65.2575 43.5561,64.4435 43.3061,63.6165 C40.4711,63.0415 38.9041,60.7195 38.0671,57.2375 C36.8691,52.2945 38.0071,49.6635 41.2701,50.1685 L41.2701,50.0995 L41.2701,50.0975 L41.2711,50.0985 C41.2711,50.0985 41.8551,41.9225 48.3001,37.2025 C71.0441,20.9635 73.9211,54.3195 85.4841,54.3195 C89.0061,54.3195 92.3201,53.0525 93.8081,50.2135 C97.2611,49.5375 98.4901,52.1705 97.2611,57.2375 C96.3891,60.8535 94.7401,63.2115 91.6961,63.6775 C91.4201,64.5675 91.1231,65.4405 90.8061,66.3005 C97.1871,62.6865 101.1641,56.6135 101.1641,46.9385 C101.1641,37.8295 97.6441,29.5595 91.9081,23.4575',\r\n                    attr: {\r\n                        fill: '#9C7757'\r\n                    },\r\n                },\r\n                {\r\n                    d: 'M51.9999,33.5347 C51.9999,33.5347 52.1399,33.3567 52.4269,33.0407 C52.7159,32.7287 53.1389,32.2667 53.7219,31.7257 C54.3049,31.1807 55.0299,30.5367 55.9199,29.8637 C56.8099,29.1917 57.8559,28.4787 59.0749,27.8217 C60.2909,27.1617 61.6709,26.5257 63.2299,26.1047 C64.7789,25.6747 66.5009,25.4117 68.2929,25.5277 C70.0789,25.6357 71.9259,26.0787 73.6199,26.9077 L74.2529,27.2267 L74.5699,27.3887 C74.6719,27.4477 74.7699,27.5137 74.8699,27.5767 C75.2669,27.8327 75.6659,28.0887 76.0639,28.3477 C76.4359,28.6387 76.8069,28.9317 77.1779,29.2257 L77.4579,29.4467 C77.5469,29.5247 77.6289,29.6077 77.7169,29.6887 L78.2289,30.1767 C78.9339,30.8097 79.5129,31.5467 80.1309,32.2457 C80.4369,32.5997 80.6909,32.9877 80.9699,33.3567 C81.2339,33.7347 81.5289,34.0927 81.7669,34.4827 C82.0079,34.8697 82.2479,35.2557 82.4879,35.6387 C82.7249,36.0247 82.9649,36.4047 83.1619,36.8047 C83.3689,37.1987 83.5749,37.5887 83.7799,37.9777 C83.9829,38.3657 84.1939,38.7497 84.3639,39.1457 C84.5409,39.5367 84.7179,39.9277 84.8919,40.3107 C85.0639,40.6887 85.2479,41.0937 85.3959,41.4417 C85.5579,41.8167 85.7179,42.1867 85.8759,42.5527 C86.0429,42.8957 86.2069,43.2367 86.3689,43.5727 C86.5529,43.8987 86.7189,44.2307 86.9069,44.5407 C87.1009,44.8427 87.2769,45.1567 87.4809,45.4307 C87.8649,46.0127 88.3079,46.5007 88.7699,46.8927 C89.2339,47.2847 89.7439,47.5347 90.2479,47.5947 C90.7539,47.6617 91.2579,47.5287 91.6979,47.2967 C92.5839,46.8117 93.2209,46.0747 93.6909,45.4657 C94.1589,44.8427 94.4849,44.3127 94.6919,43.9447 C94.8999,43.5757 94.9999,43.3717 94.9999,43.3717 C94.9999,43.3717 94.9399,43.5917 94.7899,43.9907 C94.6349,44.3877 94.4039,44.9727 94.0019,45.6727 C93.5939,46.3597 93.0599,47.2227 92.0679,47.9127 C91.5749,48.2467 90.9229,48.5137 90.1919,48.4997 C89.4589,48.4927 88.7369,48.1837 88.1299,47.7587 C86.8989,46.8927 85.9739,45.6247 85.1489,44.2547 C84.9509,43.9007 84.7509,43.5437 84.5479,43.1807 C84.3689,42.8257 84.1849,42.4647 84.0019,42.0997 C83.6159,41.3537 83.2679,40.6387 82.8899,39.8857 C82.7129,39.5077 82.4969,39.1487 82.2879,38.7827 C82.0769,38.4157 81.8669,38.0477 81.6529,37.6787 C81.4509,37.3007 81.2079,36.9487 80.9709,36.5907 C80.7349,36.2307 80.5009,35.8677 80.2639,35.5047 C80.0319,35.1387 79.7499,34.8097 79.4949,34.4607 L79.1009,33.9397 C78.9709,33.7667 78.8479,33.5847 78.6979,33.4287 C78.1209,32.7847 77.5749,32.0997 76.9309,31.5277 L76.4689,31.0737 C76.3909,31.0007 76.3159,30.9207 76.2359,30.8507 L75.9859,30.6497 C75.6529,30.3797 75.3199,30.1087 74.9889,29.8417 C74.6339,29.6067 74.2819,29.3737 73.9289,29.1407 C73.8409,29.0827 73.7549,29.0227 73.6639,28.9687 L73.3859,28.8237 L72.8289,28.5347 C72.6429,28.4447 72.4659,28.3287 72.2709,28.2607 L71.6939,28.0327 L71.1229,27.7997 C70.9269,27.7427 70.7299,27.6867 70.5359,27.6307 C70.3389,27.5737 70.1459,27.5167 69.9509,27.4597 C69.7549,27.4037 69.5529,27.3837 69.3549,27.3437 C68.9589,27.2747 68.5679,27.1857 68.1699,27.1717 C66.5859,27.0267 65.0209,27.1477 63.5639,27.4597 C62.1059,27.7727 60.7579,28.2577 59.5439,28.7847 C58.3349,29.3257 57.2539,29.8987 56.3179,30.4547 C55.3909,31.0237 54.5959,31.5517 53.9569,32.0117 C52.6819,32.9337 51.9999,33.5347 51.9999,33.5347',\r\n                    attr: {\r\n                        fill: '#8D6D55'\r\n                    },\r\n                },\r\n                {\r\n                    d: 'M64.9999,26.937 C64.9999,26.937 65.1449,26.871 65.4249,26.765 C65.7059,26.662 66.1199,26.51 66.6629,26.355 C67.2009,26.2 67.8629,26.02 68.6409,25.88 C69.4149,25.735 70.3009,25.603 71.2789,25.541 C72.2569,25.48 73.3289,25.477 74.4629,25.597 C75.5949,25.719 76.7889,25.958 77.9789,26.372 C79.1669,26.784 80.3489,27.377 81.4199,28.158 C82.4969,28.932 83.4469,29.895 84.2409,30.953 C85.0389,32.014 85.6299,33.187 86.1099,34.362 C86.2209,34.659 86.3319,34.955 86.4409,35.248 C86.5379,35.529 86.6359,35.809 86.7309,36.086 C86.8249,36.369 86.9219,36.647 87.0249,36.903 C87.1299,37.164 87.2189,37.428 87.3259,37.685 C87.4349,37.941 87.5439,38.193 87.6519,38.445 C87.7699,38.688 87.8869,38.929 88.0019,39.167 C88.1229,39.401 88.2559,39.618 88.3789,39.842 C88.5199,40.045 88.6519,40.258 88.7949,40.443 C89.0799,40.821 89.4079,41.113 89.7189,41.268 C90.0309,41.418 90.3299,41.415 90.6659,41.268 C90.9999,41.123 91.3099,40.852 91.5839,40.571 C91.8579,40.287 92.0899,39.974 92.3009,39.676 C92.7089,39.068 93.0279,38.498 93.2739,38.021 C93.5159,37.542 93.7029,37.16 93.8199,36.894 C93.9379,36.629 93.9999,36.487 93.9999,36.487 C93.9999,36.487 93.9789,36.641 93.9199,36.925 C93.8579,37.208 93.7729,37.625 93.6149,38.146 C93.4569,38.667 93.2509,39.301 92.9129,40.001 C92.7389,40.351 92.5449,40.723 92.2789,41.096 C92.0089,41.465 91.6819,41.852 91.1809,42.16 C91.0509,42.233 90.9259,42.313 90.7679,42.358 L90.5359,42.434 C90.4579,42.458 90.3709,42.461 90.2859,42.475 C90.2009,42.484 90.1149,42.494 90.0279,42.5 L89.7699,42.477 C89.6849,42.466 89.5919,42.463 89.5119,42.439 L89.2689,42.364 C88.6279,42.136 88.1389,41.721 87.7339,41.288 C87.5279,41.07 87.3539,40.835 87.1669,40.6 C87.0059,40.358 86.8329,40.115 86.6769,39.864 C86.5299,39.612 86.3769,39.356 86.2349,39.094 C86.1019,38.832 85.9679,38.564 85.8329,38.297 C85.5839,37.758 85.3219,37.18 85.1169,36.635 C85.0059,36.356 84.8959,36.075 84.7849,35.793 C84.6769,35.526 84.5679,35.261 84.4589,34.993 C83.9869,33.941 83.4579,32.894 82.7509,31.973 C82.0609,31.039 81.2439,30.206 80.3349,29.505 C79.4249,28.808 78.4219,28.247 77.3869,27.821 C75.3129,26.966 73.1479,26.647 71.2869,26.557 C69.4199,26.463 67.8379,26.579 66.7349,26.696 C66.1839,26.762 65.7479,26.813 65.4529,26.863 C65.1579,26.912 64.9999,26.937 64.9999,26.937',\r\n                    attr: {\r\n                        fill: '#8D6D55'\r\n                    },\r\n                },\r\n                {\r\n                    d: 'M42.663,63.7183 C42.094,63.5673 41.566,63.3583 41.1,63.0633 C41.569,63.3073 42.069,63.5073 42.632,63.6203 C42.642,63.6533 42.653,63.6853 42.663,63.7183',\r\n                    attr: {\r\n                        fill: '#F49F64'\r\n                    },\r\n                },\r\n                {\r\n                    d: 'M91.5009,63.8555 C91.5199,63.7965 91.5419,63.7405 91.5599,63.6815 C92.9229,63.4745 93.9969,62.8755 94.8609,61.9775 C93.9989,62.9675 92.9009,63.6175 91.5009,63.8555',\r\n                    attr: {\r\n                        fill: '#F49F64'\r\n                    },\r\n                }\r\n            ],\r\n            neck: [//颈部\r\n                {\r\n                    d: 'M76.5385,4.0186 C73.1425,6.8356 69.8675,8.4396 67.3975,8.4966 C67.3505,8.4996 67.3045,8.4996 67.2615,8.4996 C67.0535,8.4996 66.8415,8.4896 66.6265,8.4706 C66.1335,8.4246 65.6175,8.3266 65.0835,8.1766 C64.9855,8.1506 64.8835,8.1226 64.7835,8.0906 C64.6585,8.0526 64.5345,8.0126 64.4035,7.9666 C64.2905,7.9296 64.1785,7.8896 64.0655,7.8456 C64.0275,7.8316 63.9875,7.8166 63.9445,7.7996 C63.8385,7.7586 63.7335,7.7196 63.6275,7.6716 C63.5045,7.6226 63.3785,7.5686 63.2555,7.5156 C63.1845,7.4826 63.1065,7.4486 63.0315,7.4126 C62.9255,7.3646 62.8195,7.3156 62.7115,7.2616 C62.0665,6.9446 61.4005,6.5746 60.7235,6.1436 C60.4545,5.9766 60.1865,5.7966 59.9165,5.6086 C59.5095,5.3326 59.1025,5.0366 58.6885,4.7156 C58.5495,4.6086 58.4135,4.5016 58.2755,4.3916 C58.1385,4.2846 58.0005,4.1756 57.8665,4.0616 C57.7605,3.9746 57.6515,3.8846 57.5455,3.7906 C57.5145,3.7666 57.4815,3.7406 57.4515,3.7136 L57.4485,3.7106 C57.0345,3.3596 56.6185,2.9906 56.2015,2.5996 C56.0735,2.4786 55.9435,2.3586 55.8155,2.2356 C55.7175,2.1416 55.6195,2.0386 55.5195,1.9426 C56.2455,4.1676 56.8515,7.0516 56.9995,9.4996 C61.9435,12.5016 65.7565,12.4996 67.4915,12.4996 C69.2435,12.4996 73.0565,12.5016 77.9995,9.4996 C78.1725,6.6576 78.9595,3.2266 79.8375,0.9276 C78.7395,2.0736 77.6325,3.1116 76.5385,4.0186',\r\n                    attr: {\r\n                        fill: '#FFD8B9',\r\n                        transform:\"translate(0.000000, 83.000000)\"\r\n                    },\r\n                },\r\n                {\r\n                    d: 'M54.0741,19.8892 L81.1211,19.8892 C80.8961,19.4822 80.6981,19.0272 80.5001,18.5002 C79.0001,14.5002 78.0001,10.5002 78.0001,9.5002 C73.0561,12.5022 69.2431,12.4992 67.4911,12.5002 C65.7571,12.4992 61.9441,12.5022 57.0001,9.5002 C57.2741,14.4402 56.2851,17.8862 54.0741,19.8892',\r\n                    attr: {\r\n                        fill: '#FEDFC6',\r\n                        transform:\"translate(0.000000, 83.000000)\"\r\n                    },\r\n                },\r\n            ],\r\n            abdomen:[//腹部(包括胸部)\r\n                {\r\n                    d:'M81.1215,19.8882 L81.1215,19.8892 L54.0745,19.8892 C53.6005,20.3192 53.0895,20.7052 52.4995,21.0002 C49.8515,22.3242 44.1185,24.3492 38.5675,26.4072 L42.4995,50.0002 C46.8335,53.3332 50.6665,56.6662 53.9995,60.0002 C57.3335,63.3332 62.1665,68.6662 68.4995,76.0002 C72.8335,70.0002 76.6665,65.1662 79.9995,61.5002 C83.3335,57.8332 87.6665,53.5002 92.9995,48.5002 L95.4945,26.0552 C85.0475,22.9832 82.5395,22.4492 81.1215,19.8882',\r\n                    attr:{\r\n                        fill:'#FEDFC6',\r\n                        transform:\"translate(0.000000, 83.000000)\"\r\n                    }\r\n                },\r\n                {\r\n                    d:'M36.9999,167.5 C51.9999,166.5 62.1669,166 67.4999,166 C72.8329,166 83.1669,166.5 98.4999,167.5 C101.8329,158.833 102.4999,151.833 100.4999,146.5 C97.4999,138.5 94.4999,134 94.4999,132.5 C94.4999,131.5 95.3329,123.833 96.9999,109.5 L95.4999,109 L92.9999,131.5 C87.6669,136.5 83.3329,140.833 79.9999,144.5 C76.6669,148.167 72.8329,153 68.4999,159 C62.1669,151.667 57.3329,146.333 53.9999,143 C50.6669,139.667 46.8329,136.333 42.4999,133 L38.4999,109 L37.4999,109.5 C39.4999,124.833 40.3329,132.833 39.9999,133.5 C39.4999,134.5 32.4999,146 33.4999,154.5 C34.1669,160.167 35.3329,164.5 36.9999,167.5',\r\n                    attr:{\r\n                        fill:'#FD9A8E'\r\n                    }\r\n                }\r\n            ],\r\n            upperLimb:[//上肢\r\n                {\r\n                    d:'M26.4999,31.5 C24.0169,32.99 22.5209,34.975 21.5209,37.207 L33.5209,67.736 C34.3609,59.945 39.5709,51.358 39.9999,50.5 C40.3319,49.837 39.5099,41.929 37.5379,26.791 C32.9809,28.492 28.6879,30.188 26.4999,31.5',\r\n                    attr:{\r\n                        fill:'#FEDFC6',\r\n                        transform:\"translate(0.000000, 83.000000)\"\r\n                    }\r\n                },\r\n                {\r\n                    d:'M28.9999,111.5 C29.3329,106.167 29.4999,104.167 29.4999,105.5 L34.9999,71.5 L21.5209,37.207 C20.5079,39.468 20.0029,41.984 19.4999,44.5 C18.4999,49.5 14.9999,104 13.9999,106.5 C12.9999,109 9.4999,133 8.4999,140.5 C7.4999,148 4.9999,164 4.9999,165.5 C4.9999,167 3.4999,177 3.4999,180 C3.4999,182 3.1669,186.167 2.4999,192.5 C0.8339,199.5 -0.0001,203.167 -0.0001,203.5 C-0.0001,203.632 0.4999,204 1.4999,202.5 C0.4999,205 4.0299,210.103 5.4999,209 C6.8339,208 8.8329,200.833 11.4999,187.5 C12.1669,191.5 12.8329,193.333 13.4999,193 C14.4999,192.5 15.9999,178.5 15.4999,174 C15.1669,171 14.9999,166.167 14.9999,159.5 C19.9999,144.833 22.4999,136.667 22.4999,135 C22.4999,132.5 28.4999,119.5 28.9999,111.5',\r\n                    attr:{\r\n                        fill:'#FEDFC6',\r\n                        transform:\"translate(0.000000, 83.000000)\"\r\n                    }\r\n                },\r\n                {\r\n                    d:'M96.9999,26.5 C95.3329,40.833 94.4999,48.5 94.4999,49.5 C94.4999,51 97.4999,55.5 100.4999,63.5 C101.1039,65.111 101.4609,66.877 101.5779,68.793 L101.9999,67 L114.9999,38 C113.4999,35.5 110.4999,30.5 96.9999,26.5',\r\n                    attr:{\r\n                        fill:'#FEDFC6',\r\n                        transform:\"translate(0.000000, 83.000000)\"\r\n                    }\r\n                },\r\n                {\r\n                    d:'M130.4999,166.5 C129.4999,161.5 127.9999,155.5 127.9999,150 C127.9999,144.5 120.4999,102 119.9999,94 C119.4999,86 116.4999,40.5 114.9999,38 L101.9999,67 C101.9999,83.667 102.9999,95.833 104.9999,103.5 C106.9999,111.167 109.9999,123.667 113.9999,141 C117.6669,152 119.4999,157.667 119.4999,158 C119.4999,158.5 118.9999,180.5 118.9999,183.5 C118.9999,185.5 119.1669,189 119.4999,194 C121.4999,194.667 122.4999,194.167 122.4999,192.5 C122.4999,190.833 122.8329,189.833 123.4999,189.5 C125.4999,200.833 126.8329,206.667 127.4999,207 C128.4999,207.5 131.4999,210 132.9999,208 C133.9999,206.667 134.4999,204.667 134.4999,202 C132.4999,181.667 131.1669,169.833 130.4999,166.5',\r\n                    attr:{\r\n                        fill:'#FEDFC6',\r\n                        transform:\"translate(0.000000, 83.000000)\"\r\n                    }\r\n                }\r\n            ],\r\n            waist:[//腰部\r\n                {\r\n                    d:'M95.9164,193.9443 C95.9164,188.3493 96.7304,179.5003 98.3544,167.4073 C83.3354,166.4323 73.1834,165.9443 67.9164,165.9443 C62.6654,165.9443 52.7184,166.4303 38.0974,167.3993 L38.4164,168.9443 C40.0834,181.9443 40.4164,190.7773 39.4164,195.4443 C38.4374,200.0163 35.3714,210.2033 30.2314,225.9753 C42.4864,227.2863 56.2114,227.9443 71.4164,227.9443 C86.3314,227.9443 97.4504,227.3113 104.7954,226.0493 C103.4564,221.8813 102.1134,217.4623 101.4164,214.4443 C99.9164,207.9443 95.9164,202.4443 95.9164,193.9443',\r\n                    attr:{\r\n                        fill:'#FEDFC6'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M67.9999,215 C68.5519,215 68.9999,213.881 68.9999,212.5 C68.9999,211.119 68.5519,210 67.9999,210 C67.4479,210 66.9999,211.119 66.9999,212.5 C66.9999,213.881 67.4479,215 67.9999,215',\r\n                    attr:{\r\n                        fill:'#FCD2B0'\r\n                    }\r\n                }\r\n            ],\r\n            genitals:[//男/女性生殖\r\n                {\r\n                    d:'M29.6596,226.0796 C41.9926,227.4126 55.8266,228.0796 71.1596,228.0796 C86.4926,228.0796 97.8266,227.4126 105.1596,226.0796 C106.1596,228.0796 106.8266,229.9126 107.1596,231.5796 C107.4926,233.2466 107.8266,235.0796 108.1596,237.0796 C101.1596,240.0796 95.1596,243.0796 90.1596,246.0796 C82.6596,250.5796 74.1596,256.5796 72.1596,257.5796 C70.8266,258.2466 68.4926,258.4126 65.1596,258.0796 C52.8266,250.2466 43.9926,245.0376 38.6596,242.4546 C33.3266,239.8716 29.6596,238.0796 27.6596,237.0796 C27.6596,235.0796 27.8266,233.2466 28.1596,231.5796 C28.4926,229.9126 28.9926,228.0796 29.6596,226.0796',\r\n                    attr:{\r\n                        fill:'#FD9A8E'\r\n                    }\r\n                }\r\n            ],\r\n            theLegs:[//下肢\r\n                {\r\n                    d:'M64.9999,175 C52.6669,167.167 43.8329,161.958 38.4999,159.375 C33.2949,156.854 29.6899,155.092 27.6599,154.08 C26.8879,159.515 26.4999,164.822 26.4999,170 C26.4999,182.5 39.4999,243 39.4999,244 C39.4999,245 40.4999,262 39.9999,272.5 C39.4999,283 42.4999,318 42.9999,321.5 C43.4999,325 47.9999,342.5 47.9999,348 L47.9999,363 C47.9999,369.667 47.6669,374 46.9999,376 C46.3329,378 45.1669,383.167 43.4999,391.5 C43.1669,392.833 43.1669,393.667 43.4999,394 C46.5979,397.098 49.4439,397.015 50.9999,397.5 C56.4979,399.214 60.7639,396.5 61.4999,396.5 C62.1669,396.5 62.4999,395.833 62.4999,394.5 L60.9999,356.5 C62.3329,318.833 63.1669,298.667 63.4999,296 C63.9999,292 63.9999,246.5 63.9999,243 C63.9999,240.729 64.6319,218.083 65.8949,175.076 C65.6029,175.053 65.3099,175.031 64.9999,175',\r\n                    attr:{\r\n                        fill:'#FEDFC6',\r\n                        transform:'translate(0.000000, 83.000000)'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M89.9999,163 C82.4999,167.5 73.9999,173.5 71.9999,174.5 C71.4769,174.762 70.7939,174.943 69.9629,175.051 C69.6549,192.397 69.4999,201.896 69.4999,203.5 C69.4999,205.167 69.8329,222.667 70.4999,256 L70.4999,263 L70.9999,289 L73.9999,337 L73.9999,361 C73.6669,370.667 73.4999,376.167 73.4999,377.5 C73.4999,378.833 73.3329,385.167 72.9999,396.5 C85.3329,396.5 91.6669,395.333 91.9999,393 C92.3329,390.667 90.9999,385 87.9999,376 C86.9999,370.667 86.6669,364.667 86.9999,358 C87.4999,348 89.9999,331 90.9999,325 C91.9999,319 94.4999,295.5 94.4999,283.5 C94.4999,271.5 94.9999,253 95.9999,248 C96.9999,243 104.4999,202 105.9999,196 C107.4999,190 108.9999,157 107.9999,154 C100.9999,157 94.9999,160 89.9999,163',\r\n                    attr:{\r\n                        fill:'#FEDFC6',\r\n                        transform:'translate(0.000000, 83.000000)'\r\n                    }\r\n                }, {\r\n                    d:'M76.9999,347.9995 C76.6249,348.8045 76.6249,349.6955 76.9999,350.4995 C77.4349,351.3025 77.7699,352.1415 77.9999,352.9995 C77.9999,352.9995 76.0299,351.4935 75.9999,350.4995 C76.0229,349.6025 76.3719,348.7295 76.9999,347.9995 Z M87.9999,353.9995 C88.8009,353.3705 89.4229,352.5415 89.8039,351.5955 C90.2459,350.2275 89.8039,347.9885 89.8039,347.9885 L89.2019,347.9885 C89.1979,349.0205 88.9929,350.0405 88.6009,350.9945 C88.3249,351.5665 88.1229,352.1735 87.9999,352.7975 L87.9999,353.9995 Z',\r\n                    attr:{\r\n                        fill:'#FCD2B0'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M58.827,344.9995 C59.389,346.2865 59.389,347.7135 58.827,348.9995 C58.175,350.2835 57.672,351.6255 57.327,352.9995 C57.327,352.9995 60.282,350.5895 60.327,348.9995 C60.292,347.5625 59.769,346.1685 58.827,344.9995 Z M47.327,352.9995 C45.994,351.9525 44.959,350.5725 44.327,348.9995 C43.591,346.7235 44.327,342.9995 44.327,342.9995 L45.327,342.9995 C45.335,344.7155 45.675,346.4125 46.327,347.9995 C46.787,348.9525 47.123,349.9615 47.327,350.9995 L47.327,352.9995 Z',\r\n                    attr:{\r\n                        fill:'#FCD2B0'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M59.4999,476.9995 C60.8809,476.9995 61.9999,478.1195 61.9999,479.4995 L61.9999,480.4995 C61.9999,481.8805 60.8809,482.9995 59.4999,482.9995 C58.1199,482.9995 56.9999,481.8805 56.9999,480.4995 L56.9999,479.4995 C56.9999,478.1195 58.1199,476.9995 59.4999,476.9995',\r\n                    attr:{\r\n                        fill:'#FFB895'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M54.4999,477.9995 C55.3289,477.9995 55.9999,478.6715 55.9999,479.4995 L55.9999,481.4995 C55.9999,482.3285 55.3289,482.9995 54.4999,482.9995 C53.6719,482.9995 52.9999,482.3285 52.9999,481.4995 L52.9999,479.4995 C52.9999,478.6715 53.6719,477.9995 54.4999,477.9995',\r\n                    attr:{\r\n                        fill:'#FFB895'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M44.6019,475.2075 C45.1419,475.3225 45.4869,475.8535 45.3719,476.3945 L45.1639,477.3725 C45.0489,477.9125 44.5189,478.2575 43.9779,478.1425 C43.4379,478.0275 43.0929,477.4965 43.2079,476.9565 L43.4159,475.9785 C43.5309,475.4375 44.0619,475.0935 44.6019,475.2075',\r\n                    attr:{\r\n                        fill:'#FFB895'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M46.682,477.2065 C47.268,477.3205 47.652,477.8895 47.538,478.4755 L47.331,479.5375 C47.217,480.1245 46.649,480.5075 46.062,480.3945 C45.475,480.2795 45.093,479.7115 45.206,479.1245 L45.413,478.0615 C45.527,477.4765 46.095,477.0925 46.682,477.2065',\r\n                    attr:{\r\n                        fill:'#FFB895'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M50.5385,478.3374 C51.3455,478.5244 51.8495,479.3294 51.6625,480.1364 L51.4375,481.1104 C51.2515,481.9174 50.4455,482.4214 49.6385,482.2344 C48.8315,482.0484 48.3285,481.2424 48.5145,480.4364 L48.7395,479.4614 C48.9255,478.6544 49.7315,478.1504 50.5385,478.3374',\r\n                    attr:{\r\n                        fill:'#FFB895'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M75.4999,482.9995 C76.8809,482.9995 77.9999,481.8805 77.9999,480.4995 L77.9999,479.4995 C77.9999,478.1195 76.8809,476.9995 75.4999,476.9995 C74.1199,476.9995 72.9999,478.1195 72.9999,479.4995 L72.9999,480.4995 C72.9999,481.8805 74.1199,482.9995 75.4999,482.9995',\r\n                    attr:{\r\n                        fill:'#FFB895'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M80.4999,481.9995 C81.3289,481.9995 81.9999,481.3285 81.9999,480.4995 L81.9999,478.4995 C81.9999,477.6715 81.3289,476.9995 80.4999,476.9995 C79.6719,476.9995 78.9999,477.6715 78.9999,478.4995 L78.9999,480.4995 C78.9999,481.3285 79.6719,481.9995 80.4999,481.9995',\r\n                    attr:{\r\n                        fill:'#FFB895'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M85.3612,481.2349 C86.1682,481.0479 86.6722,480.2429 86.4852,479.4359 L86.2602,478.4619 C86.0742,477.6549 85.2692,477.1509 84.4612,477.3379 C83.6542,477.5239 83.1512,478.3299 83.3372,479.1359 L83.5622,480.1109 C83.7492,480.9179 84.5542,481.4219 85.3612,481.2349',\r\n                    attr:{\r\n                        fill:'#FFB895'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M91.6019,478.1421 C92.1419,478.0281 92.4869,477.4961 92.3719,476.9561 L92.1639,475.9781 C92.0489,475.4381 91.5189,475.0931 90.9779,475.2071 C90.4379,475.3231 90.0929,475.8541 90.2079,476.3941 L90.4159,477.3721 C90.5309,477.9131 91.0619,478.2571 91.6019,478.1421',\r\n                    attr:{\r\n                        fill:'#FFB895'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M88.682,479.394 C89.268,479.28 89.652,478.711 89.538,478.124 L89.331,477.062 C89.217,476.476 88.649,476.092 88.062,476.206 C87.475,476.321 87.093,476.889 87.206,477.475 L87.413,478.538 C87.527,479.124 88.095,479.507 88.682,479.394',\r\n                    attr:{\r\n                        fill:'#FFB895'\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        //背面\r\n        back: {\r\n            wholeBody:[\r\n                //头部\r\n                {\r\n                    d:'M97.2155331,44.7956428 C96.3355934,48.410065 94.6676114,50.7731852 91.6024608,51.2386728 C91.3227018,52.1258565 91.024238,53.0033088 90.703003,53.8580544 C87.7744789,61.8224343 82.8754428,68.9182823 76.4613163,74.4871039 C73.0659849,77.2970597 69.7967078,78.8897735 67.331738,78.9473512 L66.5632139,78.9473512 C66.0386657,78.8962611 65.5206235,78.8013795 65.0123404,78.6586516 L64.7138765,78.5702576 L64.3357139,78.4502364 L64.0055331,78.3326481 L63.8754127,78.3326481 L63.5639367,78.2028954 L63.1955331,78.050436 L62.967009,77.9433901 L62.6457741,77.7941746 C61.9626416,77.4551958 61.2957741,77.0813459 60.6476114,76.6791127 C60.3776114,76.5177329 60.1206235,76.3401339 59.8506235,76.1503707 C59.5806235,75.9597965 59.0308645,75.5827028 58.6209849,75.2631869 L58.2111054,74.9339396 C58.0712259,74.8260827 57.9313464,74.7247134 57.8012259,74.6071251 L57.4840572,74.3378883 C57.4458343,74.3159926 57.4108645,74.290853 57.3824006,74.2592258 C56.962762,73.9105155 56.5528825,73.5399095 56.133244,73.1530845 L55.7558946,72.7922099 C55.4346596,72.4945898 55.1264367,72.1872382 54.8149608,71.8669113 L54.4750211,71.519012 C54.3351416,71.3795279 54.2050211,71.2303124 54.0651416,71.0819078 C53.9260753,70.9294484 53.5161958,70.4923442 53.2461958,70.1849926 C52.9794488,69.8743972 52.7183946,69.5865085 52.4581536,69.2661816 C52.3085151,69.0983141 52.1686355,68.9182823 52.0295693,68.7504148 C51.6286355,68.2622205 51.2285151,67.7521304 50.8414066,67.2266322 C50.3201114,66.5389431 49.8402922,65.8107064 49.3035452,65.075171 C49.1921295,64.8951392 49.0717681,64.7272717 48.9636054,64.5561604 C47.5249608,62.3511763 46.2473404,60.044823 45.1486355,57.6533194 C44.9672801,57.2445986 44.7859247,56.848853 44.6175813,56.4401322 C44.3288765,55.771906 44.0491175,55.084217 43.7888765,54.447618 C43.6994187,54.2197399 43.6205331,53.9878071 43.5278223,53.7501975 L43.3188163,53.1517134 L43.1407139,52.6132399 C43.0707741,52.435641 43.0195392,52.2458777 42.9495994,52.0561145 C42.8804729,51.8655403 42.7910151,51.5581887 42.7210753,51.3084148 C39.8527319,50.7318265 38.2733946,48.410065 37.4259849,44.9253954 C36.2183042,39.9453265 37.364991,37.3445968 40.6627319,37.8546869 L40.6627319,37.7849449 C40.6529729,35.399929 40.7993584,33.0173459 41.1010753,30.650982 C42.9878223,16.3108813 50.7617078,9.80702968 60.787491,8.01401025 C61.4576114,7.89398905 62.137491,7.7958636 62.7856536,7.71233534 C64.2283645,7.55501025 65.6800211,7.47229293 67.1316777,7.47553675 L67.2715572,7.47553675 C80.966738,7.47553675 92.2408645,14.1496887 93.5209247,33.7991057 C93.6095693,35.064194 93.6510452,36.4006463 93.6510452,37.7849449 L93.6510452,37.9025332 C97.1553524,37.2051127 98.4036958,39.8950473 97.1553524,44.9253954',\r\n                    attr:{\r\n                        fill:'#FEDFC6'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M40.462509,35.6209951 C42.0410331,41.9975269 43.3723283,46.3126134 44.4588343,48.5711205 C49.6913042,59.525488 54.7643765,64.0579102 58.4394669,66.4972601 C61.3785633,68.5059933 64.8698584,69.5513131 68.4310934,69.4848148 C72.3444669,69.2658572 76.0585934,67.6788201 78.9171777,65.0051046 C80.9153404,63.0125905 83.8511837,60.0258466 89.4040753,49.5653502 C90.3978705,47.7123201 91.894256,43.0655534 93.8989247,35.6209951 C94.2323584,15.7023413 85.7411837,5.57433604 68.4310934,5.24508869 C51.1169367,4.91259753 41.7938042,15.0365481 40.462509,35.6209951',\r\n                    attr:{\r\n                        fill:'#9C7757'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M58.9422199,32.2346131 L65.0123404,30.5810777 C65.0123404,34.6261166 65.383997,37.0054558 66.1118584,37.743424 C66.8421596,38.4813922 67.5919789,38.1107862 68.3287861,36.6478251 C70.031738,34.8418304 71.8778223,33.1753198 73.8524006,31.6677562 C76.0839669,30.2485866 78.4944488,29.1367686 81.0236657,28.3606855 C84.3401114,27.2642756 93.7087861,1.38024382 69.4185452,0.284644876 C53.2112259,-0.441159011 49.7199307,10.2123445 58.9422199,32.2346131',\r\n                    attr:{\r\n                        fill:'#9C7757'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M81.0044729,29.377703 C78.4728163,30.153786 76.0582681,31.2656041 73.8218223,32.6847737 C71.8521235,34.1923373 70.0035994,35.8588479 68.2998343,37.6648426 C67.8297741,38.5990617 67.3605271,39.0775246 66.8904669,39.1188832 C67.5605873,39.1188832 68.7202861,38.1238426 70.3874548,36.1313284 C72.792244,35.1241235 75.1270934,33.9612154 77.3798042,32.643415 C79.0380271,31.5380846 77.6498042,32.485279 80.96625,31.3799486 C82.6342319,30.8220122 85.8482078,23.9702613 85.4993223,17.1558143 C85.2707982,23.2412136 82.5130572,28.8805882 81.0044729,29.377703 M64.9939608,31.5794433 L58.9425452,33.2329786 C55.8261596,25.8013956 54.1614307,19.6649062 53.9475452,14.8243214 C53.7198343,19.9308991 55.3845633,26.7323708 58.9425452,35.2254928 L65.0118524,33.5719574 C65.0346235,34.7470299 65.167997,35.9156147 65.4135994,37.0655475 C65.0923645,35.25712 64.9524849,33.4162542 64.9939608,31.5794433',\r\n                    attr:{\r\n                        fill:'#8D6D55'\r\n                    }\r\n                },\r\n                \r\n\r\n                {\r\n                    d:'M132.852524,254.245939 C131.365898,242.37276 130.857614,233.380091 130.355837,230.840183 C129.24412,225.40598 128.411349,219.923119 127.858337,214.405388 C127.359813,208.927393 120.367464,166.596402 119.86894,158.629589 C119.370416,150.659533 116.374392,105.340987 114.875566,102.851358 C113.375928,100.360918 110.379904,95.3816597 96.8945422,91.3990643 C83.4124337,87.414036 81.9127952,87.414036 80.4164096,83.4290078 C79.3624337,80.0967975 78.5011988,76.7037657 77.8375843,73.2701862 C77.3797229,73.697559 76.9194217,74.1062799 76.4615602,74.4866173 C73.0654157,77.2965731 69.7969518,78.8900979 67.3319819,78.9468647 L66.5634578,78.9468647 C66.0389096,78.8957746 65.5208675,78.8008929 65.0125843,78.658165 L64.7141205,78.570582 L64.3359578,78.4505608 L64.0057771,78.3329724 L63.8756566,78.3329724 L63.5641807,78.2024088 L63.1957771,78.0499495 L62.9664398,77.9429035 L62.6452048,77.7944989 C61.9628855,77.4555201 61.2960181,77.0808594 60.6478554,76.6794371 C60.3778554,76.5172463 60.1200542,76.3404583 59.8500542,76.1498841 C59.5808675,75.9593099 59.0311084,75.5830272 58.6212289,75.2627004 L58.2113494,74.933453 C58.0706566,74.8255961 57.9315904,74.7242269 57.8014699,74.6066385 L57.4843012,74.3374018 C57.4460783,74.315506 57.4102952,74.2903664 57.3826446,74.2587392 L57.3216506,74.2076491 C56.4831867,80.8509848 54.8566807,84.7946544 52.4388795,86.0013541 C47.4446928,88.490983 31.4634578,93.4718629 26.4692711,96.4586067 C21.4750843,99.4453505 20.4780361,104.425419 19.4769217,109.405488 C18.4798735,114.384746 14.9820723,168.6692 13.9833976,171.158018 C12.9830964,173.647647 9.48936145,197.55214 8.4915,205.021838 C7.4911988,212.491536 4.99451205,228.429216 4.99451205,229.924616 C4.99451205,231.416771 3.49487349,241.375287 3.49487349,244.365275 C3.49487349,246.355356 3.16469277,250.505819 2.4961988,256.815041 C0.832283133,263.787624 0.000325301205,267.440161 0.000325301205,267.77022 C0.000325301205,267.899161 0.498036145,268.269767 1.4991506,266.774368 C0.498036145,269.264808 3.49487349,274.741181 6.49333735,272.748667 C8.4915,271.422757 10.4872229,264.61723 12.4853855,252.332898 C13.4856867,256.979665 14.4835482,258.972179 15.4805964,258.308008 C16.9802349,257.312156 15.9815602,242.871497 15.4805964,238.387732 C15.1504157,235.401799 14.9820723,230.585543 14.9820723,223.946262 C19.9754458,209.339358 22.4721325,201.204677 22.4721325,199.544654 C22.4721325,197.055025 28.4674337,184.1049 28.9659578,176.138087 C29.2985783,170.825527 29.4644819,168.833013 29.4644819,170.162978 L34.9596325,136.296725 L37.0163494,146.259296 C52.0265602,145.207488 62.163759,144.684423 67.4303855,144.684423 C72.697012,144.684423 83.0627349,145.175861 98.5243012,146.157927 L101.389392,134.725096 C101.723639,149.332001 102.88903,160.454236 104.887193,168.091801 C106.885355,175.726123 109.88138,188.175078 113.877705,205.43948 C117.537343,216.397902 119.370416,222.038898 119.370416,222.371389 C119.370416,222.871748 118.871892,244.783727 118.871892,247.771282 C118.871892,249.764607 119.036982,253.248465 119.370416,258.227723 C121.368578,258.892706 122.365627,258.395591 122.365627,256.735568 C122.375386,255.025266 122.712072,253.333616 123.363488,251.757121 C125.361651,264.037398 126.696199,270.512866 127.359813,271.177849 C128.360928,272.172078 131.356139,274.663329 132.852524,272.670815 C133.542163,271.744706 134.439994,268.776614 134.352163,265.201117 C134.253759,261.056331 133.09406,256.235209 132.852524,254.245939',\r\n                    attr:{\r\n                        fill:'#FEDFC6'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M29.9756114,206.438088 C51.6162741,207.099827 65.6001596,207.432318 71.9256416,207.432318 C78.2503102,207.432318 89.2389849,207.764809 104.887599,208.427359 C106.215642,212.08314 107.054105,214.572769 107.384286,215.9003 C107.877117,218.36479 108.210551,220.860906 108.382148,223.369998 C97.3967259,236.316069 84.2447982,242.791537 68.9296175,242.791537 C53.6144367,242.791537 39.4646476,236.316069 26.4786235,223.369998 C26.8088042,219.714217 27.148744,216.89453 27.4789247,214.902016 C28.0701596,212.016641 28.9053705,209.183979 29.9756114,206.438088 Z M39.9639849,90.89903 C40.6275994,107.169201 41.1293765,116.380829 41.4595572,118.537966 C41.7938042,120.698348 42.2923283,125.427832 42.9591958,132.732906 C50.9079307,135.007633 59.1673283,136.018081 67.4299789,135.720461 C75.4226295,135.387159 83.7462741,134.72542 92.4025392,133.727947 C94.0672681,122.441088 95.0651295,114.140973 95.3985633,108.828413 C95.731997,103.516664 96.0621777,97.7069894 96.3956114,91.3993887 L97.89525,91.8973145 C97.5618163,102.521624 97.2283825,109.65883 96.8949488,113.311367 L95.8970873,133.230021 C96.3606416,134.61432 97.2316355,135.830751 98.3937741,136.717935 C99.3216958,137.348046 100.328503,137.852459 101.389798,138.21009 L98.8931114,146.176903 C83.2436837,145.182673 72.7575994,144.684747 67.4299789,144.684747 C62.1023584,144.684747 51.7813645,145.182673 36.4661837,146.176903 L34.9697982,138.21009 C37.1175994,136.73091 38.9791355,134.874636 40.462509,132.732906 C39.1312139,118.122758 38.4643464,109.823454 38.4643464,107.83094 C38.4643464,105.84167 38.299256,100.361242 37.9658223,91.3993887 L39.9639849,90.89903 Z',\r\n                    attr:{\r\n                        fill:'#FD9A8E'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M38.9631145,177.053249 C38.0067289,181.510252 35.0586867,191.305767 30.125494,206.438169 C51.6799518,207.099908 65.6134157,207.432399 71.9250723,207.432399 C78.2375422,207.432399 89.1115482,207.76489 104.547904,208.42744 C103.118205,204.027203 101.640524,199.206081 100.890705,195.987404 C99.3918795,189.515991 95.3988072,184.035563 95.3988072,175.570825 C95.3988072,169.925774 96.2307651,160.961487 97.895494,148.679588 L98.5241386,146.167252 C83.0820904,145.17951 72.7196205,144.684828 67.4302229,144.684828 C62.1440783,144.684828 52.0101325,145.169779 37.0251325,146.138869 L37.9660663,150.659127 C39.636488,163.609252 39.9699217,172.406482 38.9631145,177.053249',\r\n                    attr:{\r\n                        fill:'#FEDFC6'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M67.7720331,155.70318 C67.7720331,155.70318 68.2136295,169.190157 68.2770633,175.139316 C68.340497,181.088475 67.7720331,191.117544 67.7720331,191.117544 C67.7720331,191.117544 67.267003,179.859069 67.267003,175.139316 C67.267003,167.125468 67.7720331,155.70318 67.7720331,155.70318',\r\n                    attr:{\r\n                        fill:'#FBCCA8'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M81.6286446,451.160507 C81.7994277,450.753408 82.3882229,446.179627 82.6443976,443.876518 C82.9005723,441.572597 83.4958735,437.443219 83.2331928,436.796078 C83.095753,436.456288 82.1027711,440.076387 81.6286446,443.47023 C81.2781325,445.972834 81.6286446,451.160507 81.6286446,451.160507',\r\n                    attr:{\r\n                        fill:'#FBCCA8'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M79.3819518,451.160507 C79.3819518,451.160507 79.5210181,445.67197 79.3819518,444.875613 C79.2428855,444.077634 78.4288193,443.065564 78.4288193,443.065564',\r\n                    attr:{\r\n                        fill:'#FBCCA8'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M55.1522982,452.171767 C55.1522982,452.171767 55.0132319,446.684041 55.1522982,445.886873 C55.2905512,445.088894 56.1054307,444.077634 56.1054307,444.077634',\r\n                    attr:{\r\n                        fill:'#FBCCA8'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M53.2168373,451.160507 C53.3876205,450.753408 53.9764157,446.179627 54.2325904,443.876518 C54.4887651,441.572597 55.0840663,437.443219 54.8213855,436.796078 C54.6839458,436.456288 53.6909639,440.076387 53.2168373,443.47023 C52.8663253,445.972834 53.2168373,451.160507 53.2168373,451.160507',\r\n                    attr:{\r\n                        fill:'#FBCCA8'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M54.5339819,315.57434 C54.5339819,315.57434 55.3781386,313.902153 55.5001265,313.492621 C55.6221145,313.082278 55.6253675,312.798444 55.5001265,312.105078 L56.4662711,313.492621 L54.5339819,315.57434 Z',\r\n                    attr:{\r\n                        fill:'#FBCCA8'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M47.9874578,315.573529 C47.9874578,315.168863 46.2934518,313.219329 46.085259,312.740866 C45.8770663,312.261593 44.9434518,311.526868 44.9434518,311.526868 L44.9434518,313.145533 L47.9874578,315.573529 Z',\r\n                    attr:{\r\n                        fill:'#FBCCA8'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M79.4454669,316.15328 C79.4454669,316.15328 78.6021235,314.480282 78.4801355,314.071561 C78.3573343,313.660407 78.3540813,313.376573 78.4801355,312.683208 L77.5131777,314.071561',\r\n                    attr:{\r\n                        fill:'#FBCCA8'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M86.5463042,316.585681 C86.5463042,316.181015 88.2411235,314.23067 88.4493163,313.753018 C88.657509,313.273744 89.5903102,312.538209 89.5903102,312.538209 L89.5903102,314.157684 L86.5463042,316.585681 Z',\r\n                    attr:{\r\n                        fill:'#FBCCA8'\r\n                    }\r\n                },\r\n\r\n                //腿部\r\n                {\r\n                    d:'M65.7237741,242.689843 C51.8382922,241.854561 38.9311536,235.577776 26.9991054,223.8676 C26.6591657,227.411469 26.4786235,230.899382 26.4786235,234.324041 C26.4786235,246.772997 38.9628705,303.049965 39.4646476,308.028412 C40.189256,317.472783 40.3543464,326.949593 39.9639849,336.415048 C39.4646476,346.873112 42.9591958,380.238195 43.4585331,383.726108 C43.9570572,387.210778 48.4519066,405.140161 48.4519066,410.617345 C48.4519066,416.094529 48.9536837,427.052951 48.4519066,431.534283 C47.9533825,436.013994 45.8372982,447.46872 45.9552199,448.963308 C46.0568765,450.107564 44.4588343,455.439587 50.4500693,457.928405 C56.4445572,460.418034 59.9391054,457.928405 62.4357922,454.440492 C64.9332922,450.955822 63.4369066,443.984861 62.4357922,439.003981 C61.7721777,435.683935 61.2704006,429.373902 60.9369669,420.079557 C62.6041355,382.5632 63.601997,362.476679 63.9354307,359.821616 C64.4339548,355.836587 63.9354307,315.000995 63.9354307,308.028412 C63.9354307,303.641151 64.5299187,281.860547 65.7237741,242.689843',\r\n                    attr:{\r\n                        fill:'#FEDFC6'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M69.8285873,242.772236 C69.5585873,257.8795 69.4284669,266.207187 69.4284669,267.67177 C69.4284669,269.330982 69.7619006,286.760818 70.4255151,319.962088 L70.4255151,326.934671 L70.9281054,352.827623 L73.9233163,400.635798 L73.9233163,424.540291 C73.5898825,434.170371 73.4247922,439.647554 73.4247922,440.975086 C73.4247922,441.722786 71.7348524,444.41191 71.4266295,446.952629 C70.9053343,451.174455 71.8552139,455.509005 73.4247922,456.414841 C79.4160271,459.89951 85.9090392,457.906996 88.4065392,454.919441 C90.0712681,452.926927 89.9053645,447.782235 87.9072018,439.48212 C86.8751837,433.565399 86.538497,427.546498 86.9069006,421.552736 C87.4086777,411.59341 89.9053645,394.6615 90.9032259,388.683957 C91.9010873,382.709659 94.3977741,359.303092 94.3977741,347.35044 C94.3977741,335.398599 94.8995512,316.993185 95.8974127,312.013927 C96.8944608,307.034669 104.388587,266.198266 105.884973,260.220724 C107.073136,255.478265 108.264551,233.80795 108.20437,223.569655 C97.4694307,236.129712 84.6769608,242.532194 69.8285873,242.772236',\r\n                    attr:{\r\n                        fill:'#FEDFC6'\r\n                    }\r\n                },\r\n            ]\r\n        }\r\n    },\r\n    //男性\r\n    man: {\r\n        front: {\r\n            head:[\r\n                {\r\n                    d:'M84.6544,51.6085 C83.7004,55.5415 81.8984,58.1065 78.5754,58.6105 C75.3354,69.0725 69.1334,77.7755 63.1264,83.0925 L63.1234,83.0955 C59.1284,86.6295 55.2224,88.6695 52.3304,88.7355 C52.2794,88.7385 52.2294,88.7385 52.1824,88.7385 C49.2634,88.7385 45.4424,86.8525 41.5444,83.5165 C41.5364,83.5075 41.5254,83.5015 41.5194,83.4935 C35.3464,78.2115 28.9894,69.3065 25.7314,58.5485 C22.6324,57.9195 20.9234,55.3945 20.0054,51.6085 C19.6404,50.1045 19.4724,48.7985 19.5034,47.7055 C19.5074,47.5515 19.5144,47.4025 19.5284,47.2555 C19.5894,46.4775 19.7624,45.8275 20.0444,45.3085 C20.0914,45.2215 20.1414,45.1355 20.1984,45.0565 C20.2914,44.9175 20.3914,44.7895 20.5044,44.6765 C20.5404,44.6355 20.5804,44.5985 20.6154,44.5675 C20.6334,44.5525 20.6474,44.5375 20.6624,44.5265 C20.6924,44.4965 20.7204,44.4715 20.7534,44.4505 C20.9944,44.2545 21.2724,44.1095 21.5844,44.0115 C21.6314,43.9965 21.6764,43.9815 21.7234,43.9675 C21.7864,43.9525 21.8504,43.9335 21.9124,43.9225 C21.9704,43.9135 22.0284,43.9005 22.0864,43.8945 C22.1444,43.8835 22.2054,43.8765 22.2664,43.8725 C22.3294,43.8635 22.3894,43.8575 22.4504,43.8575 C22.5014,43.8545 22.5514,43.8505 22.6034,43.8505 C22.8844,43.8465 23.1864,43.8685 23.5064,43.9155 L23.5064,43.8395 C23.5064,41.0545 23.6694,38.4745 23.9784,36.0945 C26.0164,20.5015 34.4244,13.4255 45.2684,11.4785 C45.9944,11.3475 46.7314,11.2365 47.4814,11.1525 C48.2454,11.0665 49.0204,11.0045 49.8044,10.9595 C50.1954,10.9385 50.5894,10.9195 50.9864,10.9125 C51.3804,10.8975 51.7814,10.8935 52.1824,10.8935 C67.0594,10.8935 79.2914,18.0825 80.7254,39.5085 C80.8144,40.8935 80.8624,42.3375 80.8624,43.8395 L80.8624,43.9715 C81.0714,43.9265 81.2734,43.8985 81.4684,43.8805 C84.7894,43.5445 85.9224,46.3935 84.6544,51.6085',\r\n                    attr:{\r\n                        fill:'#F8D2B5',\r\n                        transform:'translate(21.000000, 0.261000)'\r\n\r\n                    }\r\n                },\r\n                {\r\n                    d:'M57.6192,3.3785 C52.7492,-1.3105 55.4802,10.1025 33.9042,2.8125 C3.9332,-7.3175 -2.7238,21.9105 1.7732,41.9755 L1.7732,41.9765 C2.3922,47.2845 3.8062,55.3965 6.5432,53.4405 C4.5182,45.5525 4.8602,39.6135 6.7442,35.1525 C14.7492,21.3895 13.0182,45.5505 51.3362,27.9215 C57.4472,32.3785 60.7452,40.1445 57.3342,53.4405 C59.4882,54.9795 60.8212,50.2855 61.5952,45.6295 C61.6662,45.6185 61.7392,45.6095 61.8112,45.6035 C62.1232,44.3855 62.4182,43.1345 62.7052,41.8545 C65.4072,29.7265 66.0102,11.4565 57.6192,3.3785',\r\n                    attr:{\r\n                        fill:'#81543F',\r\n                        transform:'translate(41.000000, 0.000000)'\r\n\r\n                    }\r\n                }\r\n            ],\r\n            neck:[\r\n                {\r\n                    d:'M84.1358,3.0977 L84.1328,3.1007 C80.1378,6.6357 76.2318,8.6737 73.3398,8.7407 C73.2878,8.7437 73.2388,8.7437 73.1918,8.7437 C70.2728,8.7437 66.4508,6.8577 62.5538,3.5217 C62.5448,3.5137 62.5338,3.5067 62.5298,3.4977 C62.4818,3.4577 62.4348,3.4117 62.3868,3.3707 C62.9468,5.3807 63.3858,7.7127 63.5088,9.7437 C68.4528,12.7457 72.2658,12.7437 74.0008,12.7437 C75.7528,12.7437 79.5658,12.7457 84.5088,9.7437 C84.6898,6.7807 85.5358,3.1677 86.4588,0.8767 C85.6858,1.6697 84.9088,2.4127 84.1358,3.0977',\r\n                    attr:{\r\n                        fill:'#F8D2B5',\r\n                        transform:'translate(0.000000, 80.261000)'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M87.0001,18.2389 C85.6131,14.5409 84.6561,10.8489 84.5191,9.5209 C84.5141,9.5929 84.5041,9.6679 84.5001,9.7389 C79.5561,12.7409 75.7441,12.7379 73.9911,12.7389 C72.2581,12.7379 68.4481,12.7399 63.5091,9.7439 C63.7281,15.4439 62.2351,19.1209 59.0001,20.7389 L58.4201,21.0189 L88.5301,21.0189 C88.5441,21.0359 88.5621,21.0519 88.5761,21.0689 C87.8621,20.2439 87.4111,19.3359 87.0001,18.2389',\r\n                    attr:{\r\n                        fill:'#F8D2B5',\r\n                        transform:'translate(0.000000, 80.261000)'\r\n                    }\r\n                }\r\n            ],\r\n            abdomen:[\r\n                {\r\n                    d:'M83.0001,107.7389 C73.1201,104.8089 69.4101,103.2189 67.5301,101.0189 L37.4201,101.0189 C31.8701,103.5889 16.8201,108.3489 12.0001,111.2389 C9.7291,112.5989 4.3301,114.2389 0.1001,119.7789 L14.0001,158.2389 L16.4201,167.1789 L88.2101,167.1789 L90.0001,158.2389 L105.0001,120.7389 C103.5001,118.2389 96.5001,111.7389 83.0001,107.7389',\r\n                    attr:{\r\n                        fill:'#F8D2B5',\r\n                        transform:'translate(21.000000, 0.261000)'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M73.5001,64.7389 C72.1671,73.4059 70.2861,78.3089 67.8591,79.4489 C65.1681,80.7139 62.0371,81.9749 56.6591,81.7559 C53.7761,81.6389 48.3911,80.5889 40.5001,78.6059 C48.1121,81.2399 53.4321,82.6369 56.4601,82.7969 C65.8541,83.2949 70.0001,80.2389 73.5001,80.2389 C77.0001,80.2389 81.9161,83.6659 89.7471,83.2459 C97.3121,82.8409 107.7711,78.7999 108.4431,78.6059 C109.3611,78.3419 98.9381,81.8429 90.2241,82.1679 C85.9491,82.3269 81.9131,80.2029 80.0001,79.4489 C76.1241,77.9219 73.9581,73.0179 73.5001,64.7389',\r\n                    attr:{\r\n                        fill:'#F3CBAC',\r\n                        transform:'translate(0.000000, 80.261000)'\r\n                    }\r\n                },\r\n            ],\r\n            upperLimb:[\r\n                {\r\n                    d:'M0.0001,38.2389 C4.2931,51.9149 7.1261,62.2489 8.5001,69.2389 C9.9621,76.6789 8.1661,82.6669 9.0001,86.2389 C10.8801,94.2939 12.1821,95.9799 13.5001,99.7389 C18.1391,112.9629 21.7601,125.3249 22.0001,128.2389 C22.4931,134.2319 17.0001,141.7389 17.0001,143.7389 C17.0001,145.7389 17.0001,151.2389 16.5001,156.2389 C16.1671,159.5719 16.1671,162.2389 16.5001,164.2389 C18.8331,163.2389 20.1671,160.9059 20.5001,157.2389 C21.0001,151.7389 22.0001,148.7389 23.0001,149.2389 C24.0001,149.7389 24.0001,149.7389 24.5001,151.7389 C25.0001,153.7389 23.2851,159.8819 22.0001,162.2389 C19.0001,167.7389 19.0921,171.5339 19.5001,171.7389 C20.5001,172.2389 26.5001,164.7389 28.0001,162.7389 C28.6271,161.9029 30.9551,159.2929 32.5001,153.7389 C33.1121,151.5359 33.9451,147.3689 35.0001,141.2389 C34.0001,125.2389 33.1671,115.5719 32.5001,112.2389 C31.5001,107.2389 31.0001,95.7389 31.0001,87.2389 C31.0001,78.7389 24.5001,66.2389 23.5001,60.7389 C23.0001,57.9919 24.0001,44.7389 23.0001,33.2389 C22.7031,29.8279 20.5001,24.7389 20.5001,21.2389 C20.5001,8.8929 15.7731,2.0279 15.0001,0.7389',\r\n                    attr:{\r\n                        fill:'#F8D2B5',\r\n                        transform:'translate(111.000000, 120.261000)'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M18.0001,45.2389 C14.9631,52.6639 15.4531,67.8149 14.0001,73.2389 C11.4791,82.6479 13.9761,89.8749 11.5001,98.2389 C8.6251,107.9499 6.5001,110.2389 5.5001,115.7389 C4.5001,121.2389 4.5001,130.7389 3.5001,138.2389 C2.5001,145.7389 2.0001,161.7389 1.5001,165.2389 C1.0001,168.7389 0.0001,182.7389 0.0001,185.7389 C0.0001,186.3429 1.1811,193.6639 4.5001,199.7389 C8.1611,206.4389 15.0001,212.7389 16.5001,212.2389 C18.0001,211.7389 12.4811,202.5409 11.0001,195.7389 C10.0501,191.3759 11.9181,188.8039 12.5001,189.2389 C14.9621,191.0779 14.6411,198.5209 15.0001,199.2389 C16.0001,201.2389 18.0001,204.7389 19.0001,204.2389 C19.5061,203.9859 20.7101,194.6729 19.0001,186.2389 C17.3331,178.0159 11.5001,170.7389 13.0001,166.2389 C14.5001,161.7389 23.5001,134.2389 25.0001,130.2389 C26.5001,126.2389 25.0001,118.7389 26.5001,110.7389 C27.5001,105.4059 30.3331,94.5719 35.0001,78.2389 L21.1001,39.7789',\r\n                    attr:{\r\n                        fill:'#F8D2B5',\r\n                        transform:'translate(0.000000, 80.261000)'\r\n                    }\r\n                },\r\n            ],\r\n            waist:[\r\n                {\r\n                    d:'M88.2101,167.1788 L16.4201,167.1788 L19.0001,176.7388 C22.0001,187.7388 23.0001,195.5718 22.0001,200.2388 C21.0001,204.9058 20.3331,212.4058 20.0001,222.7388 C19.4701,223.9788 19.0001,225.2088 18.5201,226.4288 C18.6801,226.0288 18.8301,225.6288 19.0001,225.2388 C36.7931,226.8118 47.7531,227.5988 51.8801,227.5988 C56.0071,227.5988 66.9861,227.4828 84.8201,227.2488 C84.2451,225.7878 83.8031,224.2788 83.5001,222.7388 C82.8701,219.3988 83.5001,215.7388 83.5001,213.2388 C83.5001,205.5088 82.5001,201.7388 82.5001,193.2388 C82.5001,187.5718 84.1671,180.0718 87.5001,170.7388 L88.2101,167.1788 Z',\r\n                    attr:{\r\n                        fill:'#F8D2B5',\r\n                        transform:'translate(21.000000, 0.261000)'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M51.0001,209.2389 C51.0001,209.7909 52.1191,210.2389 53.5001,210.2389 C54.8811,210.2389 56.0001,209.7909 56.0001,209.2389 C56.0001,208.6869 54.8811,208.2389 53.5001,208.2389 C52.1191,208.2389 51.0001,208.6869 51.0001,209.2389',\r\n                    attr:{\r\n                        fill:'#F3CBAC',\r\n                        transform:'translate(21.000000, 0.261000)'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M50.5001,119.2389 C55.5001,124.5719 58.0001,128.4059 58.0001,130.7389 C58.0001,133.0719 57.8331,136.2389 57.5001,140.2389 C56.8331,133.2389 55.8331,128.9059 54.5001,127.2389 C53.1671,125.5719 51.8331,122.9059 50.5001,119.2389',\r\n                    attr:{\r\n                        fill:'#F3CBAC',\r\n                        transform:'translate(0.000000, 80.261000)'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M97.0001,117.7389 C92.0001,123.0719 89.5001,126.9059 89.5001,129.2389 C89.5001,131.5719 89.6671,134.7389 90.0001,138.7389 C90.6671,131.7389 91.6671,127.4059 93.0001,125.7389 C94.3331,124.0719 95.6671,121.4059 97.0001,117.7389',\r\n                    attr:{\r\n                        fill:'#F3CBAC',\r\n                        transform:'translate(0.000000, 80.261000)'\r\n                    }\r\n                },\r\n            ],\r\n            genitals:[\r\n                {\r\n                    d:'M19.0001,225.2384 C36.7931,226.8114 47.7531,227.5984 51.8801,227.5984 C56.0071,227.5984 67.2131,227.4784 85.5001,227.2384 C86.8401,230.1684 88.0091,233.1734 89.0001,236.2384 C89.7031,239.0324 90.2041,241.8734 90.5001,244.7384 C90.9931,247.6124 91.3261,253.4524 91.5001,262.2594 C84.4791,260.1984 78.2901,259.3754 72.9301,259.7894 C68.5831,260.1114 64.3581,261.3774 60.5501,263.4994 C57.0401,265.4994 56.2101,268.4484 51.8801,268.4484 C46.9301,268.4484 47.0301,264.1384 42.6001,262.2594 C35.6001,259.3184 28.3601,259.7894 24.6001,259.7894 C21.3401,259.7894 17.2931,261.0254 12.4601,263.4994 C12.9671,256.2594 13.6331,249.3394 14.4601,242.7384 C15.1491,236.7214 16.6781,230.8324 19.0001,225.2384',\r\n                    attr:{\r\n                        fill:'#5FADE8',\r\n                        transform:'translate(21.000000, 0.261000)'\r\n                    }\r\n                }\r\n            ],\r\n            theLegs:[\r\n                {\r\n                    d:'M43.5001,327.2384 C43.5001,320.7384 45.5001,316.2384 46.5001,305.7384 C47.0541,300.0054 47.7201,287.2354 48.5001,267.4284 C46.6001,266.0284 45.7001,263.5584 42.6301,262.2594 C35.6301,259.3184 28.3901,259.7894 24.6301,259.7894 C21.5001,259.7894 17.6301,260.9484 13.0201,263.2384 C12.1701,274.5794 11.3201,290.7094 13.0201,307.2384 C14.0201,316.8084 18.3001,326.6484 20.0201,335.2384 C22.1601,345.9384 21.0201,354.2384 21.5201,357.2384 C22.0201,360.2384 18.2101,370.9194 18.0201,389.7384 C17.8901,402.0794 24.0201,422.7384 24.5201,425.7384 C24.8541,427.7384 25.1871,433.4054 25.5201,442.7384 C25.1461,444.3784 24.9791,446.0574 25.0201,447.7384 C25.2901,450.5794 26.4501,452.9384 26.0201,454.2384 C25.5101,455.7784 18.1801,469.2384 19.0201,473.7384 C19.4901,476.2494 28.9201,478.1084 42.5201,476.2384 C44.1051,475.9024 45.5221,475.0164 46.5201,473.7384 C43.7461,463.5984 41.9131,456.5984 41.0201,452.7384 C39.7801,447.4084 40.3501,443.2094 40.0201,440.2384 C38.9911,431.2394 39.3281,422.1364 41.0201,413.2384 C43.0201,401.3884 44.9391,390.7494 44.5201,385.2384 C43.3101,369.4194 40.4601,360.9684 41.0201,358.7384 C42.5001,352.7384 43.5001,333.7384 43.5001,327.2384',\r\n                    attr:{\r\n                        fill:'#F8D2B5',\r\n                        transform:'translate(21.000000, 0.261000)'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M27.7413,363.3106 C28.6393,362.8316 29.3373,362.2016 29.7623,361.4826 C30.2593,360.4416 29.7623,358.7386 29.7623,358.7386 L29.0893,358.7386 C29.0843,359.5226 28.8543,360.2986 28.4153,361.0246 C28.1053,361.4606 27.8793,361.9216 27.7413,362.3966 L27.7413,363.3106 Z',\r\n                    attr:{\r\n                        fill:'#F3CBAC',\r\n                        transform:'translate(21.000000, 0.261000)'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M37.5108,359.6534 C37.1318,360.2414 37.1318,360.8934 37.5108,361.4824 C37.9498,362.0694 38.2888,362.6824 38.5218,363.3104 C38.5218,363.3104 36.5308,362.2094 36.4998,361.4824 C36.5238,360.8254 36.8758,360.1874 37.5108,359.6534',\r\n                    attr:{\r\n                        fill:'#F3CBAC',\r\n                        transform:'translate(21.000000, 0.261000)'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M91.1798,262.1788 C84.2998,260.1788 78.2168,259.3818 72.9298,259.7888 C68.5828,260.1118 64.3588,261.3768 60.5498,263.4988 C58.2008,264.8288 57.0498,266.5988 55.2408,267.6288 C55.2408,273.4488 55.2408,277.9988 55.4998,281.2388 C56.7698,301.2988 59.5708,315.5688 60.4998,324.7388 C61.2098,331.7388 60.7198,338.9888 60.9998,344.7388 C61.3608,352.2188 62.3798,357.4188 62.4998,358.7388 C63.4998,369.9288 59.4298,379.5588 59.9998,384.7388 C61.6598,399.8188 63.4508,410.2088 63.9998,416.2388 C64.9728,426.0588 64.8048,435.9578 63.4998,445.7388 C62.8328,451.4058 62.4998,454.9058 62.4998,456.2388 C62.4998,457.5728 61.4998,463.4058 59.4998,473.7388 C64.2498,475.3988 67.4198,476.2388 68.9998,476.2388 C77.4398,476.2388 85.7298,473.2388 85.4998,470.7388 C85.1668,467.0728 82.8328,461.0728 78.4998,452.7388 C78.4998,449.0728 78.6668,443.9058 78.9998,437.2388 C79.4998,427.2388 85.9998,400.7388 85.9998,392.7388 C85.9998,384.7388 82.9998,373.2388 82.9998,361.2388 C82.9998,349.2388 84.4998,334.2388 85.4998,329.2388 C85.9598,326.9188 88.8698,317.4788 90.9998,306.7388 C93.4598,294.3488 91.9998,278.7388 91.9998,275.2388 C91.9998,273.9488 91.6598,268.5788 91.1798,262.1788',\r\n                    attr:{\r\n                        fill:'#F8D2B5',\r\n                        transform:'translate(21.000000, 0.261000)'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M67.5001,363.7384 C67.1251,364.3824 67.1251,365.0954 67.5001,365.7384 C67.9351,366.3814 68.2701,367.0514 68.5001,367.7384 C68.5001,367.7384 66.5301,366.5334 66.5001,365.7384 C66.5221,365.0194 66.8721,364.3224 67.5001,363.7384',\r\n                    attr:{\r\n                        fill:'#F3CBAC',\r\n                        transform:'translate(21.000000, 0.261000)'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M77.5001,368.7384 C78.3011,368.2154 78.9241,367.5254 79.3041,366.7384 C79.7461,365.6004 79.3041,363.7384 79.3041,363.7384 L78.7021,363.7384 C78.6971,364.5954 78.4931,365.4454 78.1011,366.2384 C77.8241,366.7154 77.6221,367.2184 77.5001,367.7384 L77.5001,368.7384 Z',\r\n                    attr:{\r\n                        fill:'#F3CBAC',\r\n                        transform:'translate(21.000000, 0.261000)'\r\n                    }\r\n                },\r\n            ]\r\n        },\r\n        back: {\r\n            wholeBody:[\r\n                //头部\r\n                {\r\n                    d:'M106.1544,51.8696 C105.2004,55.8026 103.3984,58.3676 100.0754,58.8706 C96.8354,69.3326 90.6334,78.0356 84.6264,83.3526 L84.6234,83.3556 C80.6284,86.8906 76.7214,88.9296 73.8304,88.9966 C73.7794,88.9986 73.7294,88.9986 73.6814,88.9986 C70.7634,88.9986 66.9424,87.1136 63.0444,83.7766 C63.0364,83.7686 63.0254,83.7626 63.0194,83.7536 C56.8464,78.4716 50.4894,69.5676 47.2304,58.8096 C44.1324,58.1806 42.4224,55.6556 41.5054,51.8696 C41.1394,50.3646 40.9724,49.0596 41.0034,47.9666 C41.0074,47.8126 41.0144,47.6636 41.0284,47.5166 C41.0894,46.7386 41.2624,46.0886 41.5444,45.5696 C41.5914,45.4816 41.6414,45.3966 41.6974,45.3176 C41.7914,45.1786 41.8914,45.0506 42.0044,44.9366 C42.0404,44.8956 42.0804,44.8596 42.1154,44.8276 C42.1334,44.8126 42.1474,44.7976 42.1624,44.7866 C42.1924,44.7576 42.2204,44.7326 42.2534,44.7106 C42.4944,44.5156 42.7724,44.3696 43.0844,44.2716 C43.1314,44.2566 43.1764,44.2426 43.2234,44.2286 C43.2864,44.2136 43.3504,44.1946 43.4124,44.1836 C43.4704,44.1736 43.5284,44.1616 43.5864,44.1546 C43.6434,44.1436 43.7054,44.1376 43.7664,44.1336 C43.8284,44.1246 43.8894,44.1186 43.9504,44.1186 C44.0014,44.1156 44.0514,44.1116 44.1034,44.1116 C44.3844,44.1066 44.6864,44.1286 45.0064,44.1766 L45.0064,44.1006 C45.0064,41.3146 45.1694,38.7356 45.4784,36.3556 C47.5164,20.7616 55.9244,13.6856 66.7684,11.7386 C67.4944,11.6076 68.2314,11.4976 68.9814,11.4126 C69.7454,11.3276 70.5204,11.2646 71.3044,11.2196 C71.6954,11.1996 72.0894,11.1806 72.4864,11.1736 C72.8794,11.1586 73.2804,11.1546 73.6814,11.1546 C88.5584,11.1546 100.7914,18.3426 102.2244,39.7696 C102.3134,41.1546 102.3624,42.5986 102.3624,44.1006 L102.3624,44.2326 C102.5714,44.1876 102.7734,44.1596 102.9684,44.1406 C106.2894,43.8046 107.4224,46.6546 106.1544,51.8696',\r\n                    attr:{\r\n                        fill:'#F8D2B5'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M33.4044,2.6087 C3.4334,-7.5203 -3.2236,21.7077 1.2734,41.7717 C1.6214,44.7577 6.9134,60.3027 14.0004,71.0357 C19.5164,79.3907 26.1914,81.5357 32.0004,81.5357 C39.5004,81.5357 45.5024,76.9237 51.0004,68.0357 C56.4594,59.2097 60.7094,47.7457 61.0944,45.4257 C61.1664,45.4147 61.2394,45.4067 61.3114,45.3997 C61.6234,44.1817 61.9184,42.9307 62.2054,41.6507 C64.9074,29.5237 65.5094,11.2537 57.1194,3.1757 C52.2494,-1.5143 54.9804,9.8997 33.4044,2.6087',\r\n                    attr:{\r\n                        fill:'#81543F',\r\n                        transform:'translate(42.000000, 0.464000)'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M33.4044,2.6087 C3.4334,-7.5203 -3.2236,21.7077 1.2734,41.7717 C1.6214,44.7577 6.9134,60.3027 14.0004,71.0357 C19.5164,79.3907 26.1914,81.5357 32.0004,81.5357 C39.5004,81.5357 45.5024,76.9237 51.0004,68.0357 C56.4594,59.2097 60.7094,47.7457 61.0944,45.4257 C61.1664,45.4147 61.2394,45.4067 61.3114,45.3997 C61.6234,44.1817 61.9184,42.9307 62.2054,41.6507 C64.9074,29.5237 65.5094,11.2537 57.1194,3.1757 C52.2494,-1.5143 54.9804,9.8997 33.4044,2.6087',\r\n                    attr:{\r\n                        fill:'#81543F',\r\n                        transform:'translate(42.000000, 0.464000)'\r\n                    }\r\n                },\r\n\r\n\r\n\r\n                {\r\n                    d:'M143.5002,150.0359 C142.5002,145.0359 142.0002,133.5359 142.0002,125.0359 C142.0002,116.5359 135.5002,104.0359 134.5002,98.5359 C134.0002,95.7859 135.0002,82.5359 134.0002,71.0359 C133.7002,67.6249 131.5002,62.5359 131.5002,59.0359 C131.5002,46.6849 126.7702,39.8259 126.0002,38.5359 C124.5002,36.0359 117.5002,29.5359 104.0002,25.5359 C90.5002,21.5359 88.5002,20.0359 87.0002,16.0359 C85.8862,13.0629 85.0472,5.1259 84.6892,0.8299 C84.6692,0.8489 84.6472,0.8699 84.6262,0.8889 L84.6232,0.8919 C80.6282,4.4269 76.7222,6.4659 73.8302,6.5329 C73.7792,6.5349 73.7292,6.5349 73.6822,6.5349 C70.8882,6.5349 67.2642,4.7899 63.5392,1.7149 C63.4852,11.4329 61.9752,17.0479 59.0002,18.5359 C54.0002,21.0359 38.0002,26.0359 33.0002,29.0359 C30.1092,30.7659 22.1492,32.8749 18.0002,43.0359 C15.0002,50.4659 15.4502,65.6159 14.0002,71.0359 C11.4792,80.4459 14.0002,87.6759 11.5002,96.0359 C8.6302,105.7449 6.5002,108.0359 5.5002,113.5359 C4.5002,119.0359 4.5002,128.5359 3.5002,136.0359 C2.5002,143.5359 2.0002,159.5359 1.5002,163.0359 C1.0002,166.5359 0.0002,180.5359 0.0002,183.5359 C0.7032,188.4219 2.2242,193.1549 4.5002,197.5359 C8.1602,204.2349 15.0002,210.5359 16.5002,210.0359 C18.0002,209.5359 12.5002,200.3359 11.0002,193.5359 C10.0002,189.1759 11.9202,186.6049 12.5002,187.0359 C14.9602,188.8759 14.6402,196.3149 15.0002,197.0359 C16.0002,199.0359 18.0002,202.5359 19.0002,202.0359 C19.5102,201.7859 20.7102,192.4659 19.0002,184.0359 C17.3302,175.8149 11.5002,168.5359 13.0002,164.0359 C14.5002,159.5359 23.5002,132.0359 25.0002,128.0359 C26.5002,124.0359 25.0002,116.5359 26.5002,108.5359 C27.5002,103.2019 30.3332,92.3689 35.0002,76.0359 L40.0002,94.5359 C40.8802,97.7659 41.5802,100.7159 42.1202,103.3949 L104.3002,103.3949 C105.3102,98.3399 106.7142,93.3709 108.5002,88.5359 L111.0002,76.0359 C115.2932,89.7159 118.1272,100.0489 119.5002,107.0359 C120.9602,114.4749 119.1702,120.4659 120.0002,124.0359 C121.8802,132.0849 123.1802,133.7759 124.5002,137.5359 C129.1402,150.7559 132.7602,163.1259 133.0002,166.0359 C133.4902,172.0359 128.0002,179.5359 128.0002,181.5359 C128.0002,183.5359 128.0002,189.0359 127.5002,194.0359 C127.1652,196.6909 127.1652,199.3799 127.5002,202.0359 C129.8302,201.0359 131.1702,198.7059 131.5002,195.0359 C132.0002,189.5359 133.0002,186.5359 134.0002,187.0359 C135.0002,187.5359 135.0002,187.5359 135.5002,189.5359 C136.0002,191.5359 134.2902,197.6759 133.0002,200.0359 C130.0002,205.5359 130.0902,209.3359 130.5002,209.5359 C131.5002,210.0359 137.5002,202.5359 139.0002,200.5359 C141.1372,197.8979 142.6732,194.8269 143.5002,191.5359 C144.1132,189.3359 144.9462,185.1689 146.0002,179.0359 C145.0002,163.0359 144.1672,153.3689 143.5002,150.0359',\r\n                    attr:{\r\n                        fill:'#F8D2B5',\r\n                        transform:'translate(0.000000, 82.464000)'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M74.9953,136.9995 C74.9953,136.9995 74.0003,157.6425 74.0003,172.1235 C74.0003,180.6535 74.9953,200.9995 74.9953,200.9995 C74.9953,200.9995 76.1143,182.8745 75.9903,172.1235 C75.8663,161.3735 74.9953,136.9995 74.9953,136.9995',\r\n                    attr:{\r\n                        fill:'#F2C4A2'\r\n                    }\r\n                },\r\n\r\n\r\n\r\n\r\n                {\r\n                    d:'M105.1398,225.5292 C104.8758,224.7002 104.6618,223.8542 104.4998,223.0002 C103.8698,219.6592 104.4998,215.9992 104.4998,213.4992 C104.4998,205.7692 103.4998,201.9992 103.4998,193.4992 C103.5338,190.9332 103.8008,188.3762 104.2998,185.8592 L42.1198,185.8592 C43.4128,192.3192 43.7058,197.1992 42.9998,200.4992 C41.9998,205.1662 41.3328,212.6662 40.9998,223.0002 C40.9198,223.1792 40.8598,223.3492 40.7808,223.5292 C57.6328,225.5292 68.1668,226.5292 72.3798,226.5292 C76.5928,226.5292 87.5138,226.1962 105.1398,225.5292',\r\n                    attr:{\r\n                        fill:'#F8D2B5'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M74.9953,136.9995 C74.9953,136.9995 74.0003,157.6425 74.0003,172.1235 C74.0003,180.6535 74.9953,200.9995 74.9953,200.9995 C74.9953,200.9995 76.1143,182.8745 75.9903,172.1235 C75.8663,161.3735 74.9953,136.9995 74.9953,136.9995',\r\n                    attr:{\r\n                        fill:'#F2C4A2'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M51.0002,198.8281 C58.2912,198.2991 62.8442,198.7681 64.6572,200.2371 C66.4712,201.7051 68.8262,203.8281 71.7262,206.6041 C65.8652,202.7171 61.8682,200.7661 59.7342,200.7541 C57.6002,200.7421 54.6882,200.0991 51.0002,198.8281',\r\n                    attr:{\r\n                        fill:'#F4CDAE'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M94.6252,199.228 C87.3412,198.512 82.9182,199.021 81.3562,200.756 C79.7952,202.49 77.8002,204.955 75.3712,208.15 C80.5512,203.394 84.1932,200.843 86.3002,200.497 C88.4052,200.15 91.1812,199.727 94.6252,199.228',\r\n                    attr:{\r\n                        fill:'#F4CDAE'\r\n                    }\r\n                },\r\n\r\n\r\n\r\n                {\r\n                    d:'M40.5002,223.4999 C57.5202,225.4999 68.1462,226.4999 72.3802,226.4999 C76.6132,226.4999 87.8202,226.1659 106.0002,225.4999 C109.6672,231.4999 111.8332,237.1659 112.5002,242.4999 C113.2372,249.1399 113.5712,255.8179 113.5002,262.4999 C107.1402,265.8329 101.8072,267.4999 97.5002,267.4999 C86.6302,267.4999 78.8102,263.4999 72.5002,263.4999 C67.5002,263.4999 61.5002,268.6399 51.5002,267.4999 C47.4132,267.0399 41.2462,265.3729 33.0002,262.4999 C32.9302,256.8419 33.2802,251.1859 34.0502,245.5789 C35.0822,237.9379 37.2572,230.4949 40.5002,223.4999',\r\n                    attr:{\r\n                        fill:'#5FADE8'\r\n                    }\r\n                },\r\n\r\n\r\n\r\n                {\r\n                    d:'M64.5002,327.4999 C64.5002,320.9999 66.5002,316.4999 67.5002,305.9999 C68.0802,299.9199 68.7862,285.9199 69.6202,263.9999 C65.1602,265.2199 59.6802,268.4699 51.5002,267.5399 C47.5902,267.0999 41.7702,265.5399 34.0702,262.9089 C33.2102,274.2699 32.3002,290.6989 34.0002,307.5399 C35.0002,317.1089 39.2802,326.9489 41.0002,335.5399 C43.1402,346.2389 42.0002,354.5399 42.5002,357.5399 C43.0002,360.5399 39.1892,371.2199 39.0002,390.0399 C38.8702,402.3799 45.0002,423.0399 45.5002,426.0399 C46.0002,429.0399 46.8502,447.0399 47.0002,448.5399 C47.2702,451.3799 46.9302,459.7389 46.5002,461.0399 C45.9902,462.5789 34.0002,468.5399 35.0002,473.0399 C36.0002,477.5399 48.3992,478.4089 62.0002,476.5399 C62.6402,476.4489 66.5002,476.5399 67.0002,473.0399 C67.5002,469.5399 62.9102,456.9699 62.0002,453.0399 C60.7602,447.7099 61.3302,443.5099 61.0002,440.5399 C59.9712,431.5409 60.3082,422.4379 62.0002,413.5399 C64.0002,401.6889 65.9202,391.0499 65.5002,385.5399 C64.2902,369.7199 61.4392,361.2699 62.0002,359.0399 C63.5002,352.9999 64.5002,333.9999 64.5002,327.4999',\r\n                    attr:{\r\n                        fill:'#F8D2B5'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M112.2296,263.1396 C106.4296,266.0296 101.5096,267.4996 97.5006,267.4996 C88.7006,267.4996 81.8996,264.8796 76.2806,263.8796 C76.1796,271.6726 76.2526,277.5456 76.5006,281.4996 C77.7696,301.5596 80.5706,315.8286 81.5006,324.9996 C82.2096,331.9996 81.7196,339.2496 82.0006,344.9996 C82.3596,352.4796 83.3796,357.6796 83.5006,358.9996 C84.5006,370.1896 80.4296,379.8196 81.0006,384.9996 C82.6606,400.0786 84.4506,410.4696 85.0006,416.4996 C85.9726,426.3196 85.8046,436.2186 84.5006,445.9996 C83.8336,451.6656 83.5006,455.1656 83.5006,456.4996 C83.5006,457.6996 79.2996,467.6296 81.0006,472.9996 C82.1396,476.5996 89.0496,476.4996 90.0006,476.4996 C98.4396,476.4996 113.5006,474.4996 111.0006,470.4996 C109.3336,467.8326 104.8336,464.6656 97.5006,460.9996 C98.8336,451.9996 99.6666,444.1656 100.0006,437.4996 C100.5006,427.4996 107.0006,400.9996 107.0006,392.9996 C107.0006,384.9996 104.0006,373.4996 104.0006,361.4996 C104.0006,349.4996 105.5006,334.4996 106.5006,329.4996 C106.9596,327.1796 109.8706,317.7396 112.0006,306.9996 C114.4596,294.6096 113.0006,278.9996 113.0006,275.4996 C113.0006,274.2596 112.6796,269.2296 112.2296,263.1396',\r\n                    attr:{\r\n                        fill:'#F8D2B5'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M49.4826,363.5722 C48.5856,363.0932 47.8876,362.4622 47.4616,361.7432 C46.9656,360.7022 47.4616,359.0002 47.4616,359.0002 L48.1356,359.0002 C48.1406,359.7842 48.3706,360.5592 48.8096,361.2862 C49.1196,361.7212 49.3456,362.1822 49.4826,362.6572 L49.4826,363.5722 Z',\r\n                    attr:{\r\n                        fill:'#F7CBA7'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M58.0109,359.914 C58.3899,360.502 58.3899,361.154 58.0109,361.743 C57.5709,362.33 57.2329,362.943 56.9999,363.572 C56.9999,363.572 58.9899,362.47 59.0209,361.743 C58.9979,361.086 58.6459,360.448 58.0109,359.914',\r\n                    attr:{\r\n                        fill:'#F7CBA7'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M55.2755,470.2089 C55.3845,469.6479 54.5735,463.9979 54.1035,461.1719 C53.6345,458.3449 53.0005,453.2119 52.3555,452.5809 C52.0185,452.2509 51.8545,456.9799 52.3985,461.1899 C52.7985,464.2969 55.2755,470.2089 55.2755,470.2089',\r\n                    attr:{\r\n                        fill:'#F2C5A1'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M58.0607,470.9999 C58.0607,470.9999 57.9237,464.2199 58.0607,463.2349 C58.1977,462.2489 58.9997,460.9999 58.9997,460.9999',\r\n                    attr:{\r\n                        fill:'#F2C5A1'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M89.0002,363.9999 C88.6252,364.6429 88.6252,365.3559 89.0002,365.9999 C89.4352,366.6419 89.7702,367.3129 90.0002,367.9999 C90.0002,367.9999 88.0302,366.7939 88.0002,365.9999 C88.0222,365.2809 88.3722,364.5839 89.0002,363.9999',\r\n                    attr:{\r\n                        fill:'#F7CBA7'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M99.0002,368.9999 C99.8012,368.4759 100.4242,367.7859 100.8042,366.9999 C101.2462,365.8609 100.8042,363.9999 100.8042,363.9999 L100.2022,363.9999 C100.1972,364.8569 99.9932,365.7059 99.6012,366.4999 C99.3242,366.9759 99.1222,367.4799 99.0002,367.9999 L99.0002,368.9999 Z',\r\n                    attr:{\r\n                        fill:'#F7CBA7'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M89.6378,465.1181 C89.8788,465.0321 92.3808,463.7151 93.6348,463.0411 C94.8888,462.3671 97.1588,461.1941 97.4558,460.9171 C97.6138,460.7711 95.5478,461.6761 93.6858,462.6431 C92.3128,463.3571 89.6378,465.1181 89.6378,465.1181',\r\n                    attr:{\r\n                        fill:'#F2C5A1'\r\n                    }\r\n                },\r\n                {\r\n                    d:'M87.1017,465.9579 C87.1017,465.9579 86.8827,461.8939 86.6957,461.3159 C86.5077,460.7389 85.6427,460.0619 85.6427,460.0619',\r\n                    attr:{\r\n                        fill:'#F2C5A1'\r\n                    }\r\n                },\r\n            ]\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/People/sex.js","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.sex[data-v-29d43fb6] {\\r\\n  color: #fd9a8e;\\r\\n  height: 100%;\\r\\n  text-align: center;\\n}\\r\\n\", \"\", {\"version\":3,\"sources\":[\"F:/Doctor/CDCT_RCH_MOBILE/src/components/People/people.vue\"],\"names\":[],\"mappings\":\";AACA;EACE,eAAe;EACf,aAAa;EACb,mBAAmB;CACpB\",\"file\":\"people.vue\",\"sourcesContent\":[\"\\n.sex[data-v-29d43fb6] {\\r\\n  color: #fd9a8e;\\r\\n  height: 100%;\\r\\n  text-align: center;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-29d43fb6\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vux-loader/src/style-loader.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/People/people.vue\n// module id = SzyH\n// module chunks = 1 8","var escape = require(\"../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.cdct_header .vux-header[data-v-07d6a9dc] {\\n  box-shadow: none;\\n}\\n.cdct_container[data-v-07d6a9dc] {\\n  height: 100%;\\n}\\n.tab_content[data-v-07d6a9dc] {\\n  position: relative;\\n}\\n.slideContent[data-v-07d6a9dc] {\\n  height: 100%;\\n}\\n.symptom[data-v-07d6a9dc] {\\n  height: 100%;\\n  width: 100vw;\\n  overflow: hidden;\\n}\\n.drugs[data-v-07d6a9dc] {\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden;\\n  margin-top: 1rem;\\n}\\n.drugs-box[data-v-07d6a9dc] {\\n  padding: 2.3rem 1.5rem;\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: flex;\\n  margin-bottom: 1rem;\\n  background-color: white;\\n  overflow: hidden;\\n}\\n.drugs-box .img[data-v-07d6a9dc] {\\n  width: 10rem;\\n  height: 8rem;\\n  margin-right: 1.5rem;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  background-position: center center;\\n  /* background-image: url(\\\"~viewImgs/drugsAndElse/test-1.png\\\"); */\\n  margin-top: 0.4rem;\\n}\\n.drugs-box .img img[data-v-07d6a9dc] {\\n  width: 100%;\\n  height: 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n}\\n.drugs-box .brief[data-v-07d6a9dc] {\\n  -webkit-box-flex: 1;\\n  -webkit-flex: 1;\\n          flex: 1;\\n}\\n.brief .title[data-v-07d6a9dc] {\\n  color: #333333;\\n}\\n.brief .text[data-v-07d6a9dc] {\\n  color: #666666;\\n  font-size: 1.4rem;\\n  margin-top: 0.6rem;\\n  line-height: 1.8rem;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n  -webkit-box-orient: vertical;\\n}\\n.brief .number[data-v-07d6a9dc] {\\n  margin-top: 0.6rem;\\n  color: #999999;\\n  font-size: 1.3rem;\\n}\\n.brief .number span[data-v-07d6a9dc] {\\n  display: inline-block;\\n  margin-left: 0.8rem;\\n  color: #3cb963;\\n}\\n.drugs-content[data-v-07d6a9dc] {\\n  padding: 1rem 1.5rem;\\n  background-color: white;\\n}\\n.con-text[data-v-07d6a9dc] {\\n  margin-bottom: 1.5rem;\\n}\\n.con-text > h3[data-v-07d6a9dc] {\\n  color: #333333;\\n  font-size: 1.6rem;\\n  margin-bottom: .5rem;\\n}\\n.con-text > p[data-v-07d6a9dc] {\\n  color: #666666;\\n  font-size: 1.4rem;\\n}\\n.con-brief[data-v-07d6a9dc] {\\n  color: #666666;\\n  font-size: 1.4rem;\\n  padding: 1.5rem 0 .5rem 0;\\n}\\n.error[data-v-07d6a9dc] {\\n  background-image: url(\" + escape(require(\"viewImgs/chronicDisease/errorBg.png\")) + \");\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"F:/Doctor/CDCT_RCH_MOBILE/src/views/drugsAndElse/symptoms.vue\"],\"names\":[],\"mappings\":\";AACA;EACE,iBAAiB;CAClB;AACD;EACE,aAAa;CACd;AACD;EACE,mBAAmB;CACpB;AACD;EACE,aAAa;CACd;AACD;EACE,aAAa;EACb,aAAa;EACb,iBAAiB;CAClB;AACD;EACE,YAAY;EACZ,aAAa;EACb,iBAAiB;EACjB,iBAAiB;CAClB;AACD;EACE,uBAAuB;EACvB,qBAAqB;EACrB,sBAAsB;EACtB,cAAc;EACd,oBAAoB;EACpB,wBAAwB;EACxB,iBAAiB;CAClB;AACD;EACE,aAAa;EACb,aAAa;EACb,qBAAqB;EACrB,6BAA6B;EAC7B,uBAAuB;EACvB,mCAAmC;EACnC,iEAAiE;EACjE,mBAAmB;CACpB;AACD;EACE,YAAY;EACZ,aAAa;EACb,gBAAgB;EAChB,iBAAiB;CAClB;AACD;EACE,oBAAoB;EACpB,gBAAgB;UACR,QAAQ;CACjB;AACD;EACE,eAAe;CAChB;AACD;EACE,eAAe;EACf,kBAAkB;EAClB,mBAAmB;EACnB,oBAAoB;EACpB,iBAAiB;EACjB,wBAAwB;EACxB,qBAAqB;EACrB,sBAAsB;EACtB,6BAA6B;CAC9B;AACD;EACE,mBAAmB;EACnB,eAAe;EACf,kBAAkB;CACnB;AACD;EACE,sBAAsB;EACtB,oBAAoB;EACpB,eAAe;CAChB;AACD;EACE,qBAAqB;EACrB,wBAAwB;CACzB;AACD;EACE,sBAAsB;CACvB;AACD;EACE,eAAe;EACf,kBAAkB;EAClB,qBAAqB;CACtB;AACD;EACE,eAAe;EACf,kBAAkB;CACnB;AACD;EACE,eAAe;EACf,kBAAkB;EAClB,0BAA0B;CAC3B;AACD;EACE,gDAA8D;CAC/D\",\"file\":\"symptoms.vue\",\"sourcesContent\":[\"\\n.cdct_header .vux-header[data-v-07d6a9dc] {\\n  box-shadow: none;\\n}\\n.cdct_container[data-v-07d6a9dc] {\\n  height: 100%;\\n}\\n.tab_content[data-v-07d6a9dc] {\\n  position: relative;\\n}\\n.slideContent[data-v-07d6a9dc] {\\n  height: 100%;\\n}\\n.symptom[data-v-07d6a9dc] {\\n  height: 100%;\\n  width: 100vw;\\n  overflow: hidden;\\n}\\n.drugs[data-v-07d6a9dc] {\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden;\\n  margin-top: 1rem;\\n}\\n.drugs-box[data-v-07d6a9dc] {\\n  padding: 2.3rem 1.5rem;\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: flex;\\n  margin-bottom: 1rem;\\n  background-color: white;\\n  overflow: hidden;\\n}\\n.drugs-box .img[data-v-07d6a9dc] {\\n  width: 10rem;\\n  height: 8rem;\\n  margin-right: 1.5rem;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  background-position: center center;\\n  /* background-image: url(\\\"~viewImgs/drugsAndElse/test-1.png\\\"); */\\n  margin-top: 0.4rem;\\n}\\n.drugs-box .img img[data-v-07d6a9dc] {\\n  width: 100%;\\n  height: 100%;\\n  max-width: 100%;\\n  max-height: 100%;\\n}\\n.drugs-box .brief[data-v-07d6a9dc] {\\n  -webkit-box-flex: 1;\\n  -webkit-flex: 1;\\n          flex: 1;\\n}\\n.brief .title[data-v-07d6a9dc] {\\n  color: #333333;\\n}\\n.brief .text[data-v-07d6a9dc] {\\n  color: #666666;\\n  font-size: 1.4rem;\\n  margin-top: 0.6rem;\\n  line-height: 1.8rem;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n  -webkit-box-orient: vertical;\\n}\\n.brief .number[data-v-07d6a9dc] {\\n  margin-top: 0.6rem;\\n  color: #999999;\\n  font-size: 1.3rem;\\n}\\n.brief .number span[data-v-07d6a9dc] {\\n  display: inline-block;\\n  margin-left: 0.8rem;\\n  color: #3cb963;\\n}\\n.drugs-content[data-v-07d6a9dc] {\\n  padding: 1rem 1.5rem;\\n  background-color: white;\\n}\\n.con-text[data-v-07d6a9dc] {\\n  margin-bottom: 1.5rem;\\n}\\n.con-text > h3[data-v-07d6a9dc] {\\n  color: #333333;\\n  font-size: 1.6rem;\\n  margin-bottom: .5rem;\\n}\\n.con-text > p[data-v-07d6a9dc] {\\n  color: #666666;\\n  font-size: 1.4rem;\\n}\\n.con-brief[data-v-07d6a9dc] {\\n  color: #666666;\\n  font-size: 1.4rem;\\n  padding: 1.5rem 0 .5rem 0;\\n}\\n.error[data-v-07d6a9dc] {\\n  background-image: url('~viewImgs/chronicDisease/errorBg.png');\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-07d6a9dc\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vux-loader/src/after-less-loader.js!./node_modules/less-loader?{\"sourceMap\":true}!./node_modules/vux-loader/src/style-loader.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/drugsAndElse/symptoms.vue\n// module id = Ti6e\n// module chunks = 8","/*!\r\n* svg.panzoom.js - A plugin for svg.js that enables panzoom for viewport elements\r\n* @version 1.1.1\r\n* https://github.com/svgdotjs/svg.panzoom.js#readme\r\n*\r\n* @copyright Ulrich-Matthias Schäfer\r\n* @license MIT\r\n*/;\r\n;(function() {\r\n    \"use strict\";\r\n    \r\n    var normalizeEvent = function(ev) {\r\n      if(!ev.touches) {\r\n        ev.touches = [{clientX: ev.clientX, clientY: ev.clientY}]\r\n      }\r\n    \r\n      return ev.touches\r\n    }\r\n    \r\n    SVG.extend(SVG.Doc, SVG.Nested, {\r\n    \r\n      panZoom: function(options) {\r\n        this.off('.panZoom')\r\n    \r\n        // when called with false, disable panZoom\r\n        if(options === false) return this\r\n    \r\n        options = options || {}\r\n        var zoomFactor = options.zoomFactor || 0.03\r\n        var zoomMin = options.zoomMin || Number.MIN_VALUE\r\n        var zoomMax = options.zoomMax || Number.MAX_VALUE\r\n    \r\n        var lastP, lastTouches, zoomInProgress = false\r\n    \r\n        var wheelZoom = function(ev) {\r\n          ev.preventDefault()\r\n    \r\n          // touchpads can give ev.deltaY == 0, which skews the lvl calculation\r\n          if(ev.deltaY == 0) return\r\n    \r\n          var lvl = this.zoom() - zoomFactor * ev.deltaY/Math.abs(ev.deltaY)\r\n            , p = this.point(ev.clientX, ev.clientY)\r\n    \r\n          if(lvl > zoomMax)\r\n            lvl = zoomMax\r\n    \r\n          if(lvl < zoomMin)\r\n            lvl = zoomMin\r\n    \r\n          this.zoom(lvl, p)\r\n        }\r\n    \r\n        var pinchZoomStart = function(ev) {\r\n          lastTouches = normalizeEvent(ev)\r\n    \r\n          if(lastTouches.length < 2) return\r\n          ev.preventDefault()\r\n    \r\n          if(this.fire('pinchZoomStart', {event: ev}).event().defaultPrevented)\r\n            return\r\n    \r\n          this.off('touchstart.panZoom', pinchZoomStart)\r\n    \r\n          zoomInProgress = true\r\n          SVG.on(document, 'touchmove.panZoom', pinchZoom, this, {passive:false})\r\n          SVG.on(document, 'touchend.panZoom', pinchZoomStop, this, {passive:false})\r\n        }\r\n    \r\n        var pinchZoomStop = function(ev) {\r\n          ev.preventDefault()\r\n          zoomInProgress = false\r\n    \r\n          this.fire('pinchZoomEnd', {event: ev})\r\n    \r\n          SVG.off(document,'touchmove.panZoom', pinchZoom)\r\n          SVG.off(document,'touchend.panZoom', pinchZoomStop)\r\n          this.on('touchstart.panZoom', pinchZoomStart)\r\n        }\r\n    \r\n        var pinchZoom = function(ev) {\r\n          ev.preventDefault()\r\n    \r\n          var currentTouches = normalizeEvent(ev)\r\n            , zoom = this.zoom()\r\n    \r\n          // Distance Formula\r\n          var lastDelta = Math.sqrt(\r\n            Math.pow(lastTouches[0].clientX - lastTouches[1].clientX, 2) +\r\n            Math.pow(lastTouches[0].clientY - lastTouches[1].clientY, 2)\r\n          )\r\n    \r\n          var currentDelta = Math.sqrt(\r\n            Math.pow(currentTouches[0].clientX - currentTouches[1].clientX, 2) +\r\n            Math.pow(currentTouches[0].clientY - currentTouches[1].clientY, 2)\r\n          )\r\n    \r\n          var zoomAmount = lastDelta/currentDelta\r\n    \r\n          if((zoom < zoomMin && zoomAmount > 1) || (zoom > zoomMax && zoomAmount < 1))\r\n            zoomAmount = 1\r\n    \r\n          var currentFocus = {\r\n            x: currentTouches[0].clientX + 0.5 * (currentTouches[1].clientX - currentTouches[0].clientX),\r\n            y: currentTouches[0].clientY + 0.5 * (currentTouches[1].clientY - currentTouches[0].clientY)\r\n          }\r\n    \r\n          var lastFocus = {\r\n            x: lastTouches[0].clientX + 0.5 * (lastTouches[1].clientX - lastTouches[0].clientX),\r\n            y: lastTouches[0].clientY + 0.5 * (lastTouches[1].clientY - lastTouches[0].clientY)\r\n          }\r\n    \r\n          var p = this.point(currentFocus.x, currentFocus.y)\r\n          var focusP = this.point(2*currentFocus.x-lastFocus.x, 2*currentFocus.y-lastFocus.y)\r\n          var box = new SVG.Box(this.viewbox()).transform(\r\n            new SVG.Matrix()\r\n              .translate(p.x, p.y)\r\n              .scale(zoomAmount, 0, 0)\r\n              .translate(-focusP.x, -focusP.y)\r\n          )\r\n    \r\n          this.viewbox(box)\r\n    \r\n          lastTouches = currentTouches\r\n    \r\n          this.fire('zoom', {box: box, focus: focusP})\r\n        }\r\n    \r\n        var panStart = function(ev) {\r\n          ev.preventDefault()\r\n    \r\n          this.off('mousedown.panZoom', panStart)\r\n    \r\n          lastTouches = normalizeEvent(ev)\r\n    \r\n          if(zoomInProgress) return\r\n    \r\n          this.fire('panStart', {event: ev})\r\n    \r\n          lastP = {x: lastTouches[0].clientX, y: lastTouches[0].clientY }\r\n    \r\n          SVG.on(document, 'mousemove.panZoom', panning, this)\r\n          SVG.on(document, 'mouseup.panZoom', panStop, this)\r\n        }\r\n    \r\n        var panStop = function(ev) {\r\n          ev.preventDefault()\r\n    \r\n          this.fire('panEnd', {event: ev})\r\n    \r\n          SVG.off(document,'mousemove.panZoom', panning)\r\n          SVG.off(document,'mouseup.panZoom', panStop)\r\n          this.on('mousedown.panZoom', panStart)\r\n        }\r\n    \r\n        var panning = function(ev) {\r\n          ev.preventDefault()\r\n    \r\n          var currentTouches = normalizeEvent(ev)\r\n    \r\n          var currentP = {x: currentTouches[0].clientX, y: currentTouches[0].clientY }\r\n            , p1 = this.point(currentP.x, currentP.y)\r\n            , p2 = this.point(lastP.x, lastP.y)\r\n            , deltaP = [p2.x - p1.x, p2.y - p1.y]\r\n            , box = new SVG.Box(this.viewbox()).transform(new SVG.Matrix().translate(deltaP[0], deltaP[1]))\r\n    \r\n          this.viewbox(box)\r\n          lastP = currentP\r\n        }\r\n    \r\n        this.on('wheel.panZoom', wheelZoom)\r\n        this.on('touchstart.panZoom', pinchZoomStart, this, {passive:false})\r\n        this.on('mousedown.panZoom', panStart, this)\r\n    \r\n        return this\r\n    \r\n      },\r\n    \r\n      zoom: function(level, point) {\r\n        var style = window.getComputedStyle(this.node)\r\n          , width = parseFloat(style.getPropertyValue('width'))\r\n          , height = parseFloat(style.getPropertyValue('height'))\r\n          , v = this.viewbox()\r\n          , zoomX = width / v.width\r\n          , zoomY = height / v.height\r\n          , zoom = Math.min(zoomX, zoomY)\r\n    \r\n        if(level == null) {\r\n          return zoom\r\n        }\r\n    \r\n        var zoomAmount = zoom / level\r\n        if(zoomAmount === Infinity) zoomAmount = Number.MIN_VALUE\r\n    \r\n        point = point || new SVG.Point(width/2 / zoomX + v.x, height/2 / zoomY + v.y)\r\n    \r\n        var box = new SVG.Box(v)\r\n          .transform(new SVG.Matrix()\r\n            .scale(zoomAmount, point.x, point.y)\r\n          )\r\n    \r\n        if(this.fire('zoom', {box: box, focus: point}).event().defaultPrevented)\r\n          return this\r\n    \r\n        return this.viewbox(box)\r\n      }\r\n    })\r\n    \r\n    SVG.extend(SVG.FX, {\r\n      zoom: function(level, point) {\r\n        return this.add('zoom', [new SVG.Number(level)].concat(point || []))\r\n      }\r\n    })\r\n    }());\r\n    \n\n\n// WEBPACK FOOTER //\n// ./src/components/People/svg.panzoom.js","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-07d6a9dc\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vux-loader/src/after-less-loader.js!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vux-loader/src/style-loader.js!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./symptoms.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./symptoms.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./symptoms.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-07d6a9dc\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vux-loader/src/before-template-compiler-loader.js!../../../node_modules/vux-loader/src/template-loader.js!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./symptoms.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-07d6a9dc\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/drugsAndElse/symptoms.vue\n// module id = null\n// module chunks = ","\nimport XHeader from 'vux/src/components/x-header/index.vue'\nimport Tab from 'vux/src/components/tab/tab.vue'\nimport TabItem from 'vux/src/components/tab/tab-item.vue'\nimport InlineLoading from 'vux/src/components/inline-loading/index.vue'\n\nimport slide from \"@/components/Slide/slide\";\nimport Tabs from \"@/components/tabs/tabs\";\nimport SvgProple from \"@/components/People/people\";\nexport default {\ncomponents: {\nXHeader,\nTab,\nTabItem,\nInlineLoading,\nslide,\nSvgProple,\nTabs\n},\nbeforeRouteLeave(to, from, next) { // 用于做缓存\n\nif (to.name == 'drugsDetails') {\n\nlocalStorage.setItem('lastcodeduge_Y', this.$route.params.code || window.localStorage.lastcodeduge_Y)\n} else {\nlocalStorage.removeItem('lastcodeduge_Y');\n}\nnext();\n},\ndata() {\nreturn {\ntabIndex: 0,\ndefalutText: '--',\nlocationName: '',\npageIndex: 1,\npageSize: 15,\ndataobj: {},\nlist: [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n]\n};\n},\nmounted() {\nthis.locationName = this.$route.params.name;\nthis.initdata();\n},\nmethods: {\n\ninitdata() {\nthis.$ajax.post(this.$root.host, {\n'MSH.1': 'diseasepool',\n'MSH.2': 'getDisease',\n'cbm': this.$route.params.code || window.localStorage.lastcodeduge_Y,\n'token': this.$root.loginInfo.token,\n}).then(data => {\nconsole.log(data)\nif (typeof data != 'undefined' && Object.keys(data).length > 0) { //判断是否空对象\n\nthis.dataobj = data;\n} else {\nthis.dataobj = {};\n}\n})\n},\n\ninitdrugdata() {\nthis.$ajax.post(this.$root.host, {\n'MSH.1': 'diseasepool',\n'MSH.2': 'listDrug',\n\"pageIndex\": this.pageIndex,\n\"pageSize\": this.pageSize,\n'cbm': this.$route.params.code || window.localStorage.lastcodeduge_Y,\n'token': this.$root.loginInfo.token,\n}).then(data => {\nconsole.log(data)\nthis.$refs.scroll.finishPullUp();\nthis.$refs.scroll.finishPullDown();\nif (typeof data != 'undefined') { //判断是否空对象\nif (typeof data.rows != 'undefined' && data.rows.length > 0) {\n\nif (this.pageIndex == 1) {\nthis.list = data.rows\n} else {\nthis.list = this.list.concat(data.rows);\n}\n} else {\nthis.judge()\n}\n} else {\nthis.judge()\n}\n})\n},\njudge() { //无数据判断\nif (this.pageIndex > 1) {\nthis.$vux.toast.text('没有更多了', 'bottom');\n} else {\nthis.list = [];\n}\n},\npullingDown() {\nthis.pageIndex = 1;\nthis.initdrugdata();\n},\npullingUp() {\nthis.pageIndex++;\nthis.initdrugdata();\n},\ntodrugDetail(code) {\nthis.$router.push({\nname: 'drugsDetails',\nparams: {\ncode: code,\n}\n})\n}\n},\nwatch: {\ntabIndex(index) {\nthis.$refs.slide.goToPage(index);\nif (this.list.length == 0 && index == 1) {\nthis.initdrugdata();\n}\n}\n}\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/drugsAndElse/symptoms.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cdct_container\"},[_c('div',{staticClass:\"cdct_header vux-1px-b\"},[_c('XHeader',{attrs:{\"left-options\":{backText: '',preventGoBack: true}},on:{\"on-click-back\":function($event){_vm.$router.goBack()}}},[_vm._v(_vm._s(_vm.locationName))])],1),_vm._v(\" \"),_c('tab',{attrs:{\"active-colo\":\"#3CB963\",\"default-color\":\"#333\",\"custom-bar-width\":\"80px\",\"line-width\":2,\"bar-active-color\":\"#3CB963\"},model:{value:(_vm.tabIndex),callback:function ($$v) {_vm.tabIndex=$$v},expression:\"tabIndex\"}},[_c('tab-item',[_vm._v(\"概述\")]),_vm._v(\" \"),_c('tab-item',[_vm._v(\"药品\")])],1),_vm._v(\" \"),_c('slide',{ref:\"slide\",staticStyle:{\"width\":\"100%\",\"height\":\"calc(100% - 56px)\"},attrs:{\"currentPageIndex\":_vm.tabIndex},on:{\"update:currentPageIndex\":function($event){_vm.tabIndex=$event}}},[_c('scroll',{staticClass:\"tab_content\",attrs:{\"padTop\":false}},[_c('div',{staticClass:\"drugs-content\"},[_c('div',{staticClass:\"con-brief\",domProps:{\"innerHTML\":_vm._s(_vm.dataobj.CJBGS)}}),_vm._v(\" \"),_c('div',{staticClass:\"con-text\"},[_c('h3',[_vm._v(\"【症状描述】\")]),_vm._v(\" \"),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.dataobj.CZZMS)}})]),_vm._v(\" \"),_c('div',{staticClass:\"con-text\"},[_c('h3',[_vm._v(\"【病因】\")]),_vm._v(\" \"),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.dataobj.CBY)}})]),_vm._v(\" \"),_c('div',{staticClass:\"con-text\"},[_c('h3',[_vm._v(\"【并发症】\")]),_vm._v(\" \"),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.dataobj.CBFZ)}})]),_vm._v(\" \"),_c('div',{staticClass:\"con-text\"},[_c('h3',[_vm._v(\"【诊断与鉴别诊断】\")]),_vm._v(\" \"),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.dataobj.CZDYJB)}})]),_vm._v(\" \"),_c('div',{staticClass:\"con-text\"},[_c('h3',[_vm._v(\"【治疗】\")]),_vm._v(\" \"),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.dataobj.CZL)}})]),_vm._v(\" \"),_c('div',{staticClass:\"con-text\"},[_c('h3',[_vm._v(\"【预防保健】\")]),_vm._v(\" \"),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.dataobj.CYFBJ)}})])])]),_vm._v(\" \"),_c('scroll',{ref:\"scroll\",staticClass:\"tab_content\",attrs:{\"padTop\":false,\"data\":_vm.list,\"pullDownRefresh\":true,\"isloading\":_vm.$store.state.CONTROL_LOADDING},on:{\"pullingDown\":_vm.pullingDown,\"pullingUp\":_vm.pullingUp}},[_c('div',{staticClass:\"drugs\"},_vm._l((_vm.list),function(obj,index){return _c('div',{key:index,staticClass:\"drugs-box\",on:{\"click\":function($event){_vm.todrugDetail(obj.CBM)}}},[_c('div',{staticClass:\"img\"},[_c('img',{attrs:{\"src\":obj.CYPXT?obj.CYPXT:'muyou',\"alt\":\"\",\"onerror\":_vm.$root.defaultImg}})]),_vm._v(\" \"),_c('div',{staticClass:\"brief\"},[_c('span',{staticClass:\"title\",domProps:{\"innerHTML\":_vm._s(obj.CYPMC)}}),_vm._v(\" \"),_c('p',{staticClass:\"text\",domProps:{\"innerHTML\":_vm._s(obj.CYPJJ)}}),_vm._v(\" \"),_c('div',{staticClass:\"number\"},[_vm._v(\"参考价\"),_c('span',[_vm._v(\"￥\")]),_c('span',{domProps:{\"innerHTML\":_vm._s(obj.CZDCKJG)}})])])])})),_vm._v(\" \"),(_vm.list.length==0)?_c('div',{staticClass:\"error\"},[_vm._v(\"暂无数据\")]):_vm._e()])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-07d6a9dc\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vux-loader/src/before-template-compiler-loader.js!./node_modules/vux-loader/src/template-loader.js!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/drugsAndElse/symptoms.vue\n// module id = null\n// module chunks = ","/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.6.6\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Thu Aug 30 2018 11:37:58 GMT+0200 (GMT+02:00)\n*/;\n(function(root, factory) {\r\n  /* istanbul ignore next */\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function(){\r\n      return factory(root, root.document)\r\n    })\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\r\n  } else {\r\n    root.SVG = factory(root, root.document)\r\n  }\r\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\r\n\r\n// Find global reference - uses 'this' by default when available,\r\n// falls back to 'window' otherwise (for bundlers like Webpack)\r\nvar globalRef = (typeof this !== \"undefined\") ? this : window;\r\n\r\n// The main wrapping element\r\nvar SVG = globalRef.SVG = function(element) {\r\n  if (SVG.supported) {\r\n    element = new SVG.Doc(element)\r\n\r\n    if(!SVG.parser.draw)\r\n      SVG.prepare()\r\n\r\n    return element\r\n  }\r\n}\r\n\r\n// Default namespaces\r\nSVG.ns    = 'http://www.w3.org/2000/svg'\r\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\r\nSVG.xlink = 'http://www.w3.org/1999/xlink'\r\nSVG.svgjs = 'http://svgjs.com/svgjs'\r\n\r\n// Svg support test\r\nSVG.supported = (function() {\r\n  return !! document.createElementNS &&\r\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\r\n})()\r\n\r\n// Don't bother to continue if SVG is not supported\r\nif (!SVG.supported) return false\r\n\r\n// Element id sequence\r\nSVG.did  = 1000\r\n\r\n// Get next named element id\r\nSVG.eid = function(name) {\r\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\r\n}\r\n\r\n// Method for element creation\r\nSVG.create = function(name) {\r\n  // create element\r\n  var element = document.createElementNS(this.ns, name)\r\n\r\n  // apply unique id\r\n  element.setAttribute('id', this.eid(name))\r\n\r\n  return element\r\n}\r\n\r\n// Method for extending objects\r\nSVG.extend = function() {\r\n  var modules, methods, key, i\r\n\r\n  // Get list of modules\r\n  modules = [].slice.call(arguments)\r\n\r\n  // Get object with extensions\r\n  methods = modules.pop()\r\n\r\n  for (i = modules.length - 1; i >= 0; i--)\r\n    if (modules[i])\r\n      for (key in methods)\r\n        modules[i].prototype[key] = methods[key]\r\n\r\n  // Make sure SVG.Set inherits any newly added methods\r\n  if (SVG.Set && SVG.Set.inherit)\r\n    SVG.Set.inherit()\r\n}\r\n\r\n// Invent new element\r\nSVG.invent = function(config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create == 'function' ?\r\n    config.create :\r\n    function() {\r\n      this.constructor.call(this, SVG.create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit)\r\n    initializer.prototype = new config.inherit\r\n\r\n  // Extend with methods\r\n  if (config.extend)\r\n    SVG.extend(initializer, config.extend)\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct)\r\n    SVG.extend(config.parent || SVG.Container, config.construct)\r\n\r\n  return initializer\r\n}\r\n\r\n// Adopt existing svg elements\r\nSVG.adopt = function(node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance) return node.instance\r\n\r\n  // initialize variables\r\n  var element\r\n\r\n  // adopt with element-specific settings\r\n  if (node.nodeName == 'svg')\r\n    element = node.parentNode instanceof window.SVGElement ? new SVG.Nested : new SVG.Doc\r\n  else if (node.nodeName == 'linearGradient')\r\n    element = new SVG.Gradient('linear')\r\n  else if (node.nodeName == 'radialGradient')\r\n    element = new SVG.Gradient('radial')\r\n  else if (SVG[capitalize(node.nodeName)])\r\n    element = new SVG[capitalize(node.nodeName)]\r\n  else\r\n    element = new SVG.Element(node)\r\n\r\n  // ensure references\r\n  element.type  = node.nodeName\r\n  element.node  = node\r\n  node.instance = element\r\n\r\n  // SVG.Class specific preparations\r\n  if (element instanceof SVG.Doc)\r\n    element.namespace().defs()\r\n\r\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n\r\n  return element\r\n}\r\n\r\n// Initialize parsing element\r\nSVG.prepare = function() {\r\n  // Select document body and create invisible svg element\r\n  var body = document.getElementsByTagName('body')[0]\r\n    , draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0)\r\n\r\n  // Create parser object\r\n  SVG.parser = {\r\n    body: body || document.documentElement\r\n  , draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').node\r\n  , poly: draw.polyline().node\r\n  , path: draw.path().node\r\n  , native: SVG.create('svg')\r\n  }\r\n}\r\n\r\nSVG.parser = {\r\n  native: SVG.create('svg')\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  if(!SVG.parser.draw)\r\n    SVG.prepare()\r\n}, false)\r\n\n// Storage for regular expressions\r\nSVG.regex = {\r\n  // Parse unit value\r\n  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n  // Parse hex value\r\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n  // Parse rgb value\r\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n  // Parse reference id\r\n, reference:        /#([a-z0-9\\-_]+)/i\r\n\r\n  // splits a transformation chain\r\n, transforms:       /\\)\\s*,?\\s*/\r\n\r\n  // Whitespace\r\n, whitespace:       /\\s/g\r\n\r\n  // Test hex value\r\n, isHex:            /^#[a-f0-9]{3,6}$/i\r\n\r\n  // Test rgb value\r\n, isRgb:            /^rgb\\(/\r\n\r\n  // Test css declaration\r\n, isCss:            /[^:]+:[^;]+;?/\r\n\r\n  // Test for blank string\r\n, isBlank:          /^(\\s+)?$/\r\n\r\n  // Test for numeric string\r\n, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n  // Test for percent value\r\n, isPercent:        /^-?[\\d\\.]+%$/\r\n\r\n  // Test for image url\r\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n  // split at whitespace and comma\r\n, delimiter:        /[\\s,]+/\r\n\r\n  // The following regex are used to parse the d attribute of a path\r\n\r\n  // Matches all hyphens which are not after an exponent\r\n, hyphen:           /([^e])\\-/gi\r\n\r\n  // Replaces and tests for all path letters\r\n, pathLetters:      /[MLHVCSQTAZ]/gi\r\n\r\n  // yes we need this one, too\r\n, isPathLetter:     /[MLHVCSQTAZ]/i\r\n\r\n  // matches 0.154.23.45\r\n, numbersWithDots:  /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\r\n  // matches .\r\n, dots:             /\\./g\r\n}\r\n\nSVG.utils = {\r\n  // Map function\r\n  map: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      result.push(block(array[i]))\r\n\r\n    return result\r\n  }\r\n\r\n  // Filter function\r\n, filter: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      if (block(array[i]))\r\n        result.push(array[i])\r\n\r\n    return result\r\n  }\r\n\r\n  // Degrees to radians\r\n, radians: function(d) {\r\n    return d % 360 * Math.PI / 180\r\n  }\r\n\r\n  // Radians to degrees\r\n, degrees: function(r) {\r\n    return r * 180 / Math.PI % 360\r\n  }\r\n\r\n, filterSVGElements: function(nodes) {\r\n    return this.filter( nodes, function(el) { return el instanceof window.SVGElement })\r\n  }\r\n\r\n}\n\r\nSVG.defaults = {\r\n  // Default attribute values\r\n  attrs: {\r\n    // fill and stroke\r\n    'fill-opacity':     1\r\n  , 'stroke-opacity':   1\r\n  , 'stroke-width':     0\r\n  , 'stroke-linejoin':  'miter'\r\n  , 'stroke-linecap':   'butt'\r\n  , fill:               '#000000'\r\n  , stroke:             '#000000'\r\n  , opacity:            1\r\n    // position\r\n  , x:                  0\r\n  , y:                  0\r\n  , cx:                 0\r\n  , cy:                 0\r\n    // size\r\n  , width:              0\r\n  , height:             0\r\n    // radius\r\n  , r:                  0\r\n  , rx:                 0\r\n  , ry:                 0\r\n    // gradient\r\n  , offset:             0\r\n  , 'stop-opacity':     1\r\n  , 'stop-color':       '#000000'\r\n    // text\r\n  , 'font-size':        16\r\n  , 'font-family':      'Helvetica, Arial, sans-serif'\r\n  , 'text-anchor':      'start'\r\n  }\r\n\r\n}\n// Module for color convertions\r\nSVG.Color = function(color) {\r\n  var match\r\n\r\n  // initialize defaults\r\n  this.r = 0\r\n  this.g = 0\r\n  this.b = 0\r\n\r\n  if(!color) return\r\n\r\n  // parse color\r\n  if (typeof color === 'string') {\r\n    if (SVG.regex.isRgb.test(color)) {\r\n      // get rgb values\r\n      match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1])\r\n      this.g = parseInt(match[2])\r\n      this.b = parseInt(match[3])\r\n\r\n    } else if (SVG.regex.isHex.test(color)) {\r\n      // get hex values\r\n      match = SVG.regex.hex.exec(fullHex(color))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1], 16)\r\n      this.g = parseInt(match[2], 16)\r\n      this.b = parseInt(match[3], 16)\r\n\r\n    }\r\n\r\n  } else if (typeof color === 'object') {\r\n    this.r = color.r\r\n    this.g = color.g\r\n    this.b = color.b\r\n\r\n  }\r\n\r\n}\r\n\r\nSVG.extend(SVG.Color, {\r\n  // Default to hex conversion\r\n  toString: function() {\r\n    return this.toHex()\r\n  }\r\n  // Build hex value\r\n, toHex: function() {\r\n    return '#'\r\n      + compToHex(this.r)\r\n      + compToHex(this.g)\r\n      + compToHex(this.b)\r\n  }\r\n  // Build rgb value\r\n, toRgb: function() {\r\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\r\n  }\r\n  // Calculate true brightness\r\n, brightness: function() {\r\n    return (this.r / 255 * 0.30)\r\n         + (this.g / 255 * 0.59)\r\n         + (this.b / 255 * 0.11)\r\n  }\r\n  // Make color morphable\r\n, morph: function(color) {\r\n    this.destination = new SVG.Color(color)\r\n\r\n    return this\r\n  }\r\n  // Get morphed color at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // normalise pos\r\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\r\n    // generate morphed color\r\n    return new SVG.Color({\r\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\r\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\r\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\r\n    })\r\n  }\r\n\r\n})\r\n\r\n// Testers\r\n\r\n// Test if given value is a color string\r\nSVG.Color.test = function(color) {\r\n  color += ''\r\n  return SVG.regex.isHex.test(color)\r\n      || SVG.regex.isRgb.test(color)\r\n}\r\n\r\n// Test if given value is a rgb object\r\nSVG.Color.isRgb = function(color) {\r\n  return color && typeof color.r == 'number'\r\n               && typeof color.g == 'number'\r\n               && typeof color.b == 'number'\r\n}\r\n\r\n// Test if given value is a color\r\nSVG.Color.isColor = function(color) {\r\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\r\n}\n// Module for array conversion\r\nSVG.Array = function(array, fallback) {\r\n  array = (array || []).valueOf()\r\n\r\n  // if array is empty and fallback is provided, use fallback\r\n  if (array.length == 0 && fallback)\r\n    array = fallback.valueOf()\r\n\r\n  // parse array\r\n  this.value = this.parse(array)\r\n}\r\n\r\nSVG.extend(SVG.Array, {\r\n  // Make array morphable\r\n  morph: function(array) {\r\n    this.destination = this.parse(array)\r\n\r\n    // normalize length of arrays\r\n    if (this.value.length != this.destination.length) {\r\n      var lastValue       = this.value[this.value.length - 1]\r\n        , lastDestination = this.destination[this.destination.length - 1]\r\n\r\n      while(this.value.length > this.destination.length)\r\n        this.destination.push(lastDestination)\r\n      while(this.value.length < this.destination.length)\r\n        this.value.push(lastValue)\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Clean up any duplicate points\r\n, settle: function() {\r\n    // find all unique values\r\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\r\n      if (seen.indexOf(this.value[i]) == -1)\r\n        seen.push(this.value[i])\r\n\r\n    // set new value\r\n    return this.value = seen\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed array\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\r\n\r\n    return new SVG.Array(array)\r\n  }\r\n  // Convert array to string\r\n, toString: function() {\r\n    return this.value.join(' ')\r\n  }\r\n  // Real value\r\n, valueOf: function() {\r\n    return this.value\r\n  }\r\n  // Parse whitespace separated string\r\n, parse: function(array) {\r\n    array = array.valueOf()\r\n\r\n    // if already is an array, no need to parse it\r\n    if (Array.isArray(array)) return array\r\n\r\n    return this.split(array)\r\n  }\r\n  // Strip unnecessary whitespace\r\n, split: function(string) {\r\n    return string.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n  }\r\n  // Reverse array\r\n, reverse: function() {\r\n    this.value.reverse()\r\n\r\n    return this\r\n  }\r\n, clone: function() {\r\n    var clone = new this.constructor()\r\n    clone.value = array_clone(this.value)\r\n    return clone\r\n  }\r\n})\n// Poly points array\r\nSVG.PointArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [[0,0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PointArray.prototype = new SVG.Array\r\nSVG.PointArray.prototype.constructor = SVG.PointArray\r\n\r\nSVG.extend(SVG.PointArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i].join(','))\r\n\r\n    return array.join(' ')\r\n  }\r\n  // Convert array to line object\r\n, toLine: function() {\r\n    return {\r\n      x1: this.value[0][0]\r\n    , y1: this.value[0][1]\r\n    , x2: this.value[1][0]\r\n    , y2: this.value[1][1]\r\n    }\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push([\r\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\r\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\r\n      ])\r\n\r\n    return new SVG.PointArray(array)\r\n  }\r\n  // Parse point string and flat array\r\n, parse: function(array) {\r\n    var points = []\r\n\r\n    array = array.valueOf()\r\n\r\n    // if it is an array\r\n    if (Array.isArray(array)) {\r\n      // and it is not flat, there is no need to parse it\r\n      if(Array.isArray(array[0])) {\r\n        // make sure to use a clone\r\n        return array.map(function (el) { return el.slice() })\r\n      } else if (array[0].x != null){\r\n        // allow point objects to be passed\r\n        return array.map(function (el) { return [el.x, el.y] })\r\n      }\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples and parse points as floats\r\n    for(var i = 0, len = array.length; i < len; i = i + 2)\r\n      points.push([ array[i], array[i+1] ])\r\n\r\n    return points\r\n  }\r\n  // Move point string\r\n, move: function(x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y))\r\n      for (var i = this.value.length - 1; i >= 0; i--)\r\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\r\n\r\n    return this\r\n  }\r\n  // Resize poly string\r\n, size: function(width, height) {\r\n    var i, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      if(box.width) this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\r\n      if(box.height) this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get bounding box of points\r\n, bbox: function() {\r\n    SVG.parser.poly.setAttribute('points', this.toString())\r\n\r\n    return SVG.parser.poly.getBBox()\r\n  }\r\n})\r\n\nvar pathHandlers = {\r\n  M: function(c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return ['M', p.x, p.y]\r\n  },\r\n  L: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['L', c[0], c[1]]\r\n  },\r\n  H: function(c, p) {\r\n    p.x = c[0]\r\n    return ['H', c[0]]\r\n  },\r\n  V: function(c, p) {\r\n    p.y = c[0]\r\n    return ['V', c[0]]\r\n  },\r\n  C: function(c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\r\n  },\r\n  S: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['S', c[0], c[1], c[2], c[3]]\r\n  },\r\n  Q: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['Q', c[0], c[1], c[2], c[3]]\r\n  },\r\n  T: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['T', c[0], c[1]]\r\n  },\r\n  Z: function(c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return ['Z']\r\n  },\r\n  A: function(c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\r\n  }\r\n}\r\n\r\nvar mlhvqtcsa = 'mlhvqtcsaz'.split('')\r\n\r\nfor(var i = 0, il = mlhvqtcsa.length; i < il; ++i){\r\n  pathHandlers[mlhvqtcsa[i]] = (function(i){\r\n    return function(c, p, p0) {\r\n      if(i == 'H') c[0] = c[0] + p.x\r\n      else if(i == 'V') c[0] = c[0] + p.y\r\n      else if(i == 'A'){\r\n        c[5] = c[5] + p.x,\r\n        c[6] = c[6] + p.y\r\n      }\r\n      else\r\n        for(var j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j%2 ? p.y : p.x)\r\n        }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsa[i].toUpperCase())\r\n}\r\n\r\n// Path points array\r\nSVG.PathArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [['M', 0, 0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PathArray.prototype = new SVG.Array\r\nSVG.PathArray.prototype.constructor = SVG.PathArray\r\n\r\nSVG.extend(SVG.PathArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    return arrayToString(this.value)\r\n  }\r\n  // Move path string\r\n, move: function(x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\r\n        l = this.value[i][0]\r\n\r\n        if (l == 'M' || l == 'L' || l == 'T')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n\r\n        } else if (l == 'H')  {\r\n          this.value[i][1] += x\r\n\r\n        } else if (l == 'V')  {\r\n          this.value[i][1] += y\r\n\r\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n          this.value[i][3] += x\r\n          this.value[i][4] += y\r\n\r\n          if (l == 'C')  {\r\n            this.value[i][5] += x\r\n            this.value[i][6] += y\r\n          }\r\n\r\n        } else if (l == 'A')  {\r\n          this.value[i][6] += x\r\n          this.value[i][7] += y\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Resize path string\r\n, size: function(width, height) {\r\n    // get bounding box of current situation\r\n    var i, l, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      l = this.value[i][0]\r\n\r\n      if (l == 'M' || l == 'L' || l == 'T')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'H')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\r\n      } else if (l == 'V')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l == 'C')  {\r\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\r\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n\r\n      } else if (l == 'A')  {\r\n        // resize radii\r\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\r\n        this.value[i][2] = (this.value[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Test if the passed path array use the same path data commands as this path array\r\n, equalCommands: function(pathArray) {\r\n    var i, il, equalCommands\r\n\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    equalCommands = this.value.length === pathArray.value.length\r\n    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\r\n      equalCommands = this.value[i][0] === pathArray.value[i][0]\r\n    }\r\n\r\n    return equalCommands\r\n  }\r\n  // Make path array morphable\r\n, morph: function(pathArray) {\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    if(this.equalCommands(pathArray)) {\r\n      this.destination = pathArray\r\n    } else {\r\n      this.destination = null\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get morphed path array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    var sourceArray = this.value\r\n      , destinationArray = this.destination.value\r\n      , array = [], pathArray = new SVG.PathArray()\r\n      , i, il, j, jl\r\n\r\n    // Animate has specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n      array[i] = [sourceArray[i][0]]\r\n      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n      }\r\n      // For the two flags of the elliptical arc command, the SVG spec say:\r\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n      // Elliptical arc command as an array followed by corresponding indexes:\r\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n      //   0    1   2        3                 4             5      6  7\r\n      if(array[i][0] === 'A') {\r\n        array[i][4] = +(array[i][4] != 0)\r\n        array[i][5] = +(array[i][5] != 0)\r\n      }\r\n    }\r\n\r\n    // Directly modify the value of a path array, this is done this way for performance\r\n    pathArray.value = array\r\n    return pathArray\r\n  }\r\n  // Absolutize and parse path to array\r\n, parse: function(array) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof SVG.PathArray) return array.valueOf()\r\n\r\n    // prepare for parsing\r\n    var i, x0, y0, s, seg, arr\r\n      , x = 0\r\n      , y = 0\r\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7, 'Z':0 }\r\n\r\n    if(typeof array == 'string'){\r\n\r\n      array = array\r\n        .replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(SVG.regex.hyphen, '$1 -')      // add space before hyphen\r\n        .trim()                                 // trim\r\n        .split(SVG.regex.delimiter)   // split into array\r\n\r\n    }else{\r\n      array = array.reduce(function(prev, curr){\r\n        return [].concat.call(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n    var arr = []\r\n      , p = new SVG.Point()\r\n      , p0 = new SVG.Point()\r\n      , index = 0\r\n      , len = array.length\r\n\r\n    do{\r\n      // Test if we have a path letter\r\n      if(SVG.regex.isPathLetter.test(array[index])){\r\n        s = array[index]\r\n        ++index\r\n      // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      }else if(s == 'M'){\r\n        s = 'L'\r\n      }else if(s == 'm'){\r\n        s = 'l'\r\n      }\r\n\r\n      arr.push(pathHandlers[s].call(null,\r\n          array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n          p, p0\r\n        )\r\n      )\r\n\r\n    }while(len > index)\r\n\r\n    return arr\r\n\r\n  }\r\n  // Get bounding box of path\r\n, bbox: function() {\r\n    SVG.parser.path.setAttribute('d', this.toString())\r\n\r\n    return SVG.parser.path.getBBox()\r\n  }\r\n\r\n})\r\n\n// Module for unit convertions\r\nSVG.Number = SVG.invent({\r\n  // Initialize\r\n  create: function(value, unit) {\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit  = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(SVG.regex.numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] == '%')\r\n          this.value /= 100\r\n        else if (unit[5] == 's')\r\n          this.value *= 1000\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n\r\n    } else {\r\n      if (value instanceof SVG.Number) {\r\n        this.value = value.valueOf()\r\n        this.unit  = value.unit\r\n      }\r\n    }\r\n\r\n  }\r\n  // Add methods\r\n, extend: {\r\n    // Stringalize\r\n    toString: function() {\r\n      return (\r\n        this.unit == '%' ?\r\n          ~~(this.value * 1e8) / 1e6:\r\n        this.unit == 's' ?\r\n          this.value / 1e3 :\r\n          this.value\r\n      ) + this.unit\r\n    }\r\n  , toJSON: function() {\r\n      return this.toString()\r\n    }\r\n  , // Convert to primitive\r\n    valueOf: function() {\r\n      return this.value\r\n    }\r\n    // Add number\r\n  , plus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this + number, this.unit || number.unit)\r\n    }\r\n    // Subtract number\r\n  , minus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this - number, this.unit || number.unit)\r\n    }\r\n    // Multiply number\r\n  , times: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this * number, this.unit || number.unit)\r\n    }\r\n    // Divide number\r\n  , divide: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this / number, this.unit || number.unit)\r\n    }\r\n    // Convert to different unit\r\n  , to: function(unit) {\r\n      var number = new SVG.Number(this)\r\n\r\n      if (typeof unit === 'string')\r\n        number.unit = unit\r\n\r\n      return number\r\n    }\r\n    // Make number morphable\r\n  , morph: function(number) {\r\n      this.destination = new SVG.Number(number)\r\n\r\n      if(number.relative) {\r\n        this.destination.value += this.value\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Get morphed number at given position\r\n  , at: function(pos) {\r\n      // Make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // Generate new morphed number\r\n      return new SVG.Number(this.destination)\r\n          .minus(this)\r\n          .times(pos)\r\n          .plus(this)\r\n    }\r\n\r\n  }\r\n})\r\n\n\r\nSVG.Element = SVG.invent({\r\n  // Initialize node\r\n  create: function(node) {\r\n    // make stroke value accessible dynamically\r\n    this._stroke = SVG.defaults.attrs.stroke\r\n    this._event = null\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    if (this.node = node) {\r\n      this.type = node.nodeName\r\n      this.node.instance = this\r\n\r\n      // store current attribute value\r\n      this._stroke = node.getAttribute('stroke') || this._stroke\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return this.attr('y', y)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\r\n    }\r\n    // Move element to given x and y values\r\n  , move: function(x, y) {\r\n      return this.x(x).y(y)\r\n    }\r\n    // Move element by its center\r\n  , center: function(x, y) {\r\n      return this.cx(x).cy(y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return this.attr('width', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('height', height)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .width(new SVG.Number(p.width))\r\n        .height(new SVG.Number(p.height))\r\n    }\r\n    // Clone element\r\n  , clone: function(parent) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(this.node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) parent.add(clone)\r\n      else this.after(clone)\r\n\r\n      return clone\r\n    }\r\n    // Remove element\r\n  , remove: function() {\r\n      if (this.parent())\r\n        this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n    // Replace element\r\n  , replace: function(element) {\r\n      this.after(element).remove()\r\n\r\n      return element\r\n    }\r\n    // Add element to given container and return self\r\n  , addTo: function(parent) {\r\n      return parent.put(this)\r\n    }\r\n    // Add element to given container and return container\r\n  , putIn: function(parent) {\r\n      return parent.add(this)\r\n    }\r\n    // Get / set id\r\n  , id: function(id) {\r\n      return this.attr('id', id)\r\n    }\r\n    // Checks whether the given point inside the bounding box of the element\r\n  , inside: function(x, y) {\r\n      var box = this.bbox()\r\n\r\n      return x > box.x\r\n          && y > box.y\r\n          && x < box.x + box.width\r\n          && y < box.y + box.height\r\n    }\r\n    // Show element\r\n  , show: function() {\r\n      return this.style('display', '')\r\n    }\r\n    // Hide element\r\n  , hide: function() {\r\n      return this.style('display', 'none')\r\n    }\r\n    // Is element visible?\r\n  , visible: function() {\r\n      return this.style('display') != 'none'\r\n    }\r\n    // Return id on string conversion\r\n  , toString: function() {\r\n      return this.attr('id')\r\n    }\r\n    // Return array of classes on the node\r\n  , classes: function() {\r\n      var attr = this.attr('class')\r\n\r\n      return attr == null ? [] : attr.trim().split(SVG.regex.delimiter)\r\n    }\r\n    // Return true if class exists on the node, false otherwise\r\n  , hasClass: function(name) {\r\n      return this.classes().indexOf(name) != -1\r\n    }\r\n    // Add class to the node\r\n  , addClass: function(name) {\r\n      if (!this.hasClass(name)) {\r\n        var array = this.classes()\r\n        array.push(name)\r\n        this.attr('class', array.join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove class from the node\r\n  , removeClass: function(name) {\r\n      if (this.hasClass(name)) {\r\n        this.attr('class', this.classes().filter(function(c) {\r\n          return c != name\r\n        }).join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Toggle the presence of a class on the node\r\n  , toggleClass: function(name) {\r\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n    }\r\n    // Get referenced element form attribute value\r\n  , reference: function(attr) {\r\n      return SVG.get(this.attr(attr))\r\n    }\r\n    // Returns the parent element instance\r\n  , parent: function(type) {\r\n      var parent = this\r\n\r\n      // check for parent\r\n      if(!parent.node.parentNode) return null\r\n\r\n      // get parent element\r\n      parent = SVG.adopt(parent.node.parentNode)\r\n\r\n      if(!type) return parent\r\n\r\n      // loop trough ancestors if type is given\r\n      while(parent && parent.node instanceof window.SVGElement){\r\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n        if(!parent.node.parentNode || parent.node.parentNode.nodeName == '#document') return null // #759, #720\r\n        parent = SVG.adopt(parent.node.parentNode)\r\n      }\r\n    }\r\n    // Get parent document\r\n  , doc: function() {\r\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\r\n    }\r\n    // return array of all ancestors of given type up to the root svg\r\n  , parents: function(type) {\r\n      var parents = [], parent = this\r\n\r\n      do{\r\n        parent = parent.parent(type)\r\n        if(!parent || !parent.node) break\r\n\r\n        parents.push(parent)\r\n      } while(parent.parent)\r\n\r\n      return parents\r\n    }\r\n    // matches the element vs a css selector\r\n  , matches: function(selector){\r\n      return matches(this.node, selector)\r\n    }\r\n    // Returns the svg node to call native svg methods on it\r\n  , native: function() {\r\n      return this.node\r\n    }\r\n    // Import raw svg\r\n  , svg: function(svg) {\r\n      // create temporary holder\r\n      var well = document.createElement('svg')\r\n\r\n      // act as a setter if svg is given\r\n      if (svg && this instanceof SVG.Parent) {\r\n        // dump raw svg\r\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<([\\w:-]+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\r\n        // transplant nodes\r\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n          this.node.appendChild(well.firstChild.firstChild)\r\n\r\n      // otherwise act as a getter\r\n      } else {\r\n        // create a wrapping svg element in case of partial content\r\n        well.appendChild(svg = document.createElement('svg'))\r\n\r\n        // write svgjs data to the dom\r\n        this.writeDataToDom()\r\n\r\n        // insert a copy of this node\r\n        svg.appendChild(this.node.cloneNode(true))\r\n\r\n        // return target element\r\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\r\n      }\r\n\r\n      return this\r\n    }\r\n  // write svgjs data to the dom\r\n  , writeDataToDom: function() {\r\n\r\n      // dump variables recursively\r\n      if(this.each || this.lines){\r\n        var fn = this.each ? this : this.lines();\r\n        fn.each(function(){\r\n          this.writeDataToDom()\r\n        })\r\n      }\r\n\r\n      // remove previously set data\r\n      this.node.removeAttribute('svgjs:data')\r\n\r\n      if(Object.keys(this.dom).length)\r\n        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n\r\n      return this\r\n    }\r\n  // set given data to the elements data property\r\n  , setData: function(o){\r\n      this.dom = o\r\n      return this\r\n    }\r\n  , is: function(obj){\r\n      return is(this, obj)\r\n    }\r\n  }\r\n})\r\n\nSVG.easing = {\r\n  '-': function(pos){return pos}\r\n, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\r\n, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\r\n, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\r\n}\r\n\r\nSVG.morph = function(pos){\r\n  return function(from, to) {\r\n    return new SVG.MorphObj(from, to).at(pos)\r\n  }\r\n}\r\n\r\nSVG.Situation = SVG.invent({\r\n\r\n  create: function(o){\r\n    this.init = false\r\n    this.reversed = false\r\n    this.reversing = false\r\n\r\n    this.duration = new SVG.Number(o.duration).valueOf()\r\n    this.delay = new SVG.Number(o.delay).valueOf()\r\n\r\n    this.start = +new Date() + this.delay\r\n    this.finish = this.start + this.duration\r\n    this.ease = o.ease\r\n\r\n    // this.loop is incremented from 0 to this.loops\r\n    // it is also incremented when in an infinite loop (when this.loops is true)\r\n    this.loop = 0\r\n    this.loops = false\r\n\r\n    this.animations = {\r\n      // functionToCall: [list of morphable objects]\r\n      // e.g. move: [SVG.Number, SVG.Number]\r\n    }\r\n\r\n    this.attrs = {\r\n      // holds all attributes which are not represented from a function svg.js provides\r\n      // e.g. someAttr: SVG.Number\r\n    }\r\n\r\n    this.styles = {\r\n      // holds all styles which should be animated\r\n      // e.g. fill-color: SVG.Color\r\n    }\r\n\r\n    this.transforms = [\r\n      // holds all transformations as transformation objects\r\n      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\r\n    ]\r\n\r\n    this.once = {\r\n      // functions to fire at a specific position\r\n      // e.g. \"0.5\": function foo(){}\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\n\r\nSVG.FX = SVG.invent({\r\n\r\n  create: function(element) {\r\n    this._target = element\r\n    this.situations = []\r\n    this.active = false\r\n    this.situation = null\r\n    this.paused = false\r\n    this.lastPos = 0\r\n    this.pos = 0\r\n    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\r\n    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\r\n    this.absPos = 0\r\n    this._speed = 1\r\n  }\r\n\r\n, extend: {\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n     * @param ease function || string Function which should be used for easing or easing keyword\r\n     * @param delay Number indicating the delay before the animation starts\r\n     * @return target || this\r\n     */\r\n    animate: function(o, ease, delay){\r\n\r\n      if(typeof o == 'object'){\r\n        ease = o.ease\r\n        delay = o.delay\r\n        o = o.duration\r\n      }\r\n\r\n      var situation = new SVG.Situation({\r\n        duration: o || 1000,\r\n        delay: delay || 0,\r\n        ease: SVG.easing[ease || '-'] || ease\r\n      })\r\n\r\n      this.queue(situation)\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * sets a delay before the next element of the queue is called\r\n     * @param delay Duration of delay in milliseconds\r\n     * @return this.target()\r\n     */\r\n  , delay: function(delay){\r\n      // The delay is performed by an empty situation with its duration\r\n      // attribute set to the duration of the delay\r\n      var situation = new SVG.Situation({\r\n        duration: delay,\r\n        delay: 0,\r\n        ease: SVG.easing['-']\r\n      })\r\n\r\n      return this.queue(situation)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param null || target SVG.Element which should be set as new target\r\n     * @return target || this\r\n     */\r\n  , target: function(target){\r\n      if(target && target instanceof SVG.Element){\r\n        this._target = target\r\n        return this\r\n      }\r\n\r\n      return this._target\r\n    }\r\n\r\n    // returns the absolute position at a given time\r\n  , timeToAbsPos: function(timestamp){\r\n      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\r\n    }\r\n\r\n    // returns the timestamp from a given absolute positon\r\n  , absPosToTime: function(absPos){\r\n      return this.situation.duration/this._speed * absPos + this.situation.start\r\n    }\r\n\r\n    // starts the animationloop\r\n  , startAnimFrame: function(){\r\n      this.stopAnimFrame()\r\n      this.animationFrame = window.requestAnimationFrame(function(){ this.step() }.bind(this))\r\n    }\r\n\r\n    // cancels the animationframe\r\n  , stopAnimFrame: function(){\r\n      window.cancelAnimationFrame(this.animationFrame)\r\n    }\r\n\r\n    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\r\n  , start: function(){\r\n      // dont start if already started\r\n      if(!this.active && this.situation){\r\n        this.active = true\r\n        this.startCurrent()\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // start the current situation\r\n  , startCurrent: function(){\r\n      this.situation.start = +new Date + this.situation.delay/this._speed\r\n      this.situation.finish = this.situation.start + this.situation.duration/this._speed\r\n      return this.initAnimations().step()\r\n    }\r\n\r\n    /**\r\n     * adds a function / Situation to the animation queue\r\n     * @param fn function / situation to add\r\n     * @return this\r\n     */\r\n  , queue: function(fn){\r\n      if(typeof fn == 'function' || fn instanceof SVG.Situation)\r\n        this.situations.push(fn)\r\n\r\n      if(!this.situation) this.situation = this.situations.shift()\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * pulls next element from the queue and execute it\r\n     * @return this\r\n     */\r\n  , dequeue: function(){\r\n      // stop current animation\r\n      this.stop()\r\n\r\n      // get next animation from queue\r\n      this.situation = this.situations.shift()\r\n\r\n      if(this.situation){\r\n        if(this.situation instanceof SVG.Situation) {\r\n          this.start()\r\n        } else {\r\n          // If it is not a SVG.Situation, then it is a function, we execute it\r\n          this.situation.call(this)\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // updates all animations to the current state of the element\r\n    // this is important when one property could be changed from another property\r\n  , initAnimations: function() {\r\n      var i, j, source\r\n      var s = this.situation\r\n\r\n      if(s.init) return this\r\n\r\n      for(i in s.animations){\r\n        source = this.target()[i]()\r\n\r\n        if(!Array.isArray(source)) {\r\n          source = [source]\r\n        }\r\n\r\n        if(!Array.isArray(s.animations[i])) {\r\n          s.animations[i] = [s.animations[i]]\r\n        }\r\n\r\n        //if(s.animations[i].length > source.length) {\r\n        //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\r\n        //}\r\n\r\n        for(j = source.length; j--;) {\r\n          // The condition is because some methods return a normal number instead\r\n          // of a SVG.Number\r\n          if(s.animations[i][j] instanceof SVG.Number)\r\n            source[j] = new SVG.Number(source[j])\r\n\r\n          s.animations[i][j] = source[j].morph(s.animations[i][j])\r\n        }\r\n      }\r\n\r\n      for(i in s.attrs){\r\n        s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i])\r\n      }\r\n\r\n      for(i in s.styles){\r\n        s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i])\r\n      }\r\n\r\n      s.initialTransformation = this.target().matrixify()\r\n\r\n      s.init = true\r\n      return this\r\n    }\r\n  , clearQueue: function(){\r\n      this.situations = []\r\n      return this\r\n    }\r\n  , clearCurrent: function(){\r\n      this.situation = null\r\n      return this\r\n    }\r\n    /** stops the animation immediately\r\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n     * @return this\r\n     */\r\n  , stop: function(jumpToEnd, clearQueue){\r\n      var active = this.active\r\n      this.active = false\r\n\r\n      if(clearQueue){\r\n        this.clearQueue()\r\n      }\r\n\r\n      if(jumpToEnd && this.situation){\r\n        // initialize the situation if it was not\r\n        !active && this.startCurrent()\r\n        this.atEnd()\r\n      }\r\n\r\n      this.stopAnimFrame()\r\n\r\n      return this.clearCurrent()\r\n    }\r\n\r\n    /** resets the element to the state where the current element has started\r\n     * @return this\r\n     */\r\n  , reset: function(){\r\n      if(this.situation){\r\n        var temp = this.situation\r\n        this.stop()\r\n        this.situation = temp\r\n        this.atStart()\r\n      }\r\n      return this\r\n    }\r\n\r\n    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\r\n  , finish: function(){\r\n\r\n      this.stop(true, false)\r\n\r\n      while(this.dequeue().situation && this.stop(true, false));\r\n\r\n      this.clearQueue().clearCurrent()\r\n\r\n      return this\r\n    }\r\n\r\n    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\r\n  , atStart: function() {\r\n      return this.at(0, true)\r\n    }\r\n\r\n    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\r\n  , atEnd: function() {\r\n      if (this.situation.loops === true) {\r\n        // If in a infinite loop, we end the current iteration\r\n        this.situation.loops = this.situation.loop + 1\r\n      }\r\n\r\n      if(typeof this.situation.loops == 'number') {\r\n        // If performing a finite number of loops, we go after all the loops\r\n        return this.at(this.situation.loops, true)\r\n      } else {\r\n        // If no loops, we just go at the end\r\n        return this.at(1, true)\r\n      }\r\n    }\r\n\r\n    // set the internal animation pointer to the specified position and updates the visualisation\r\n    // if isAbsPos is true, pos is treated as an absolute position\r\n  , at: function(pos, isAbsPos){\r\n      var durDivSpd = this.situation.duration/this._speed\r\n\r\n      this.absPos = pos\r\n      // If pos is not an absolute position, we convert it into one\r\n      if (!isAbsPos) {\r\n        if (this.situation.reversed) this.absPos = 1 - this.absPos\r\n        this.absPos += this.situation.loop\r\n      }\r\n\r\n      this.situation.start = +new Date - this.absPos * durDivSpd\r\n      this.situation.finish = this.situation.start + durDivSpd\r\n\r\n      return this.step(true)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the speed of the animations\r\n     * @param speed null || Number The new speed of the animations\r\n     * @return Number || this\r\n     */\r\n  , speed: function(speed){\r\n      if (speed === 0) return this.pause()\r\n\r\n      if (speed) {\r\n        this._speed = speed\r\n        // We use an absolute position here so that speed can affect the delay before the animation\r\n        return this.at(this.absPos, true)\r\n      } else return this._speed\r\n    }\r\n\r\n    // Make loopable\r\n  , loop: function(times, reverse) {\r\n      var c = this.last()\r\n\r\n      // store total loops\r\n      c.loops = (times != null) ? times : true\r\n      c.loop = 0\r\n\r\n      if(reverse) c.reversing = true\r\n      return this\r\n    }\r\n\r\n    // pauses the animation\r\n  , pause: function(){\r\n      this.paused = true\r\n      this.stopAnimFrame()\r\n\r\n      return this\r\n    }\r\n\r\n    // unpause the animation\r\n  , play: function(){\r\n      if(!this.paused) return this\r\n      this.paused = false\r\n      // We use an absolute position here so that the delay before the animation can be paused\r\n      return this.at(this.absPos, true)\r\n    }\r\n\r\n    /**\r\n     * toggle or set the direction of the animation\r\n     * true sets direction to backwards while false sets it to forwards\r\n     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n     * @return this\r\n     */\r\n  , reverse: function(reversed){\r\n      var c = this.last()\r\n\r\n      if(typeof reversed == 'undefined') c.reversed = !c.reversed\r\n      else c.reversed = reversed\r\n\r\n      return this\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a float from 0-1 indicating the progress of the current animation\r\n     * @param eased Boolean indicating whether the returned position should be eased or not\r\n     * @return number\r\n     */\r\n  , progress: function(easeIt){\r\n      return easeIt ? this.situation.ease(this.pos) : this.pos\r\n    }\r\n\r\n    /**\r\n     * adds a callback function which is called when the current animation is finished\r\n     * @param fn Function which should be executed as callback\r\n     * @return number\r\n     */\r\n  , after: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function wrapper(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, c)\r\n              this.off('finished.fx', wrapper) // prevent memory leak\r\n            }\r\n          }\r\n\r\n      this.target().on('finished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // adds a callback which is called whenever one animation step is performed\r\n  , during: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\r\n            }\r\n          }\r\n\r\n      // see above\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.after(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls after ALL animations in the queue are finished\r\n  , afterAll: function(fn){\r\n      var wrapper = function wrapper(e){\r\n            fn.call(this)\r\n            this.off('allfinished.fx', wrapper)\r\n          }\r\n\r\n      // see above\r\n      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls on every animation step for all animations\r\n  , duringAll: function(fn){\r\n      var wrapper = function(e){\r\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\r\n          }\r\n\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.afterAll(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n  , last: function(){\r\n      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\r\n    }\r\n\r\n    // adds one property to the animations\r\n  , add: function(method, args, type){\r\n      this.last()[type || 'animations'][method] = args\r\n      return this._callStart()\r\n    }\r\n\r\n    /** perform one step of the animation\r\n     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n     *  @return this\r\n     */\r\n  , step: function(ignoreTime){\r\n\r\n      // convert current time to an absolute position\r\n      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\r\n\r\n      // This part convert an absolute position to a position\r\n      if(this.situation.loops !== false) {\r\n        var absPos, absPosInt, lastLoop\r\n\r\n        // If the absolute position is below 0, we just treat it as if it was 0\r\n        absPos = Math.max(this.absPos, 0)\r\n        absPosInt = Math.floor(absPos)\r\n\r\n        if(this.situation.loops === true || absPosInt < this.situation.loops) {\r\n          this.pos = absPos - absPosInt\r\n          lastLoop = this.situation.loop\r\n          this.situation.loop = absPosInt\r\n        } else {\r\n          this.absPos = this.situation.loops\r\n          this.pos = 1\r\n          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\r\n          lastLoop = this.situation.loop - 1\r\n          this.situation.loop = this.situation.loops\r\n        }\r\n\r\n        if(this.situation.reversing) {\r\n          // Toggle reversed if an odd number of loops as occured since the last call of step\r\n          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\r\n        }\r\n\r\n      } else {\r\n        // If there are no loop, the absolute position must not be above 1\r\n        this.absPos = Math.min(this.absPos, 1)\r\n        this.pos = this.absPos\r\n      }\r\n\r\n      // while the absolute position can be below 0, the position must not be below 0\r\n      if(this.pos < 0) this.pos = 0\r\n\r\n      if(this.situation.reversed) this.pos = 1 - this.pos\r\n\r\n\r\n      // apply easing\r\n      var eased = this.situation.ease(this.pos)\r\n\r\n      // call once-callbacks\r\n      for(var i in this.situation.once){\r\n        if(i > this.lastPos && i <= eased){\r\n          this.situation.once[i].call(this.target(), this.pos, eased)\r\n          delete this.situation.once[i]\r\n        }\r\n      }\r\n\r\n      // fire during callback with position, eased position and current situation as parameter\r\n      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\r\n\r\n      // the user may call stop or finish in the during callback\r\n      // so make sure that we still have a valid situation\r\n      if(!this.situation){\r\n        return this\r\n      }\r\n\r\n      // apply the actual animation to every property\r\n      this.eachAt()\r\n\r\n      // do final code when situation is finished\r\n      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\r\n\r\n        // stop animation callback\r\n        this.stopAnimFrame()\r\n\r\n        // fire finished callback with current situation as parameter\r\n        this.target().fire('finished', {fx:this, situation: this.situation})\r\n\r\n        if(!this.situations.length){\r\n          this.target().fire('allfinished')\r\n\r\n          // Recheck the length since the user may call animate in the afterAll callback\r\n          if(!this.situations.length){\r\n            this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\r\n            this.active = false\r\n          }\r\n        }\r\n\r\n        // start next animation\r\n        if(this.active) this.dequeue()\r\n        else this.clearCurrent()\r\n\r\n      }else if(!this.paused && this.active){\r\n        // we continue animating when we are not at the end\r\n        this.startAnimFrame()\r\n      }\r\n\r\n      // save last eased position for once callback triggering\r\n      this.lastPos = eased\r\n      return this\r\n\r\n    }\r\n\r\n    // calculates the step for every property and calls block with it\r\n  , eachAt: function(){\r\n      var i, len, at, self = this, target = this.target(), s = this.situation\r\n\r\n      // apply animations which can be called trough a method\r\n      for(i in s.animations){\r\n\r\n        at = [].concat(s.animations[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target[i].apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with attr()\r\n      for(i in s.attrs){\r\n\r\n        at = [i].concat(s.attrs[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.attr.apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with style()\r\n      for(i in s.styles){\r\n\r\n        at = [i].concat(s.styles[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.style.apply(target, at)\r\n\r\n      }\r\n\r\n      // animate initialTransformation which has to be chained\r\n      if(s.transforms.length){\r\n\r\n        // get initial initialTransformation\r\n        at = s.initialTransformation\r\n        for(i = 0, len = s.transforms.length; i < len; i++){\r\n\r\n          // get next transformation in chain\r\n          var a = s.transforms[i]\r\n\r\n          // multiply matrix directly\r\n          if(a instanceof SVG.Matrix){\r\n\r\n            if(a.relative){\r\n              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\r\n            }else{\r\n              at = at.morph(a).at(s.ease(this.pos))\r\n            }\r\n            continue\r\n          }\r\n\r\n          // when transformation is absolute we have to reset the needed transformation first\r\n          if(!a.relative)\r\n            a.undo(at.extract())\r\n\r\n          // and reapply it after\r\n          at = at.multiply(a.at(s.ease(this.pos)))\r\n\r\n        }\r\n\r\n        // set new matrix on element\r\n        target.matrix(at)\r\n      }\r\n\r\n      return this\r\n\r\n    }\r\n\r\n\r\n    // adds an once-callback which is called at a specific position and never again\r\n  , once: function(pos, fn, isEased){\r\n      var c = this.last()\r\n      if(!isEased) pos = c.ease(pos)\r\n\r\n      c.once[pos] = fn\r\n\r\n      return this\r\n    }\r\n\r\n  , _callStart: function() {\r\n      setTimeout(function(){this.start()}.bind(this), 0)\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n, parent: SVG.Element\r\n\r\n  // Add method to parent elements\r\n, construct: {\r\n    // Get fx module or create a new one, then animate with given duration and ease\r\n    animate: function(o, ease, delay) {\r\n      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\r\n    }\r\n  , delay: function(delay){\r\n      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\r\n    }\r\n  , stop: function(jumpToEnd, clearQueue) {\r\n      if (this.fx)\r\n        this.fx.stop(jumpToEnd, clearQueue)\r\n\r\n      return this\r\n    }\r\n  , finish: function() {\r\n      if (this.fx)\r\n        this.fx.finish()\r\n\r\n      return this\r\n    }\r\n    // Pause current animation\r\n  , pause: function() {\r\n      if (this.fx)\r\n        this.fx.pause()\r\n\r\n      return this\r\n    }\r\n    // Play paused current animation\r\n  , play: function() {\r\n      if (this.fx)\r\n        this.fx.play()\r\n\r\n      return this\r\n    }\r\n    // Set/Get the speed of the animations\r\n  , speed: function(speed) {\r\n      if (this.fx)\r\n        if (speed == null)\r\n          return this.fx.speed()\r\n        else\r\n          this.fx.speed(speed)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\n// MorphObj is used whenever no morphable object is given\r\nSVG.MorphObj = SVG.invent({\r\n\r\n  create: function(from, to){\r\n    // prepare color for morphing\r\n    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\r\n    // check if we have a list of values\r\n    if(SVG.regex.delimiter.test(from)) {\r\n      // prepare path for morphing\r\n      if(SVG.regex.pathLetters.test(from)) return new SVG.PathArray(from).morph(to)\r\n      // prepare value list for morphing\r\n      else return new SVG.Array(from).morph(to)\r\n    }\r\n    // prepare number for morphing\r\n    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\r\n\r\n    // prepare for plain morphing\r\n    this.value = from\r\n    this.destination = to\r\n  }\r\n\r\n, extend: {\r\n    at: function(pos, real){\r\n      return real < 1 ? this.value : this.destination\r\n    },\r\n\r\n    valueOf: function(){\r\n      return this.value\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  // Add animatable attributes\r\n  attr: function(a, v, relative) {\r\n    // apply attributes individually\r\n    if (typeof a == 'object') {\r\n      for (var key in a)\r\n        this.attr(key, a[key])\r\n\r\n    } else {\r\n      this.add(a, v, 'attrs')\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable styles\r\n, style: function(s, v) {\r\n    if (typeof s == 'object')\r\n      for (var key in s)\r\n        this.style(key, s[key])\r\n\r\n    else\r\n      this.add(s, v, 'styles')\r\n\r\n    return this\r\n  }\r\n  // Animatable x-axis\r\n, x: function(x, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({x:x}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(x)\r\n    num.relative = relative\r\n    return this.add('x', num)\r\n  }\r\n  // Animatable y-axis\r\n, y: function(y, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({y:y}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(y)\r\n    num.relative = relative\r\n    return this.add('y', num)\r\n  }\r\n  // Animatable center x-axis\r\n, cx: function(x) {\r\n    return this.add('cx', new SVG.Number(x))\r\n  }\r\n  // Animatable center y-axis\r\n, cy: function(y) {\r\n    return this.add('cy', new SVG.Number(y))\r\n  }\r\n  // Add animatable move\r\n, move: function(x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n  // Add animatable center\r\n, center: function(x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n  // Add animatable size\r\n, size: function(width, height) {\r\n    if (this.target() instanceof SVG.Text) {\r\n      // animate font size for Text elements\r\n      this.attr('font-size', width)\r\n\r\n    } else {\r\n      // animate bbox based size for all other elements\r\n      var box\r\n\r\n      if(!width || !height){\r\n        box = this.target().bbox()\r\n      }\r\n\r\n      if(!width){\r\n        width = box.width / box.height  * height\r\n      }\r\n\r\n      if(!height){\r\n        height = box.height / box.width  * width\r\n      }\r\n\r\n      this.add('width' , new SVG.Number(width))\r\n          .add('height', new SVG.Number(height))\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable width\r\n, width: function(width) {\r\n    return this.add('width', new SVG.Number(width))\r\n  }\r\n  // Add animatable height\r\n, height: function(height) {\r\n    return this.add('height', new SVG.Number(height))\r\n  }\r\n  // Add animatable plot\r\n, plot: function(a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if(arguments.length == 4) {\r\n      return this.plot([a, b, c, d])\r\n    }\r\n\r\n    return this.add('plot', new (this.target().morphArray)(a))\r\n  }\r\n  // Add leading method\r\n, leading: function(value) {\r\n    return this.target().leading ?\r\n      this.add('leading', new SVG.Number(value)) :\r\n      this\r\n  }\r\n  // Add animatable viewbox\r\n, viewbox: function(x, y, width, height) {\r\n    if (this.target() instanceof SVG.Container) {\r\n      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n    return this\r\n  }\r\n, update: function(o) {\r\n    if (this.target() instanceof SVG.Stop) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        return this.update({\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        })\r\n      }\r\n\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', o.offset)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\r\n\nSVG.Box = SVG.invent({\r\n  create: function(x, y, width, height) {\r\n    if (typeof x == 'object' && !(x instanceof SVG.Element)) {\r\n      // chromes getBoundingClientRect has no x and y property\r\n      return SVG.Box.call(this, x.left != null ? x.left : x.x , x.top != null ? x.top : x.y, x.width, x.height)\r\n    } else if (arguments.length == 4) {\r\n      this.x = x\r\n      this.y = y\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n\r\n    // add center, right, bottom...\r\n    fullBox(this)\r\n  }\r\n, extend: {\r\n    // Merge rect box with another, return a new instance\r\n    merge: function(box) {\r\n      var b = new this.constructor()\r\n\r\n      // merge boxes\r\n      b.x      = Math.min(this.x, box.x)\r\n      b.y      = Math.min(this.y, box.y)\r\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\r\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\r\n\r\n      return fullBox(b)\r\n    }\r\n\r\n  , transform: function(m) {\r\n      var xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, p, bbox\r\n\r\n      var pts = [\r\n        new SVG.Point(this.x, this.y),\r\n        new SVG.Point(this.x2, this.y),\r\n        new SVG.Point(this.x, this.y2),\r\n        new SVG.Point(this.x2, this.y2)\r\n      ]\r\n\r\n      pts.forEach(function(p) {\r\n        p = p.transform(m)\r\n        xMin = Math.min(xMin,p.x)\r\n        xMax = Math.max(xMax,p.x)\r\n        yMin = Math.min(yMin,p.y)\r\n        yMax = Math.max(yMax,p.y)\r\n      })\r\n\r\n      bbox = new this.constructor()\r\n      bbox.x = xMin\r\n      bbox.width = xMax-xMin\r\n      bbox.y = yMin\r\n      bbox.height = yMax-yMin\r\n\r\n      fullBox(bbox)\r\n\r\n      return bbox\r\n    }\r\n  }\r\n})\r\n\r\nSVG.BBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    // get values if element is given\r\n    if (element instanceof SVG.Element) {\r\n      var box\r\n\r\n      // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\r\n      try {\r\n\r\n        if (!document.documentElement.contains){\r\n          // This is IE - it does not support contains() for top-level SVGs\r\n          var topParent = element.node\r\n          while (topParent.parentNode){\r\n            topParent = topParent.parentNode\r\n          }\r\n          if (topParent != document) throw new Exception('Element not in the dom')\r\n        } else {\r\n          // the element is NOT in the dom, throw error\r\n          if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\r\n        }\r\n\r\n        // find native bbox\r\n        box = element.node.getBBox()\r\n      } catch(e) {\r\n        if(element instanceof SVG.Shape){\r\n          var clone = element.clone(SVG.parser.draw.instance).show()\r\n          box = clone.node.getBBox()\r\n          clone.remove()\r\n        }else{\r\n          box = {\r\n            x:      element.node.clientLeft\r\n          , y:      element.node.clientTop\r\n          , width:  element.node.clientWidth\r\n          , height: element.node.clientHeight\r\n          }\r\n        }\r\n      }\r\n\r\n      SVG.Box.call(this, box)\r\n    }\r\n\r\n  }\r\n\r\n  // Define ancestor\r\n, inherit: SVG.Box\r\n\r\n  // Define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get bounding box\r\n    bbox: function() {\r\n      return new SVG.BBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.BBox.prototype.constructor = SVG.BBox\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  tbox: function(){\r\n    console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.')\r\n    return this.rbox(this.doc())\r\n  }\r\n})\r\n\r\nSVG.RBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    if (element instanceof SVG.Element) {\r\n      SVG.Box.call(this, element.node.getBoundingClientRect())\r\n    }\r\n  }\r\n\r\n, inherit: SVG.Box\r\n\r\n  // define Parent\r\n, parent: SVG.Element\r\n\r\n, extend: {\r\n    addOffset: function() {\r\n      // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n      this.x += window.pageXOffset\r\n      this.y += window.pageYOffset\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get rect box\r\n    rbox: function(el) {\r\n      if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse())\r\n      return new SVG.RBox(this).addOffset()\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.RBox.prototype.constructor = SVG.RBox\r\n\nSVG.Matrix = SVG.invent({\r\n  // Initialize\r\n  create: function(source) {\r\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\r\n\r\n    // ensure source as object\r\n    source = source instanceof SVG.Element ?\r\n      source.matrixify() :\r\n    typeof source === 'string' ?\r\n      arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) :\r\n    arguments.length == 6 ?\r\n      arrayToMatrix([].slice.call(arguments)) :\r\n    Array.isArray(source) ?\r\n      arrayToMatrix(source) :\r\n    typeof source === 'object' ?\r\n      source : base\r\n\r\n    // merge source\r\n    for (i = abcdef.length - 1; i >= 0; --i)\r\n      this[abcdef[i]] = source[abcdef[i]] != null ?\r\n        source[abcdef[i]] : base[abcdef[i]]\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Extract individual transformations\r\n    extract: function() {\r\n      // find delta transform points\r\n      var px    = deltaTransformPoint(this, 0, 1)\r\n        , py    = deltaTransformPoint(this, 1, 0)\r\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\r\n\r\n      return {\r\n        // translation\r\n        x:        this.e\r\n      , y:        this.f\r\n      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // skew\r\n      , skewX:    -skewX\r\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\r\n        // scale\r\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // rotation\r\n      , rotation: skewX\r\n      , a: this.a\r\n      , b: this.b\r\n      , c: this.c\r\n      , d: this.d\r\n      , e: this.e\r\n      , f: this.f\r\n      , matrix: new SVG.Matrix(this)\r\n      }\r\n    }\r\n    // Clone matrix\r\n  , clone: function() {\r\n      return new SVG.Matrix(this)\r\n    }\r\n    // Morph one matrix into another\r\n  , morph: function(matrix) {\r\n      // store new destination\r\n      this.destination = new SVG.Matrix(matrix)\r\n\r\n      return this\r\n    }\r\n    // Get morphed matrix at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var matrix = new SVG.Matrix({\r\n        a: this.a + (this.destination.a - this.a) * pos\r\n      , b: this.b + (this.destination.b - this.b) * pos\r\n      , c: this.c + (this.destination.c - this.c) * pos\r\n      , d: this.d + (this.destination.d - this.d) * pos\r\n      , e: this.e + (this.destination.e - this.e) * pos\r\n      , f: this.f + (this.destination.f - this.f) * pos\r\n      })\r\n\r\n      return matrix\r\n    }\r\n    // Multiplies by given matrix\r\n  , multiply: function(matrix) {\r\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\r\n    }\r\n    // Inverses matrix\r\n  , inverse: function() {\r\n      return new SVG.Matrix(this.native().inverse())\r\n    }\r\n    // Translate matrix\r\n  , translate: function(x, y) {\r\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\r\n    }\r\n    // Scale matrix\r\n  , scale: function(x, y, cx, cy) {\r\n      // support uniformal scale\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\r\n    }\r\n    // Rotate matrix\r\n  , rotate: function(r, cx, cy) {\r\n      // convert degrees to radians\r\n      r = SVG.utils.radians(r)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\r\n    }\r\n    // Flip matrix on x or y, at a given offset\r\n  , flip: function(a, o) {\r\n      return a == 'x' ?\r\n          this.scale(-1, 1, o, 0) :\r\n        a == 'y' ?\r\n          this.scale(1, -1, 0, o) :\r\n          this.scale(-1, -1, a, o != null ? o : a)\r\n    }\r\n    // Skew\r\n  , skew: function(x, y, cx, cy) {\r\n      // support uniformal skew\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      // convert degrees to radians\r\n      x = SVG.utils.radians(x)\r\n      y = SVG.utils.radians(y)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\r\n    }\r\n    // SkewX\r\n  , skewX: function(x, cx, cy) {\r\n      return this.skew(x, 0, cx, cy)\r\n    }\r\n    // SkewY\r\n  , skewY: function(y, cx, cy) {\r\n      return this.skew(0, y, cx, cy)\r\n    }\r\n    // Transform around a center point\r\n  , around: function(cx, cy, matrix) {\r\n      return this\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\r\n        .multiply(matrix)\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\r\n    }\r\n    // Convert to native SVGMatrix\r\n  , native: function() {\r\n      // create new matrix\r\n      var matrix = SVG.parser.native.createSVGMatrix()\r\n\r\n      // update with current values\r\n      for (var i = abcdef.length - 1; i >= 0; i--)\r\n        matrix[abcdef[i]] = this[abcdef[i]]\r\n\r\n      return matrix\r\n    }\r\n    // Convert matrix to string\r\n  , toString: function() {\r\n      // Construct the matrix directly, avoid values that are too small\r\n      return 'matrix(' + float32String(this.a) + ',' + float32String(this.b)\r\n        + ',' + float32String(this.c) + ',' + float32String(this.d)\r\n        + ',' + float32String(this.e) + ',' + float32String(this.f)\r\n        + ')'\r\n    }\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Element\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Get current matrix\r\n    ctm: function() {\r\n      return new SVG.Matrix(this.node.getCTM())\r\n    },\r\n    // Get current screen matrix\r\n    screenCTM: function() {\r\n      /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n         This is needed because FF does not return the transformation matrix\r\n         for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n         However all other Browsers do that */\r\n      if(this instanceof SVG.Nested) {\r\n        var rect = this.rect(1,1)\r\n        var m = rect.node.getScreenCTM()\r\n        rect.remove()\r\n        return new SVG.Matrix(m)\r\n      }\r\n      return new SVG.Matrix(this.node.getScreenCTM())\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\nSVG.Point = SVG.invent({\r\n  // Initialize\r\n  create: function(x,y) {\r\n    var i, source, base = {x:0, y:0}\r\n\r\n    // ensure source as object\r\n    source = Array.isArray(x) ?\r\n      {x:x[0], y:x[1]} :\r\n    typeof x === 'object' ?\r\n      {x:x.x, y:x.y} :\r\n    x != null ?\r\n      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\r\n\r\n    // merge source\r\n    this.x = source.x\r\n    this.y = source.y\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Clone point\r\n    clone: function() {\r\n      return new SVG.Point(this)\r\n    }\r\n    // Morph one point into another\r\n  , morph: function(x, y) {\r\n      // store new destination\r\n      this.destination = new SVG.Point(x, y)\r\n\r\n      return this\r\n    }\r\n    // Get morphed point at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var point = new SVG.Point({\r\n        x: this.x + (this.destination.x - this.x) * pos\r\n      , y: this.y + (this.destination.y - this.y) * pos\r\n      })\r\n\r\n      return point\r\n    }\r\n    // Convert to native SVGPoint\r\n  , native: function() {\r\n      // create new point\r\n      var point = SVG.parser.native.createSVGPoint()\r\n\r\n      // update with current values\r\n      point.x = this.x\r\n      point.y = this.y\r\n\r\n      return point\r\n    }\r\n    // transform point with matrix\r\n  , transform: function(matrix) {\r\n      return new SVG.Point(this.native().matrixTransform(matrix.native()))\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n\r\n  // Get point\r\n  point: function(x, y) {\r\n    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Set svg element attribute\r\n  attr: function(a, v, n) {\r\n    // act as full getter\r\n    if (a == null) {\r\n      // get an object of attributes\r\n      a = {}\r\n      v = this.node.attributes\r\n      for (n = v.length - 1; n >= 0; n--)\r\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\r\n\r\n      return a\r\n\r\n    } else if (typeof a == 'object') {\r\n      // apply every attribute individually if an object is passed\r\n      for (v in a) this.attr(v, a[v])\r\n\r\n    } else if (v === null) {\r\n        // remove value\r\n        this.node.removeAttribute(a)\r\n\r\n    } else if (v == null) {\r\n      // act as a getter if the first and only argument is not an object\r\n      v = this.node.getAttribute(a)\r\n      return v == null ?\r\n        SVG.defaults.attrs[a] :\r\n      SVG.regex.isNumber.test(v) ?\r\n        parseFloat(v) : v\r\n\r\n    } else {\r\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\r\n      if (a == 'stroke-width')\r\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\r\n      else if (a == 'stroke')\r\n        this._stroke = v\r\n\r\n      // convert image fill and stroke to patterns\r\n      if (a == 'fill' || a == 'stroke') {\r\n        if (SVG.regex.isImage.test(v))\r\n          v = this.doc().defs().image(v, 0, 0)\r\n\r\n        if (v instanceof SVG.Image)\r\n          v = this.doc().defs().pattern(0, 0, function() {\r\n            this.add(v)\r\n          })\r\n      }\r\n\r\n      // ensure correct numeric values (also accepts NaN and Infinity)\r\n      if (typeof v === 'number')\r\n        v = new SVG.Number(v)\r\n\r\n      // ensure full hex color\r\n      else if (SVG.Color.isColor(v))\r\n        v = new SVG.Color(v)\r\n\r\n      // parse array values\r\n      else if (Array.isArray(v))\r\n        v = new SVG.Array(v)\r\n\r\n      // if the passed attribute is leading...\r\n      if (a == 'leading') {\r\n        // ... call the leading method instead\r\n        if (this.leading)\r\n          this.leading(v)\r\n      } else {\r\n        // set given attribute on node\r\n        typeof n === 'string' ?\r\n          this.node.setAttributeNS(n, a, v.toString()) :\r\n          this.node.setAttribute(a, v.toString())\r\n      }\r\n\r\n      // rebuild if required\r\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\r\n        this.rebuild(a, v)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Add transformations\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // get current matrix\r\n    matrix = new SVG.Matrix(target)\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.multiply(new SVG.Matrix(o)) :\r\n        // absolute\r\n        new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.rotate(o.rotation, o.cx, o.cy) :\r\n        // absolute\r\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      if (!relative) {\r\n        // absolute; multiply inversed values\r\n        var e = matrix.extract()\r\n        o.scaleX = o.scaleX * 1 / e.scaleX\r\n        o.scaleY = o.scaleY * 1 / e.scaleY\r\n      }\r\n\r\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\r\n\r\n      if (!relative) {\r\n        // absolute; reset skew values\r\n        var e = matrix.extract()\r\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\r\n      }\r\n\r\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      if (relative) {\r\n        // relative\r\n        matrix = matrix.translate(o.x, o.y)\r\n      } else {\r\n        // absolute\r\n        if (o.x != null) matrix.e = o.x\r\n        if (o.y != null) matrix.f = o.y\r\n      }\r\n    }\r\n\r\n    return this.attr('transform', matrix)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this.target()\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skewY != null ? o.skewY : 0\r\n\r\n      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      matrix = new SVG.Translate(o.x, o.y)\r\n    }\r\n\r\n    if(!matrix) return this\r\n\r\n    matrix.relative = relative\r\n\r\n    this.last().transforms.push(matrix)\r\n\r\n    return this._callStart()\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Reset all transformations\r\n  untransform: function() {\r\n    return this.attr('transform', null)\r\n  },\r\n  // merge the whole transformation chain into one matrix and returns it\r\n  matrixify: function() {\r\n\r\n    var matrix = (this.attr('transform') || '')\r\n      // split transformations\r\n      .split(SVG.regex.transforms).slice(0,-1).map(function(str){\r\n        // generate key => value pairs\r\n        var kv = str.trim().split('(')\r\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function(str){ return parseFloat(str) })]\r\n      })\r\n      // merge every transformation into one matrix\r\n      .reduce(function(matrix, transform){\r\n\r\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\r\n        return matrix[transform[0]].apply(matrix, transform[1])\r\n\r\n      }, new SVG.Matrix())\r\n\r\n    return matrix\r\n  },\r\n  // add an element to another parent without changing the visual representation on the screen\r\n  toParent: function(parent) {\r\n    if(this == parent) return this\r\n    var ctm = this.screenCTM()\r\n    var pCtm = parent.screenCTM().inverse()\r\n\r\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n    return this\r\n  },\r\n  // same as above with parent equals root-svg\r\n  toDoc: function() {\r\n    return this.toParent(this.doc())\r\n  }\r\n\r\n})\r\n\r\nSVG.Transformation = SVG.invent({\r\n\r\n  create: function(source, inversed){\r\n\r\n    if(arguments.length > 1 && typeof inversed != 'boolean'){\r\n      return this.constructor.call(this, [].slice.call(arguments))\r\n    }\r\n\r\n    if(Array.isArray(source)){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[i]\r\n      }\r\n    } else if(typeof source == 'object'){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[this.arguments[i]]\r\n      }\r\n    }\r\n\r\n    this.inversed = false\r\n\r\n    if(inversed === true){\r\n      this.inversed = true\r\n    }\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    arguments: []\r\n  , method: ''\r\n\r\n  , at: function(pos){\r\n\r\n      var params = []\r\n\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        params.push(this[this.arguments[i]])\r\n      }\r\n\r\n      var m = this._undo || new SVG.Matrix()\r\n\r\n      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\r\n\r\n      return this.inversed ? m.inverse() : m\r\n\r\n    }\r\n\r\n  , undo: function(o){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\r\n      }\r\n\r\n      // The method SVG.Matrix.extract which was used before calling this\r\n      // method to obtain a value for the parameter o doesn't return a cx and\r\n      // a cy so we use the ones that were provided to this object at its creation\r\n      o.cx = this.cx\r\n      o.cy = this.cy\r\n\r\n      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\r\n\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.Translate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['transformedX', 'transformedY']\r\n  , method: 'translate'\r\n  }\r\n\r\n})\r\n\r\nSVG.Rotate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['rotation', 'cx', 'cy']\r\n  , method: 'rotate'\r\n  , at: function(pos){\r\n      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\r\n      return this.inversed ? m.inverse() : m\r\n    }\r\n  , undo: function(o){\r\n      this._undo = o\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Scale = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\r\n  , method: 'scale'\r\n  }\r\n\r\n})\r\n\r\nSVG.Skew = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['skewX', 'skewY', 'cx', 'cy']\r\n  , method: 'skew'\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Dynamic style generator\r\n  style: function(s, v) {\r\n    if (arguments.length == 0) {\r\n      // get full style\r\n      return this.node.style.cssText || ''\r\n\r\n    } else if (arguments.length < 2) {\r\n      // apply every style individually if an object is passed\r\n      if (typeof s == 'object') {\r\n        for (v in s) this.style(v, s[v])\r\n\r\n      } else if (SVG.regex.isCss.test(s)) {\r\n        // parse css string\r\n        s = s.split(/\\s*;\\s*/)\r\n          // filter out suffix ; and stuff like ;;\r\n          .filter(function(e) { return !!e })\r\n          .map(function(e){ return e.split(/\\s*:\\s*/) })\r\n\r\n        // apply every definition individually\r\n        while (v = s.pop()) {\r\n          this.style(v[0], v[1])\r\n        }\r\n      } else {\r\n        // act as a getter if the first and only argument is not an object\r\n        return this.node.style[camelCase(s)]\r\n      }\r\n\r\n    } else {\r\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.Parent = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Returns all child elements\r\n    children: function() {\r\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\r\n        return SVG.adopt(node)\r\n      })\r\n    }\r\n    // Add given element at a position\r\n  , add: function(element, i) {\r\n      if (i == null)\r\n        this.node.appendChild(element.node)\r\n      else if (element.node != this.node.childNodes[i])\r\n        this.node.insertBefore(element.node, this.node.childNodes[i])\r\n\r\n      return this\r\n    }\r\n    // Basically does the same as `add()` but returns the added element instead\r\n  , put: function(element, i) {\r\n      this.add(element, i)\r\n      return element\r\n    }\r\n    // Checks if the given element is a child\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // Gets index of given element\r\n  , index: function(element) {\r\n      return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n    }\r\n    // Get a element at the given index\r\n  , get: function(i) {\r\n      return SVG.adopt(this.node.childNodes[i])\r\n    }\r\n    // Get first child\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get the last child\r\n  , last: function() {\r\n      return this.get(this.node.childNodes.length - 1)\r\n    }\r\n    // Iterates over all children and invokes a given block\r\n  , each: function(block, deep) {\r\n      var i, il\r\n        , children = this.children()\r\n\r\n      for (i = 0, il = children.length; i < il; i++) {\r\n        if (children[i] instanceof SVG.Element)\r\n          block.apply(children[i], [i, children])\r\n\r\n        if (deep && (children[i] instanceof SVG.Container))\r\n          children[i].each(block, deep)\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove a given child\r\n  , removeElement: function(element) {\r\n      this.node.removeChild(element.node)\r\n\r\n      return this\r\n    }\r\n    // Remove all elements in this container\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      return this\r\n    }\r\n  , // Get defs\r\n    defs: function() {\r\n      return this.doc().defs()\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Parent, {\r\n\r\n  ungroup: function(parent, depth) {\r\n    if(depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this\r\n\r\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\r\n    depth = depth || Infinity\r\n\r\n    this.each(function(){\r\n      if(this instanceof SVG.Defs) return this\r\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.node.firstChild || this.remove()\r\n\r\n    return this\r\n  },\r\n\r\n  flatten: function(parent, depth) {\r\n    return this.ungroup(parent, depth)\r\n  }\r\n\r\n})\nSVG.Container = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n})\n\r\nSVG.ViewBox = SVG.invent({\r\n\r\n  create: function(source) {\r\n    var i, base = [0, 0, 0, 0]\r\n\r\n    var x, y, width, height, box, view, we, he\r\n      , wm   = 1 // width multiplier\r\n      , hm   = 1 // height multiplier\r\n      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\r\n\r\n    if(source instanceof SVG.Element){\r\n\r\n      we = source\r\n      he = source\r\n      view = (source.attr('viewBox') || '').match(reg)\r\n      box = source.bbox\r\n\r\n      // get dimensions of current node\r\n      width  = new SVG.Number(source.width())\r\n      height = new SVG.Number(source.height())\r\n\r\n      // find nearest non-percentual dimensions\r\n      while (width.unit == '%') {\r\n        wm *= width.value\r\n        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\r\n        we = we.parent()\r\n      }\r\n      while (height.unit == '%') {\r\n        hm *= height.value\r\n        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\r\n        he = he.parent()\r\n      }\r\n\r\n      // ensure defaults\r\n      this.x      = 0\r\n      this.y      = 0\r\n      this.width  = width  * wm\r\n      this.height = height * hm\r\n      this.zoom   = 1\r\n\r\n      if (view) {\r\n        // get width and height from viewbox\r\n        x      = parseFloat(view[0])\r\n        y      = parseFloat(view[1])\r\n        width  = parseFloat(view[2])\r\n        height = parseFloat(view[3])\r\n\r\n        // calculate zoom accoring to viewbox\r\n        this.zoom = ((this.width / this.height) > (width / height)) ?\r\n          this.height / height :\r\n          this.width  / width\r\n\r\n        // calculate real pixel dimensions on parent SVG.Doc element\r\n        this.x      = x\r\n        this.y      = y\r\n        this.width  = width\r\n        this.height = height\r\n\r\n      }\r\n\r\n    }else{\r\n\r\n      // ensure source as object\r\n      source = typeof source === 'string' ?\r\n        source.match(reg).map(function(el){ return parseFloat(el) }) :\r\n      Array.isArray(source) ?\r\n        source :\r\n      typeof source == 'object' ?\r\n        [source.x, source.y, source.width, source.height] :\r\n      arguments.length == 4 ?\r\n        [].slice.call(arguments) :\r\n        base\r\n\r\n      this.x = source[0]\r\n      this.y = source[1]\r\n      this.width = source[2]\r\n      this.height = source[3]\r\n    }\r\n\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    toString: function() {\r\n      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n    }\r\n  , morph: function(x, y, width, height){\r\n      this.destination = new SVG.ViewBox(x, y, width, height)\r\n      return this\r\n    }\r\n\r\n  , at: function(pos) {\r\n\r\n      if(!this.destination) return this\r\n\r\n      return new SVG.ViewBox([\r\n          this.x + (this.destination.x - this.x) * pos\r\n        , this.y + (this.destination.y - this.y) * pos\r\n        , this.width + (this.destination.width - this.width) * pos\r\n        , this.height + (this.destination.height - this.height) * pos\r\n      ])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n\r\n    // get/set viewbox\r\n    viewbox: function(x, y, width, height) {\r\n      if (arguments.length == 0)\r\n        // act as a getter if there are no arguments\r\n        return new SVG.ViewBox(this)\r\n\r\n      // otherwise act as a setter\r\n      return this.attr('viewBox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n  }\r\n\r\n})\n// Add events to elements\r\n;[  'click'\r\n  , 'dblclick'\r\n  , 'mousedown'\r\n  , 'mouseup'\r\n  , 'mouseover'\r\n  , 'mouseout'\r\n  , 'mousemove'\r\n  // , 'mouseenter' -> not supported by IE\r\n  // , 'mouseleave' -> not supported by IE\r\n  , 'touchstart'\r\n  , 'touchmove'\r\n  , 'touchleave'\r\n  , 'touchend'\r\n  , 'touchcancel' ].forEach(function(event) {\r\n\r\n  // add event to SVG.Element\r\n  SVG.Element.prototype[event] = function(f) {\r\n    // bind event to element rather than element node\r\n    SVG.on(this.node, event, f)\r\n    return this\r\n  }\r\n})\r\n\r\n// Initialize listeners stack\r\nSVG.listeners = []\r\nSVG.handlerMap = []\r\nSVG.listenerId = 0\r\n\r\n// Add event binder in the SVG namespace\r\nSVG.on = function(node, event, listener, binding, options) {\r\n  // create listener, get object-index\r\n  var l     = listener.bind(binding || node.instance || node)\r\n    , index = (SVG.handlerMap.indexOf(node) + 1 || SVG.handlerMap.push(node)) - 1\r\n    , ev    = event.split('.')[0]\r\n    , ns    = event.split('.')[1] || '*'\r\n\r\n\r\n  // ensure valid object\r\n  SVG.listeners[index]         = SVG.listeners[index]         || {}\r\n  SVG.listeners[index][ev]     = SVG.listeners[index][ev]     || {}\r\n  SVG.listeners[index][ev][ns] = SVG.listeners[index][ev][ns] || {}\r\n\r\n  if(!listener._svgjsListenerId)\r\n    listener._svgjsListenerId = ++SVG.listenerId\r\n\r\n  // reference listener\r\n  SVG.listeners[index][ev][ns][listener._svgjsListenerId] = l\r\n\r\n  // add listener\r\n  node.addEventListener(ev, l, options || false)\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nSVG.off = function(node, event, listener) {\r\n  var index = SVG.handlerMap.indexOf(node)\r\n    , ev    = event && event.split('.')[0]\r\n    , ns    = event && event.split('.')[1]\r\n    , namespace = ''\r\n\r\n  if(index == -1) return\r\n\r\n  if (listener) {\r\n    if(typeof listener == 'function') listener = listener._svgjsListenerId\r\n    if(!listener) return\r\n\r\n    // remove listener reference\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns || '*']) {\r\n      // remove listener\r\n      node.removeEventListener(ev, SVG.listeners[index][ev][ns || '*'][listener], false)\r\n\r\n      delete SVG.listeners[index][ev][ns || '*'][listener]\r\n    }\r\n\r\n  } else if (ns && ev) {\r\n    // remove all listeners for a namespaced event\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns]) {\r\n      for (listener in SVG.listeners[index][ev][ns])\r\n        SVG.off(node, [ev, ns].join('.'), listener)\r\n\r\n      delete SVG.listeners[index][ev][ns]\r\n    }\r\n\r\n  } else if (ns){\r\n    // remove all listeners for a specific namespace\r\n    for(event in SVG.listeners[index]){\r\n        for(namespace in SVG.listeners[index][event]){\r\n            if(ns === namespace){\r\n                SVG.off(node, [event, ns].join('.'))\r\n            }\r\n        }\r\n    }\r\n\r\n  } else if (ev) {\r\n    // remove all listeners for the event\r\n    if (SVG.listeners[index][ev]) {\r\n      for (namespace in SVG.listeners[index][ev])\r\n        SVG.off(node, [ev, namespace].join('.'))\r\n\r\n      delete SVG.listeners[index][ev]\r\n    }\r\n\r\n  } else {\r\n    // remove all listeners on a given node\r\n    for (event in SVG.listeners[index])\r\n      SVG.off(node, event)\r\n\r\n    delete SVG.listeners[index]\r\n    delete SVG.handlerMap[index]\r\n\r\n  }\r\n}\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Bind given event to listener\r\n  on: function(event, listener, binding, options) {\r\n    SVG.on(this.node, event, listener, binding, options)\r\n\r\n    return this\r\n  }\r\n  // Unbind event from listener\r\n, off: function(event, listener) {\r\n    SVG.off(this.node, event, listener)\r\n\r\n    return this\r\n  }\r\n  // Fire given event\r\n, fire: function(event, data) {\r\n\r\n    // Dispatch event\r\n    if(event instanceof window.Event){\r\n        this.node.dispatchEvent(event)\r\n    }else{\r\n        this.node.dispatchEvent(event = new SVG.CustomEvent(event, {detail:data, cancelable: true}))\r\n    }\r\n\r\n    this._event = event\r\n    return this\r\n  }\r\n, event: function() {\r\n    return this._event\r\n  }\r\n})\r\n\n\r\nSVG.Defs = SVG.invent({\r\n  // Initialize node\r\n  create: 'defs'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n})\nSVG.G = SVG.invent({\r\n  // Initialize node\r\n  create: 'g'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\r\n    }\r\n  , gbox: function() {\r\n\r\n      var bbox  = this.bbox()\r\n        , trans = this.transform()\r\n\r\n      bbox.x  += trans.x\r\n      bbox.x2 += trans.x\r\n      bbox.cx += trans.x\r\n\r\n      bbox.y  += trans.y\r\n      bbox.y2 += trans.y\r\n      bbox.cy += trans.y\r\n\r\n      return bbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a group element\r\n    group: function() {\r\n      return this.put(new SVG.G)\r\n    }\r\n  }\r\n})\r\n\nSVG.Doc = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    if (element) {\r\n      // ensure the presence of a dom element\r\n      element = typeof element == 'string' ?\r\n        document.getElementById(element) :\r\n        element\r\n\r\n      // If the target is an svg element, use that element as the main wrapper.\r\n      // This allows svg.js to work with svg documents as well.\r\n      if (element.nodeName == 'svg') {\r\n        this.constructor.call(this, element)\r\n      } else {\r\n        this.constructor.call(this, SVG.create('svg'))\r\n        element.appendChild(this.node)\r\n        this.size('100%', '100%')\r\n      }\r\n\r\n      // set svg element attributes and ensure defs node\r\n      this.namespace().defs()\r\n    }\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add namespaces\r\n    namespace: function() {\r\n      return this\r\n        .attr({ xmlns: SVG.ns, version: '1.1' })\r\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\r\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\r\n    }\r\n    // Creates and returns defs element\r\n  , defs: function() {\r\n      if (!this._defs) {\r\n        var defs\r\n\r\n        // Find or create a defs element in this instance\r\n        if (defs = this.node.getElementsByTagName('defs')[0])\r\n          this._defs = SVG.adopt(defs)\r\n        else\r\n          this._defs = new SVG.Defs\r\n\r\n        // Make sure the defs node is at the end of the stack\r\n        this.node.appendChild(this._defs.node)\r\n      }\r\n\r\n      return this._defs\r\n    }\r\n    // custom parent method\r\n  , parent: function() {\r\n      if(!this.node.parentNode || this.node.parentNode.nodeName == '#document') return null\r\n      return this.node.parentNode\r\n    }\r\n    // Fix for possible sub-pixel offset. See:\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\r\n  , spof: function() {\r\n      var pos = this.node.getScreenCTM()\r\n\r\n      if (pos)\r\n        this\r\n          .style('left', (-pos.e % 1) + 'px')\r\n          .style('top',  (-pos.f % 1) + 'px')\r\n\r\n      return this\r\n    }\r\n\r\n      // Removes the doc from the DOM\r\n  , remove: function() {\r\n      if(this.parent()) {\r\n        this.parent().removeChild(this.node)\r\n      }\r\n\r\n      return this\r\n    }\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      // add back parser\r\n      if(!SVG.parser.draw.parentNode)\r\n        this.node.appendChild(SVG.parser.draw)\r\n\r\n      return this\r\n    }\r\n  , clone: function (parent) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // get reference to node\r\n      var node = this.node\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) {\r\n        (parent.node || parent).appendChild(clone.node)\r\n      } else {\r\n        node.parentNode.insertBefore(clone.node, node.nextSibling)\r\n      }\r\n\r\n      return clone\r\n    }\r\n  }\r\n\r\n})\r\n\n// ### This module adds backward / forward functionality to elements.\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Get all siblings, including myself\r\n  siblings: function() {\r\n    return this.parent().children()\r\n  }\r\n  // Get the curent position siblings\r\n, position: function() {\r\n    return this.parent().index(this)\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, next: function() {\r\n    return this.siblings()[this.position() + 1]\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, previous: function() {\r\n    return this.siblings()[this.position() - 1]\r\n  }\r\n  // Send given element one step forward\r\n, forward: function() {\r\n    var i = this.position() + 1\r\n      , p = this.parent()\r\n\r\n    // move node one step forward\r\n    p.removeElement(this).add(this, i)\r\n\r\n    // make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element one step backward\r\n, backward: function() {\r\n    var i = this.position()\r\n\r\n    if (i > 0)\r\n      this.parent().removeElement(this).add(this, i - 1)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the front\r\n, front: function() {\r\n    var p = this.parent()\r\n\r\n    // Move node forward\r\n    p.node.appendChild(this.node)\r\n\r\n    // Make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the back\r\n, back: function() {\r\n    if (this.position() > 0)\r\n      this.parent().removeElement(this).add(this, 0)\r\n\r\n    return this\r\n  }\r\n  // Inserts a given element before the targeted element\r\n, before: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i)\r\n\r\n    return this\r\n  }\r\n  // Insters a given element after the targeted element\r\n, after: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i + 1)\r\n\r\n    return this\r\n  }\r\n\r\n})\nSVG.Mask = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('mask'))\r\n\r\n    // keep references to masked elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unmask all masked elements and remove itself\r\n    remove: function() {\r\n      // unmask all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unmask()\r\n      this.targets = []\r\n\r\n      // remove mask from parent\r\n      SVG.Element.prototype.remove.call(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create masking element\r\n    mask: function() {\r\n      return this.defs().put(new SVG.Mask)\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Distribute mask to svg element\r\n  maskWith: function(element) {\r\n    // use given mask or create a new one\r\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.masker.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\r\n  }\r\n  // Unmask element\r\n, unmask: function() {\r\n    delete this.masker\r\n    return this.attr('mask', null)\r\n  }\r\n\r\n})\r\n\nSVG.ClipPath = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('clipPath'))\r\n\r\n    // keep references to clipped elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unclip all clipped elements and remove itself\r\n    remove: function() {\r\n      // unclip all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unclip()\r\n      this.targets = []\r\n\r\n      // remove clipPath from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create clipping element\r\n    clip: function() {\r\n      return this.defs().put(new SVG.ClipPath)\r\n    }\r\n  }\r\n})\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Distribute clipPath to svg element\r\n  clipWith: function(element) {\r\n    // use given clip or create a new one\r\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.clipper.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\r\n  }\r\n  // Unclip element\r\n, unclip: function() {\r\n    delete this.clipper\r\n    return this.attr('clip-path', null)\r\n  }\r\n\r\n})\nSVG.Gradient = SVG.invent({\r\n  // Initialize node\r\n  create: function(type) {\r\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\r\n\r\n    // store type\r\n    this.type = type\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add a color stop\r\n    at: function(offset, color, opacity) {\r\n      return this.put(new SVG.Stop).update(offset, color, opacity)\r\n    }\r\n    // Update gradient\r\n  , update: function(block) {\r\n      // remove all stops\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'gradientTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create gradient element in defs\r\n    gradient: function(type, block) {\r\n      return this.defs().gradient(type, block)\r\n    }\r\n  }\r\n})\r\n\r\n// Add animatable methods to both gradient and fx module\r\nSVG.extend(SVG.Gradient, SVG.FX, {\r\n  // From position\r\n  from: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\r\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\r\n  }\r\n  // To position\r\n, to: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\r\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\r\n  }\r\n})\r\n\r\n// Base gradient generation\r\nSVG.extend(SVG.Defs, {\r\n  // define gradient\r\n  gradient: function(type, block) {\r\n    return this.put(new SVG.Gradient(type)).update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.Stop = SVG.invent({\r\n  // Initialize node\r\n  create: 'stop'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // add color stops\r\n    update: function(o) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        o = {\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        }\r\n      }\r\n\r\n      // set attributes\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Pattern = SVG.invent({\r\n  // Initialize node\r\n  create: 'pattern'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Return the fill id\r\n    fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Update pattern by rebuilding\r\n  , update: function(block) {\r\n      // remove content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'patternTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create pattern element in defs\r\n    pattern: function(width, height, block) {\r\n      return this.defs().pattern(width, height, block)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Define gradient\r\n  pattern: function(width, height, block) {\r\n    return this.put(new SVG.Pattern).update(block).attr({\r\n      x:            0\r\n    , y:            0\r\n    , width:        width\r\n    , height:       height\r\n    , patternUnits: 'userSpaceOnUse'\r\n    })\r\n  }\r\n\r\n})\nSVG.Shape = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n})\n\r\nSVG.Bare = SVG.invent({\r\n  // Initialize\r\n  create: function(element, inherit) {\r\n    // construct element\r\n    this.constructor.call(this, SVG.create(element))\r\n\r\n    // inherit custom methods\r\n    if (inherit)\r\n      for (var method in inherit.prototype)\r\n        if (typeof inherit.prototype[method] === 'function')\r\n          this[method] = inherit.prototype[method]\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Insert some plain text\r\n    words: function(text) {\r\n      // remove contents\r\n      while (this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // create text node\r\n      this.node.appendChild(document.createTextNode(text))\r\n\r\n      return this\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Create an element that is not described by SVG.js\r\n  element: function(element, inherit) {\r\n    return this.put(new SVG.Bare(element, inherit))\r\n  }\r\n})\r\n\nSVG.Symbol = SVG.invent({\r\n  // Initialize node\r\n  create: 'symbol'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n, construct: {\r\n    // create symbol\r\n    symbol: function() {\r\n      return this.put(new SVG.Symbol)\r\n    }\r\n  }\r\n})\r\n\nSVG.Use = SVG.invent({\r\n  // Initialize node\r\n  create: 'use'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Use element as a reference\r\n    element: function(element, file) {\r\n      // Set lined element\r\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a use element\r\n    use: function(element, file) {\r\n      return this.put(new SVG.Use).element(element, file)\r\n    }\r\n  }\r\n})\nSVG.Rect = SVG.invent({\r\n  // Initialize node\r\n  create: 'rect'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a rect element\r\n    rect: function(width, height) {\r\n      return this.put(new SVG.Rect()).size(width, height)\r\n    }\r\n  }\r\n})\nSVG.Circle = SVG.invent({\r\n  // Initialize node\r\n  create: 'circle'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create circle element, based on ellipse\r\n    circle: function(size) {\r\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Circle, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n  // Alias radius x value\r\n, ry: function(ry) {\r\n    return this.rx(ry)\r\n  }\r\n})\r\n\r\nSVG.Ellipse = SVG.invent({\r\n  // Initialize node\r\n  create: 'ellipse'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create an ellipse\r\n    ellipse: function(width, height) {\r\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('rx', rx)\r\n  }\r\n  // Radius y value\r\n, ry: function(ry) {\r\n    return this.attr('ry', ry)\r\n  }\r\n})\r\n\r\n// Add common method\r\nSVG.extend(SVG.Circle, SVG.Ellipse, {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.attr('cx') : this.attr('cx', x)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.attr('cy') : this.attr('cy', y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\r\n    }\r\n    // Custom size function\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .rx(new SVG.Number(p.width).divide(2))\r\n        .ry(new SVG.Number(p.height).divide(2))\r\n    }\r\n})\nSVG.Line = SVG.invent({\r\n  // Initialize node\r\n  create: 'line'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Get array\r\n    array: function() {\r\n      return new SVG.PointArray([\r\n        [ this.attr('x1'), this.attr('y1') ]\r\n      , [ this.attr('x2'), this.attr('y2') ]\r\n      ])\r\n    }\r\n    // Overwrite native plot() method\r\n  , plot: function(x1, y1, x2, y2) {\r\n      if (x1 == null)\r\n        return this.array()\r\n      else if (typeof y1 !== 'undefined')\r\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n      else\r\n        x1 = new SVG.PointArray(x1).toLine()\r\n\r\n      return this.attr(x1)\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr(this.array().move(x, y).toLine())\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr(this.array().size(p.width, p.height).toLine())\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a line element\r\n    line: function(x1, y1, x2, y2) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\r\n      return SVG.Line.prototype.plot.apply(\r\n        this.put(new SVG.Line)\r\n      , x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]\r\n      )\r\n    }\r\n  }\r\n})\r\n\nSVG.Polyline = SVG.invent({\r\n  // Initialize node\r\n  create: 'polyline'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polyline element\r\n    polyline: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polyline).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.Polygon = SVG.invent({\r\n  // Initialize node\r\n  create: 'polygon'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polygon element\r\n    polygon: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polygon).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\n// Add polygon-specific functions\r\nSVG.extend(SVG.Polyline, SVG.Polygon, {\r\n  // Get array\r\n  array: function() {\r\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\r\n  }\r\n  // Plot new path\r\n, plot: function(p) {\r\n    return (p == null) ?\r\n      this.array() :\r\n      this.clear().attr('points', typeof p == 'string' ? p : (this._array = new SVG.PointArray(p)))\r\n  }\r\n  // Clear array cache\r\n, clear: function() {\r\n    delete this._array\r\n    return this\r\n  }\r\n  // Move by left top corner\r\n, move: function(x, y) {\r\n    return this.attr('points', this.array().move(x, y))\r\n  }\r\n  // Set element size to given width and height\r\n, size: function(width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n\r\n    return this.attr('points', this.array().size(p.width, p.height))\r\n  }\r\n\r\n})\r\n\n// unify all point to point elements\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\r\n  // Define morphable array\r\n  morphArray:  SVG.PointArray\r\n  // Move by left top corner over x-axis\r\n, x: function(x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n  // Move by left top corner over y-axis\r\n, y: function(y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n  // Set width of element\r\n, width: function(width) {\r\n    var b = this.bbox()\r\n\r\n    return width == null ? b.width : this.size(width, b.height)\r\n  }\r\n  // Set height of element\r\n, height: function(height) {\r\n    var b = this.bbox()\r\n\r\n    return height == null ? b.height : this.size(b.width, height)\r\n  }\r\n})\nSVG.Path = SVG.invent({\r\n  // Initialize node\r\n  create: 'path'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Define morphable array\r\n    morphArray:  SVG.PathArray\r\n    // Get array\r\n  , array: function() {\r\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\r\n    }\r\n    // Plot new path\r\n  , plot: function(d) {\r\n      return (d == null) ?\r\n        this.array() :\r\n        this.clear().attr('d', typeof d == 'string' ? d : (this._array = new SVG.PathArray(d)))\r\n    }\r\n    // Clear array cache\r\n  , clear: function() {\r\n      delete this._array\r\n      return this\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr('d', this.array().move(x, y))\r\n    }\r\n    // Move by left top corner over x-axis\r\n  , x: function(x) {\r\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n    }\r\n    // Move by left top corner over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr('d', this.array().size(p.width, p.height))\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped path element\r\n    path: function(d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Path).plot(d || new SVG.PathArray)\r\n    }\r\n  }\r\n})\r\n\nSVG.Image = SVG.invent({\r\n  // Initialize node\r\n  create: 'image'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // (re)load image\r\n    load: function(url) {\r\n      if (!url) return this\r\n\r\n      var self = this\r\n        , img  = new window.Image()\r\n\r\n      // preload image\r\n      SVG.on(img, 'load', function() {\r\n        SVG.off(img)\r\n\r\n        var p = self.parent(SVG.Pattern)\r\n\r\n        if(p === null) return\r\n\r\n        // ensure image size\r\n        if (self.width() == 0 && self.height() == 0)\r\n          self.size(img.width, img.height)\r\n\r\n        // ensure pattern size if not set\r\n        if (p && p.width() == 0 && p.height() == 0)\r\n          p.size(self.width(), self.height())\r\n\r\n        // callback\r\n        if (typeof self._loaded === 'function')\r\n          self._loaded.call(self, {\r\n            width:  img.width\r\n          , height: img.height\r\n          , ratio:  img.width / img.height\r\n          , url:    url\r\n          })\r\n      })\r\n\r\n      SVG.on(img, 'error', function(e){\r\n        SVG.off(img)\r\n\r\n        if (typeof self._error === 'function'){\r\n            self._error.call(self, e)\r\n        }\r\n      })\r\n\r\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\r\n    }\r\n    // Add loaded callback\r\n  , loaded: function(loaded) {\r\n      this._loaded = loaded\r\n      return this\r\n    }\r\n\r\n  , error: function(error) {\r\n      this._error = error\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // create image element, load image and set its size\r\n    image: function(source, width, height) {\r\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\r\n    }\r\n  }\r\n\r\n})\nSVG.Text = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('text'))\r\n\r\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\r\n    this._rebuild = true                      // enable automatic updating of dy values\r\n    this._build   = false                     // disable build mode for adding multiple lines\r\n\r\n    // set default font\r\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      // act as getter\r\n      if (x == null)\r\n        return this.attr('x')\r\n\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      var oy = this.attr('y')\r\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\r\n\r\n      // act as getter\r\n      if (y == null)\r\n        return typeof oy === 'number' ? oy - o : oy\r\n\r\n      return this.attr('y', typeof y.valueOf() === 'number' ? y + o : y)\r\n    }\r\n    // Move center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\r\n    }\r\n    // Move center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\r\n    }\r\n    // Set the text content\r\n  , text: function(text) {\r\n      // act as getter\r\n      if (typeof text === 'undefined'){\r\n        var text = ''\r\n        var children = this.node.childNodes\r\n        for(var i = 0, len = children.length; i < len; ++i){\r\n\r\n          // add newline if its not the first child and newLined is set to true\r\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\r\n            text += '\\n'\r\n          }\r\n\r\n          // add content of this node\r\n          text += children[i].textContent\r\n        }\r\n\r\n        return text\r\n      }\r\n\r\n      // remove existing content\r\n      this.clear().build(true)\r\n\r\n      if (typeof text === 'function') {\r\n        // call block\r\n        text.call(this, this)\r\n\r\n      } else {\r\n        // store text and make sure text is not blank\r\n        text = text.split('\\n')\r\n\r\n        // build new lines\r\n        for (var i = 0, il = text.length; i < il; i++)\r\n          this.tspan(text[i]).newLine()\r\n      }\r\n\r\n      // disable build mode and rebuild lines\r\n      return this.build(false).rebuild()\r\n    }\r\n    // Set font size\r\n  , size: function(size) {\r\n      return this.attr('font-size', size).rebuild()\r\n    }\r\n    // Set / get leading\r\n  , leading: function(value) {\r\n      // act as getter\r\n      if (value == null)\r\n        return this.dom.leading\r\n\r\n      // act as setter\r\n      this.dom.leading = new SVG.Number(value)\r\n\r\n      return this.rebuild()\r\n    }\r\n    // Get all the first level lines\r\n  , lines: function() {\r\n      var node = (this.textPath && this.textPath() || this).node\r\n\r\n      // filter tspans and map them to SVG.js instances\r\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\r\n        return SVG.adopt(el)\r\n      })\r\n\r\n      // return an instance of SVG.set\r\n      return new SVG.Set(lines)\r\n    }\r\n    // Rebuild appearance type\r\n  , rebuild: function(rebuild) {\r\n      // store new rebuild flag if given\r\n      if (typeof rebuild == 'boolean')\r\n        this._rebuild = rebuild\r\n\r\n      // define position of all lines\r\n      if (this._rebuild) {\r\n        var self = this\r\n          , blankLineOffset = 0\r\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\r\n\r\n        this.lines().each(function() {\r\n          if (this.dom.newLined) {\r\n            if (!self.textPath())\r\n              this.attr('x', self.attr('x'))\r\n            if(this.text() == '\\n') {\r\n              blankLineOffset += dy\r\n            }else{\r\n              this.attr('dy', dy + blankLineOffset)\r\n              blankLineOffset = 0\r\n            }\r\n          }\r\n        })\r\n\r\n        this.fire('rebuild')\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Enable / disable build mode\r\n  , build: function(build) {\r\n      this._build = !!build\r\n      return this\r\n    }\r\n    // overwrite method from parent to set data properly\r\n  , setData: function(o){\r\n      this.dom = o\r\n      this.dom.leading = new SVG.Number(o.leading || 1.3)\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create text element\r\n    text: function(text) {\r\n      return this.put(new SVG.Text).text(text)\r\n    }\r\n    // Create plain text element\r\n  , plain: function(text) {\r\n      return this.put(new SVG.Text).plain(text)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Tspan = SVG.invent({\r\n  // Initialize node\r\n  create: 'tspan'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set text content\r\n    text: function(text) {\r\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n      return this\r\n    }\r\n    // Shortcut dx\r\n  , dx: function(dx) {\r\n      return this.attr('dx', dx)\r\n    }\r\n    // Shortcut dy\r\n  , dy: function(dy) {\r\n      return this.attr('dy', dy)\r\n    }\r\n    // Create new line\r\n  , newLine: function() {\r\n      // fetch text parent\r\n      var t = this.parent(SVG.Text)\r\n\r\n      // mark new line\r\n      this.dom.newLined = true\r\n\r\n      // apply new hy¡n\r\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Text, SVG.Tspan, {\r\n  // Create plain text node\r\n  plain: function(text) {\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // create text node\r\n    this.node.appendChild(document.createTextNode(text))\r\n\r\n    return this\r\n  }\r\n  // Create a tspan\r\n, tspan: function(text) {\r\n    var node  = (this.textPath && this.textPath() || this).node\r\n      , tspan = new SVG.Tspan\r\n\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // add new tspan\r\n    node.appendChild(tspan.node)\r\n\r\n    return tspan.text(text)\r\n  }\r\n  // Clear all lines\r\n, clear: function() {\r\n    var node = (this.textPath && this.textPath() || this).node\r\n\r\n    // remove existing child nodes\r\n    while (node.hasChildNodes())\r\n      node.removeChild(node.lastChild)\r\n\r\n    return this\r\n  }\r\n  // Get length of text element\r\n, length: function() {\r\n    return this.node.getComputedTextLength()\r\n  }\r\n})\r\n\nSVG.TextPath = SVG.invent({\r\n  // Initialize node\r\n  create: 'textPath'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n  // Define parent class\r\n, parent: SVG.Text\r\n\r\n  // Add parent method\r\n, construct: {\r\n    morphArray: SVG.PathArray\r\n    // Create path for text to run on\r\n  , path: function(d) {\r\n      // create textPath element\r\n      var path  = new SVG.TextPath\r\n        , track = this.doc().defs().path(d)\r\n\r\n      // move lines to textpath\r\n      while (this.node.hasChildNodes())\r\n        path.node.appendChild(this.node.firstChild)\r\n\r\n      // add textPath element as child node\r\n      this.node.appendChild(path.node)\r\n\r\n      // link textPath to path and add content\r\n      path.attr('href', '#' + track, SVG.xlink)\r\n\r\n      return this\r\n    }\r\n    // return the array of the path track element\r\n  , array: function() {\r\n      var track = this.track()\r\n\r\n      return track ? track.array() : null\r\n    }\r\n    // Plot path if any\r\n  , plot: function(d) {\r\n      var track = this.track()\r\n        , pathArray = null\r\n\r\n      if (track) {\r\n        pathArray = track.plot(d)\r\n      }\r\n\r\n      return (d == null) ? pathArray : this\r\n    }\r\n    // Get the path track element\r\n  , track: function() {\r\n      var path = this.textPath()\r\n\r\n      if (path)\r\n        return path.reference('href')\r\n    }\r\n    // Get the textPath child\r\n  , textPath: function() {\r\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\r\n        return SVG.adopt(this.node.firstChild)\r\n    }\r\n  }\r\n})\r\n\nSVG.Nested = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('svg'))\r\n\r\n    this.style('overflow', 'visible')\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create nested svg document\r\n    nested: function() {\r\n      return this.put(new SVG.Nested)\r\n    }\r\n  }\r\n})\nSVG.A = SVG.invent({\r\n  // Initialize node\r\n  create: 'a'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Link url\r\n    to: function(url) {\r\n      return this.attr('href', url, SVG.xlink)\r\n    }\r\n    // Link show attribute\r\n  , show: function(target) {\r\n      return this.attr('show', target, SVG.xlink)\r\n    }\r\n    // Link target attribute\r\n  , target: function(target) {\r\n      return this.attr('target', target)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a hyperlink element\r\n    link: function(url) {\r\n      return this.put(new SVG.A).to(url)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Create a hyperlink element\r\n  linkTo: function(url) {\r\n    var link = new SVG.A\r\n\r\n    if (typeof url == 'function')\r\n      url.call(link, link)\r\n    else\r\n      link.to(url)\r\n\r\n    return this.parent().put(link).put(this)\r\n  }\r\n\r\n})\nSVG.Marker = SVG.invent({\r\n  // Initialize node\r\n  create: 'marker'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set width of element\r\n    width: function(width) {\r\n      return this.attr('markerWidth', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('markerHeight', height)\r\n    }\r\n    // Set marker refX and refY\r\n  , ref: function(x, y) {\r\n      return this.attr('refX', x).attr('refY', y)\r\n    }\r\n    // Update marker\r\n  , update: function(block) {\r\n      // remove all content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , toString: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    marker: function(width, height, block) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(width, height, block)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Create marker\r\n  marker: function(width, height, block) {\r\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n    return this.put(new SVG.Marker)\r\n      .size(width, height)\r\n      .ref(width / 2, height / 2)\r\n      .viewbox(0, 0, width, height)\r\n      .attr('orient', 'auto')\r\n      .update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\r\n  // Create and attach markers\r\n  marker: function(marker, width, height, block) {\r\n    var attr = ['marker']\r\n\r\n    // Build attribute name\r\n    if (marker != 'all') attr.push(marker)\r\n    attr = attr.join('-')\r\n\r\n    // Set marker attribute\r\n    marker = arguments[1] instanceof SVG.Marker ?\r\n      arguments[1] :\r\n      this.doc().marker(width, height, block)\r\n\r\n    return this.attr(attr, marker)\r\n  }\r\n\r\n})\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\r\n, fill:   ['color', 'opacity', 'rule']\r\n, prefix: function(t, a) {\r\n    return a == 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;['fill', 'stroke'].forEach(function(m) {\r\n  var i, extension = {}\r\n\r\n  extension[m] = function(o) {\r\n    if (typeof o == 'undefined')\r\n      return this\r\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\r\n      this.attr(m, o)\r\n\r\n    else\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--)\r\n        if (o[sugar[m][i]] != null)\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n\r\n    return this\r\n  }\r\n\r\n  SVG.extend(SVG.Element, SVG.FX, extension)\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, SVG.FX, {\r\n  // Map rotation to transform\r\n  rotate: function(d, cx, cy) {\r\n    return this.transform({ rotation: d, cx: cx, cy: cy })\r\n  }\r\n  // Map skew to transform\r\n, skew: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ skew: x, cx: y, cy: cx }) :\r\n      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map scale to transform\r\n, scale: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ scale: x, cx: y, cy: cx }) :\r\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map translate to transform\r\n, translate: function(x, y) {\r\n    return this.transform({ x: x, y: y })\r\n  }\r\n  // Map flip to transform\r\n, flip: function(a, o) {\r\n    o = typeof a == 'number' ? a : o\r\n    return this.transform({ flip: a || 'both', offset: o })\r\n  }\r\n  // Map matrix to transform\r\n, matrix: function(m) {\r\n    return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m))\r\n  }\r\n  // Opacity\r\n, opacity: function(value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n  // Relative move over x axis\r\n, dx: function(x) {\r\n    return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true)\r\n  }\r\n  // Relative move over y axis\r\n, dy: function(y) {\r\n    return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true)\r\n  }\r\n  // Relative move over x and y axes\r\n, dmove: function(x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\r\n  // Add x and y radius\r\n  radius: function(x, y) {\r\n    var type = (this._target || this).type;\r\n    return type == 'radial' || type == 'circle' ?\r\n      this.attr('r', new SVG.Number(x)) :\r\n      this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Path, {\r\n  // Get path length\r\n  length: function() {\r\n    return this.node.getTotalLength()\r\n  }\r\n  // Get point at length\r\n, pointAt: function(length) {\r\n    return this.node.getPointAtLength(length)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\r\n  // Set font\r\n  font: function(a, v) {\r\n    if (typeof a == 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n    }\r\n\r\n    return a == 'leading' ?\r\n        this.leading(v) :\r\n      a == 'anchor' ?\r\n        this.attr('text-anchor', v) :\r\n      a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ?\r\n        this.attr('font-'+ a, v) :\r\n        this.attr(a, v)\r\n  }\r\n})\r\n\nSVG.Set = SVG.invent({\r\n  // Initialize\r\n  create: function(members) {\r\n    // Set initial state\r\n    Array.isArray(members) ? this.members = members : this.clear()\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add element to set\r\n    add: function() {\r\n      var i, il, elements = [].slice.call(arguments)\r\n\r\n      for (i = 0, il = elements.length; i < il; i++)\r\n        this.members.push(elements[i])\r\n\r\n      return this\r\n    }\r\n    // Remove element from set\r\n  , remove: function(element) {\r\n      var i = this.index(element)\r\n\r\n      // remove given child\r\n      if (i > -1)\r\n        this.members.splice(i, 1)\r\n\r\n      return this\r\n    }\r\n    // Iterate over all members\r\n  , each: function(block) {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        block.apply(this.members[i], [i, this.members])\r\n\r\n      return this\r\n    }\r\n    // Restore to defaults\r\n  , clear: function() {\r\n      // initialize store\r\n      this.members = []\r\n\r\n      return this\r\n    }\r\n    // Get the length of a set\r\n  , length: function() {\r\n      return this.members.length\r\n    }\r\n    // Checks if a given element is present in set\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // retuns index of given element in set\r\n  , index: function(element) {\r\n      return this.members.indexOf(element)\r\n    }\r\n    // Get member at given index\r\n  , get: function(i) {\r\n      return this.members[i]\r\n    }\r\n    // Get first member\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get last member\r\n  , last: function() {\r\n      return this.get(this.members.length - 1)\r\n    }\r\n    // Default value\r\n  , valueOf: function() {\r\n      return this.members\r\n    }\r\n    // Get the bounding box of all members included or empty box if set has no items\r\n  , bbox: function(){\r\n      // return an empty box of there are no members\r\n      if (this.members.length == 0)\r\n        return new SVG.RBox()\r\n\r\n      // get the first rbox and update the target bbox\r\n      var rbox = this.members[0].rbox(this.members[0].doc())\r\n\r\n      this.each(function() {\r\n        // user rbox for correct position and visual representation\r\n        rbox = rbox.merge(this.rbox(this.doc()))\r\n      })\r\n\r\n      return rbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a new set\r\n    set: function(members) {\r\n      return new SVG.Set(members)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.FX.Set = SVG.invent({\r\n  // Initialize node\r\n  create: function(set) {\r\n    // store reference to set\r\n    this.set = set\r\n  }\r\n\r\n})\r\n\r\n// Alias methods\r\nSVG.Set.inherit = function() {\r\n  var m\r\n    , methods = []\r\n\r\n  // gather shape methods\r\n  for(var m in SVG.Shape.prototype)\r\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply shape aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        if (this.members[i] && typeof this.members[i][method] == 'function')\r\n          this.members[i][method].apply(this.members[i], arguments)\r\n\r\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\r\n    }\r\n  })\r\n\r\n  // clear methods for the next round\r\n  methods = []\r\n\r\n  // gather fx methods\r\n  for(var m in SVG.FX.prototype)\r\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply fx aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.FX.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.set.members.length; i < il; i++)\r\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\r\n\r\n      return this\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\n\r\nSVG.extend(SVG.Element, {\r\n  // Store data values on svg nodes\r\n  data: function(a, v, r) {\r\n    if (typeof a == 'object') {\r\n      for (v in a)\r\n        this.data(v, a[v])\r\n\r\n    } else if (arguments.length < 2) {\r\n      try {\r\n        return JSON.parse(this.attr('data-' + a))\r\n      } catch(e) {\r\n        return this.attr('data-' + a)\r\n      }\r\n\r\n    } else {\r\n      this.attr(\r\n        'data-' + a\r\n      , v === null ?\r\n          null :\r\n        r === true || typeof v === 'string' || typeof v === 'number' ?\r\n          v :\r\n          JSON.stringify(v)\r\n      )\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Remember arbitrary data\r\n  remember: function(k, v) {\r\n    // remember every item in an object individually\r\n    if (typeof arguments[0] == 'object')\r\n      for (var v in k)\r\n        this.remember(v, k[v])\r\n\r\n    // retrieve memory\r\n    else if (arguments.length == 1)\r\n      return this.memory()[k]\r\n\r\n    // store memory\r\n    else\r\n      this.memory()[k] = v\r\n\r\n    return this\r\n  }\r\n\r\n  // Erase a given memory\r\n, forget: function() {\r\n    if (arguments.length == 0)\r\n      this._memory = {}\r\n    else\r\n      for (var i = arguments.length - 1; i >= 0; i--)\r\n        delete this.memory()[arguments[i]]\r\n\r\n    return this\r\n  }\r\n\r\n  // Initialize or return local memory object\r\n, memory: function() {\r\n    return this._memory || (this._memory = {})\r\n  }\r\n\r\n})\n// Method for getting an element by id\r\nSVG.get = function(id) {\r\n  var node = document.getElementById(idFromReference(id) || id)\r\n  return SVG.adopt(node)\r\n}\r\n\r\n// Select elements by query string\r\nSVG.select = function(query, parent) {\r\n  return new SVG.Set(\r\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\r\n      return SVG.adopt(node)\r\n    })\r\n  )\r\n}\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Scoped select method\r\n  select: function(query) {\r\n    return SVG.select(query, this.node)\r\n  }\r\n\r\n})\nfunction pathRegReplace(a, b, c, d) {\r\n  return c + d.replace(SVG.regex.dots, ' .')\r\n}\r\n\r\n// creates deep clone of array\r\nfunction array_clone(arr){\r\n  var clone = arr.slice(0)\r\n  for(var i = clone.length; i--;){\r\n    if(Array.isArray(clone[i])){\r\n      clone[i] = array_clone(clone[i])\r\n    }\r\n  }\r\n  return clone\r\n}\r\n\r\n// tests if a given element is instance of an object\r\nfunction is(el, obj){\r\n  return el instanceof obj\r\n}\r\n\r\n// tests if a given selector matches an element\r\nfunction matches(el, selector) {\r\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nfunction camelCase(s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nfunction capitalize(s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Ensure to six-based hex\r\nfunction fullHex(hex) {\r\n  return hex.length == 4 ?\r\n    [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2)\r\n    , hex.substring(2, 3), hex.substring(2, 3)\r\n    , hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('') : hex\r\n}\r\n\r\n// Component to hex value\r\nfunction compToHex(comp) {\r\n  var hex = comp.toString(16)\r\n  return hex.length == 1 ? '0' + hex : hex\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nfunction proportionalSize(element, width, height) {\r\n  if (width == null || height == null) {\r\n    var box = element.bbox()\r\n\r\n    if (width == null)\r\n      width = box.width / box.height * height\r\n    else if (height == null)\r\n      height = box.height / box.width * width\r\n  }\r\n\r\n  return {\r\n    width:  width\r\n  , height: height\r\n  }\r\n}\r\n\r\n// Delta transform point\r\nfunction deltaTransformPoint(matrix, x, y) {\r\n  return {\r\n    x: x * matrix.a + y * matrix.c + 0\r\n  , y: x * matrix.b + y * matrix.d + 0\r\n  }\r\n}\r\n\r\n// Map matrix array to object\r\nfunction arrayToMatrix(a) {\r\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n}\r\n\r\n// Parse matrix if required\r\nfunction parseMatrix(matrix) {\r\n  if (!(matrix instanceof SVG.Matrix))\r\n    matrix = new SVG.Matrix(matrix)\r\n\r\n  return matrix\r\n}\r\n\r\n// Add centre point to transform object\r\nfunction ensureCentre(o, target) {\r\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\r\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\r\n}\r\n\r\n// PathArray Helpers\r\nfunction arrayToString(a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\n// Deep new id assignment\r\nfunction assignNewId(node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\r\n    if (node.childNodes[i] instanceof window.SVGElement)\r\n      assignNewId(node.childNodes[i])\r\n\r\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\r\n}\r\n\r\n// Add more bounding box properties\r\nfunction fullBox(b) {\r\n  if (b.x == null) {\r\n    b.x      = 0\r\n    b.y      = 0\r\n    b.width  = 0\r\n    b.height = 0\r\n  }\r\n\r\n  b.w  = b.width\r\n  b.h  = b.height\r\n  b.x2 = b.x + b.width\r\n  b.y2 = b.y + b.height\r\n  b.cx = b.x + b.width / 2\r\n  b.cy = b.y + b.height / 2\r\n\r\n  return b\r\n}\r\n\r\n// Get id from reference string\r\nfunction idFromReference(url) {\r\n  var m = (url || '').toString().match(SVG.regex.reference)\r\n\r\n  if (m) return m[1]\r\n}\r\n\r\n// If values like 1e-88 are passed, this is not a valid 32 bit float,\r\n// but in those cases, we are so close to 0 that 0 works well!\r\nfunction float32String(v) {\r\n  return Math.abs(v) > 1e-37 ? v : 0\r\n}\r\n\r\n// Create matrix array for looping\r\nvar abcdef = 'abcdef'.split('')\r\n\n// Add CustomEvent to IE9 and IE10\r\nif (typeof window.CustomEvent !== 'function') {\r\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n  var CustomEventPoly = function(event, options) {\r\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\r\n    var e = document.createEvent('CustomEvent')\r\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\r\n    return e\r\n  }\r\n\r\n  CustomEventPoly.prototype = window.Event.prototype\r\n\r\n  SVG.CustomEvent = CustomEventPoly\r\n} else {\r\n  SVG.CustomEvent = window.CustomEvent\r\n}\r\n\r\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\r\n(function(w) {\r\n  var lastTime = 0\r\n  var vendors = ['moz', 'webkit']\r\n\r\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\r\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\r\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\r\n  }\r\n\r\n  w.requestAnimationFrame = w.requestAnimationFrame ||\r\n    function(callback) {\r\n      var currTime = new Date().getTime()\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n      var id = w.setTimeout(function() {\r\n        callback(currTime + timeToCall)\r\n      }, timeToCall)\r\n\r\n      lastTime = currTime + timeToCall\r\n      return id\r\n    }\r\n\r\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\r\n\r\n}(window))\r\n\r\nreturn SVG\r\n\r\n}));\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/svg.js/dist/svg.js\n// module id = or9x\n// module chunks = 1 8","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hammerjs/hammer.js\n// module id = rxKx\n// module chunks = 1 8"],"sourceRoot":""}